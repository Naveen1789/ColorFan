"use strict";

/* jshint ignore:start */



/* jshint ignore:end */

define('goods-gateway/app', ['exports', 'ember', 'goods-gateway/resolver', 'ember-load-initializers', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayResolver, _emberLoadInitializers, _goodsGatewayConfigEnvironment) {

  var App = undefined;

  _ember['default'].MODEL_FACTORY_INJECTIONS = true;

  App = _ember['default'].Application.extend({
    modulePrefix: _goodsGatewayConfigEnvironment['default'].modulePrefix,
    podModulePrefix: _goodsGatewayConfigEnvironment['default'].podModulePrefix,
    Resolver: _goodsGatewayResolver['default']
  });

  (0, _emberLoadInitializers['default'])(App, _goodsGatewayConfigEnvironment['default'].modulePrefix);

  exports['default'] = App;
});
define('goods-gateway/application/adapter', ['exports', 'ember', 'ember-data'], function (exports, _ember, _emberData) {
  exports['default'] = _emberData['default'].RESTAdapter.extend({
    // dependencies
    flash: _ember['default'].inject.service('flashMessages'),
    i18n: _ember['default'].inject.service(),

    // args
    updateOptions: null, // see initialization to prevent pollution
    queryParams: null, // see initialization to prevent pollution

    init: function init() {
      this._super.apply(this, arguments);

      var updateOptions = this.get('updateOptions') || {};
      this.set('updateOptions', _ember['default'].$.extend({
        method: 'PUT',
        excludeId: false
      }, updateOptions));

      if (!this.get('queryParams')) {
        this.set('queryParams', {});
      }
    },

    // hooks
    shouldBackgroundReloadRecord: function shouldBackgroundReloadRecord() {
      return false;
    },

    updateRecord: function updateRecord(store, type, record) {
      var data, serializer, id;
      data = {};
      serializer = store.serializerFor(type.modelName);
      serializer.serializeIntoHash(data, type, record);
      id = this.updateOptions.excludeId ? null : record.id;
      return this.ajax(this.buildURL(type.modelName, id, record, 'updateRecord'), this.updateOptions.method, { data: data });
    },

    // helpers
    isNewAdapterAPI: true,

    ajax: function ajax(url, type, hash) {
      var _this = this;

      if (type === 'GET') {
        if (_ember['default'].isEmpty(hash)) {
          hash = {};
        }
        if (_ember['default'].isEmpty(hash.data)) {
          hash.data = {};
        }
        for (var key in this.queryParams) {
          hash.data[key] = this.queryParams[key];
        }
      }

      return this._super(url, type, hash)['catch'](function (error) {
        if (error instanceof _emberData['default'].TimeoutError) {
          _this._flashTimeout();
        }
        throw error;
      });
    },

    isInvalid: function isInvalid(status, headers, payload, ignoreErrors) {
      var requestId = headers['X-Request-Id'] || headers['x-request-id']; // in dev, Ember proxy downcases header names
      if (!ignoreErrors) {
        this._flashInvalid(status, payload, requestId);
      }
      return this._super(status, headers, payload);
    },

    _flashError: function _flashError(message) {
      var _this2 = this;

      _ember['default'].run(function () {
        _this2.get('flash').add({
          message: message,
          type: 'error'
        });
      });
    },

    _flashInvalid: function _flashInvalid(status, payload, requestId) {
      var _this3 = this;

      var message = undefined;
      if (this._isGpapiError(payload)) {
        message = this._gpapiErrorMessage(status, payload);
      } else {
        message = this._genericErrorMessage(status, payload);
      }

      if (_ember['default'].isBlank(message)) {
        message = this.get('i18n').t('application.adapter.defaultError').toString();
      }

      // No timeout, copyable, with close icon
      _ember['default'].run(function () {
        _this3.get('flash').add({
          message: message,
          type: 'error',
          requestId: _this3._presentableRequestId(requestId),
          sticky: true
        });
      });
    },

    _isGpapiError: function _isGpapiError(payload) {
      return payload.hasOwnProperty('errors') && payload.errors[0] && payload.errors[0].message !== null;
    },

    _gpapiErrorMessage: function _gpapiErrorMessage(status, payload) {
      var separator = this.get('i18n').t('syntaxConfig.listSeparator');
      return payload.errors.mapBy('message').join(separator);
    },

    _genericErrorMessage: function _genericErrorMessage(status, payload) {
      var type = _ember['default'].typeOf(payload.error);
      var i18n = this.get('i18n');

      if (status === 403) {
        return i18n.t('errors.forbidden').string;
      } else if (type === 'string') {
        return payload.error;
      } else if (type === 'object') {
        return payload.error.message;
      } else if (type === 'array') {
        return payload.error.join(', ');
      }

      return status + ': ' + payload;
    },

    _flashTimeout: function _flashTimeout() {
      var message = this.get('i18n').t('errors.generic').string;
      this._flashError(message);
    },

    _presentableRequestId: function _presentableRequestId(rawRequestId) {
      return rawRequestId ? rawRequestId.split(',').map(function (i) {
        return i.trim();
      }).uniq().join(', ') : null;
    }
  });
});
define('goods-gateway/application/custom-validator', ['exports', 'ember-validations/validators/base'], function (exports, _emberValidationsValidatorsBase) {
  exports['default'] = _emberValidationsValidatorsBase['default'].extend({
    init: function init() {
      this._super.apply(this, arguments);
      this.set('i18n', this.get('container').lookup('service:i18n'));
    }
  });
});
define('goods-gateway/application/root-meta-serializer', ['exports', 'goods-gateway/application/serializer'], function (exports, _goodsGatewayApplicationSerializer) {

  // When an API returns meta information like 'total' as a root key instead of in a 'meta' object.
  // Define 'metaKeys' in the model's serializer and extend this, e.g.
  // import RootMetaSerializer from 'goods-gateway/application/root-meta-serializer';
  // export default PortalSerializer.extend({
  //   metaKeys: ['total']
  // })

  exports['default'] = _goodsGatewayApplicationSerializer['default'].extend({
    metaKeys: [],
    extractMeta: function extractMeta(store, type, payload) {
      var modelName, meta;

      meta = {};
      if (!payload) {
        return meta;
      }

      modelName = type.modelName.camelize();
      for (var key in payload) {
        if (this.metaKeys.indexOf(key) >= 0) {
          meta[key] = payload[key];
        }
        if (key !== modelName && key !== modelName.pluralize()) {
          delete payload[key];
        }
      }
      return meta;
    }
  });
});
define('goods-gateway/application/route', ['exports', 'ember', 'ember-simple-auth/mixins/application-route-mixin'], function (exports, _ember, _emberSimpleAuthMixinsApplicationRouteMixin) {
  exports['default'] = _ember['default'].Route.extend(_emberSimpleAuthMixinsApplicationRouteMixin['default'], {
    applicationState: _ember['default'].inject.service(),

    model: function model() {
      return _ember['default'].RSVP.hash({
        applicationState: this.get('applicationState')
      });
    }
  });
});
define('goods-gateway/application/serializer', ['exports', 'ember-data'], function (exports, _emberData) {
  exports['default'] = _emberData['default'].RESTSerializer.extend({
    isNewSerializerAPI: true,

    normalizeSingleResponse: function normalizeSingleResponse(store, primaryType, payload, recordId) {
      if (this.apiRoot) {
        var modelName = primaryType.modelName.camelize();
        payload[modelName] = payload[this.apiRoot];
        delete payload[this.apiRoot];
      }
      return this._super(store, primaryType, payload, recordId);
    },

    normalizeQueryResponse: function normalizeQueryResponse(store, primaryType, payload, recordId) {
      if (this.apiRoot) {
        var modelName = primaryType.modelName.camelize().pluralize();
        payload[modelName] = payload[this.apiRoot.pluralize()];
        delete payload[this.apiRoot];
      }
      return this._super(store, primaryType, payload, recordId);
    },

    serializeIntoHash: function serializeIntoHash(hash, type, record, options) {
      var root = this.apiRoot ? this.apiRoot : type.modelName.camelize();
      hash[root] = this.serialize(record, options);
    }
  });
});
define("goods-gateway/application/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/application/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-flashes", [], ["id", "flashes"], ["loc", [null, [4, 2], [4, 29]]], 0, 0], ["content", "outlet", ["loc", [null, [6, 2], [6, 12]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/application/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["inline", "page-title", [["subexpr", "t", ["titles.application"], [], ["loc", [null, [1, 8], [1, 32]]], 0, 0]], [], ["loc", [null, [1, 0], [1, 34]]], 0, 0], ["block", "vp-application-container", [], [], 0, null, ["loc", [null, [3, 0], [7, 29]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/attachment/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: 'goods-gateway/proxy/gpapi/v1'
  });
});
define('goods-gateway/attachment/model', ['exports', 'ember', 'ember-data', 'ember-validations', 'goods-gateway/constants/regexes', 'goods-gateway/utils/parse-uri'], function (exports, _ember, _emberData, _emberValidations, _goodsGatewayConstantsRegexes, _goodsGatewayUtilsParseUri) {

  var URL_VALIDATION = {
    presence: true,
    'vp-format': {
      'with': _goodsGatewayConstantsRegexes.URL_REGEX,
      allowBlank: false,
      translationKey: 'url'
    }
  };

  exports['default'] = _emberData['default'].Model.extend(_emberValidations['default'], {
    i18n: _ember['default'].inject.service(),
    product: _emberData['default'].belongsTo('product'),

    attachmentType: _emberData['default'].attr('string'),
    sourceUri: _emberData['default'].attr('string'),
    cdnUri: _emberData['default'].attr('string'),
    filename: _emberData['default'].attr('string'),
    locale: _emberData['default'].attr('string'),
    createdAt: _emberData['default'].attr('date'),
    updatedAt: _emberData['default'].attr('date'),

    inferredFilename: _ember['default'].computed('sourceUri', function () {
      if (this.get('filename')) {
        return this.get('filename');
      }
      var parsedSourceUri = (0, _goodsGatewayUtilsParseUri['default'])(this.get('sourceUri')).file || this.get('i18n').t('models.attachment.noFileName');
      return parsedSourceUri;
    }),

    downloadLocation: _ember['default'].computed('cdnUri', 'sourceUri', function () {
      if (this.get('cdnUri')) {
        return this.get('cdnUri');
      }
      if (this.get('sourceUri')) {
        return this.get('sourceUri');
      }
      return null;
    }),

    validations: {
      sourceUri: URL_VALIDATION
    }
  });
});
define('goods-gateway/auth/forgot-password/route', ['exports', 'ember'], function (exports, _ember) {

  var forgotEndpoint = '/goods-gateway/proxy/gpapi/v1/sessions/forgot_password';

  exports['default'] = _ember['default'].Route.extend({
    request: _ember['default'].inject.service(),
    flash: _ember['default'].inject.service('flashMessages'),
    i18n: _ember['default'].inject.service(),

    actions: {
      sendReset: function sendReset() {
        var _this = this;

        var options = {
          data: {
            email: this.get('currentModel.email')
          }
        };
        this.get('request').POST(forgotEndpoint, options).then(function () {
          _this.get('flash').add({
            message: _this.get('i18n').t('auth.forgotPassword.confirmation'),
            type: 'alert-success'
          });
        }, function () {
          _this.get('flash').add({
            message: _this.get('i18n').t('auth.forgotPassword.failure'),
            type: 'alert-error'
          });
        });
      }
    }
  });
});
define("goods-gateway/auth/forgot-password/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 2
            },
            "end": {
              "line": 10,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/auth/forgot-password/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "href", "https://forgot.grouponinc.net/pwm/public/ForgottenPassword");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["auth.forgotPassword.resetViaOkta"], [], ["loc", [null, [8, 6], [8, 46]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 2
            },
            "end": {
              "line": 12,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/auth/forgot-password/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "mx-submit", [], ["fullWidth", true, "submitTranslation", ["subexpr", "t", ["auth.forgotPassword.button"], [], ["loc", [null, [11, 49], [11, 81]]], 0, 0]], ["loc", [null, [11, 4], [11, 83]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/auth/forgot-password/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "class", "md-column--1of2 center");
        dom.setAttribute(el1, "id", "forgot-password-container");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(4);
        morphs[0] = dom.createElementMorph(element0);
        morphs[1] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
        morphs[2] = dom.createMorphAt(element0, 3, 3);
        morphs[3] = dom.createMorphAt(element0, 5, 5);
        return morphs;
      },
      statements: [["element", "action", ["sendReset"], ["on", "submit"], ["loc", [null, [1, 68], [1, 102]]], 0, 0], ["inline", "t", ["auth.forgotPassword.introExplanation"], [], ["loc", [null, [3, 4], [3, 48]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "auth.forgotPassword", "key", "email", "model", ["subexpr", "@mut", [["get", "model", ["loc", [null, [5, 59], [5, 64]]], 0, 0, 0, 0]], [], [], 0, 0], "type", "email"], ["loc", [null, [5, 2], [5, 79]]], 0, 0], ["block", "if", [["get", "model.isInternal", ["loc", [null, [6, 8], [6, 24]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [6, 2], [12, 9]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/auth/login/route', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  exports['default'] = _ember['default'].Route.extend({
    session: _ember['default'].inject.service(),

    beforeModel: function beforeModel() {
      if (!this.get('session').get('isAuthenticated')) {
        this.get('session').authenticate('authenticator:gingerbread', {});
      } else {
        this.transitionTo(_goodsGatewayConfigEnvironment['default']['ember-simple-auth'].routeIfAlreadyAuthenticated);
      }
    },

    actions: {
      authenticate: function authenticate() {
        if (this.get('currentModel.isInternal')) {
          // Send to Doorman
          window.location.assign(_goodsGatewayConfigEnvironment['default'].doormanLink);
        } else {
          // Password auth
          var options = {
            email: this.get('currentModel.email'),
            password: this.get('currentModel.password')
          };
          this.get('session').authenticate('authenticator:gingerbread', options);
        }
      }
    }
  });
});
define("goods-gateway/auth/login/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 4
            },
            "end": {
              "line": 7,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/auth/login/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-field", [], ["tRoot", "auth.login", "key", "password", "model", ["subexpr", "@mut", [["get", "model", ["loc", [null, [6, 57], [6, 62]]], 0, 0, 0, 0]], [], [], 0, 0], "type", "password"], ["loc", [null, [6, 6], [6, 80]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 15,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/auth/login/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["auth.login.forgotPasswordLink"], [], ["loc", [null, [14, 2], [14, 39]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/auth/login/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("section");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("form");
        dom.setAttribute(el2, "class", "center");
        dom.setAttribute(el2, "id", "login-container");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0, 1]);
        var morphs = new Array(5);
        morphs[0] = dom.createElementMorph(element0);
        morphs[1] = dom.createMorphAt(element0, 1, 1);
        morphs[2] = dom.createMorphAt(element0, 3, 3);
        morphs[3] = dom.createMorphAt(element0, 5, 5);
        morphs[4] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["element", "action", ["authenticate"], ["on", "submit"], ["loc", [null, [2, 44], [2, 81]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "auth.login", "key", "email", "model", ["subexpr", "@mut", [["get", "model", ["loc", [null, [3, 52], [3, 57]]], 0, 0, 0, 0]], [], [], 0, 0], "type", "email"], ["loc", [null, [3, 4], [3, 72]]], 0, 0], ["block", "unless", [["get", "model.isInternal", ["loc", [null, [5, 14], [5, 30]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [5, 4], [7, 15]]]], ["inline", "mx-submit", [], ["fullWidth", true, "submitTranslation", ["subexpr", "t", ["auth.login.button"], [], ["loc", [null, [9, 49], [9, 72]]], 0, 0]], ["loc", [null, [9, 4], [9, 74]]], 0, 0], ["block", "link-to", ["auth.forgot-password"], [], 1, null, ["loc", [null, [13, 0], [15, 12]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/auth/reset-password/controller', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Controller.extend({
    queryParams: ['nonce']
  });
});
define('goods-gateway/auth/reset-password/route', ['exports', 'ember'], function (exports, _ember) {

  var resetEndpoint = '/goods-gateway/proxy/gpapi/v1/sessions/reset_password_from_nonce';

  exports['default'] = _ember['default'].Route.extend({
    flash: _ember['default'].inject.service('flashMessages'),
    i18n: _ember['default'].inject.service(),
    request: _ember['default'].inject.service(),
    session: _ember['default'].inject.service(),

    queryParams: {
      nonce: { refreshModel: true }
    },

    model: function model(params) {
      var _this = this;
      return _ember['default'].Object.extend({
        password: '',
        passwordRepeat: '',
        hasAcceptedTerms: false,
        errors: _ember['default'].computed('password', 'passwordRepeat', function () {
          if (this.get('password') === this.get('passwordRepeat')) {
            return;
          }

          return [_this.get('i18n').t('auth.resetPassword.mismatch')];
        }),
        hasErrors: _ember['default'].computed('errors', function () {
          return this.get('errors.length') > 0;
        }),
        isIncomplete: _ember['default'].computed('hasErrors', 'hasAcceptedTerms', function () {
          return this.get('hasErrors') || !this.get('hasAcceptedTerms');
        }),
        nonce: params.nonce,
        resetSent: false
      }).create();
    },

    actions: {
      sendReset: function sendReset() {
        var _this2 = this;

        var options = {
          data: {
            nonce: this.get('currentModel.nonce'),
            new_password: this.get('currentModel.password')
          }
        };

        if (this.get('resetSent')) {
          return;
        }

        if (this.get('currentModel.hasErrors')) {
          this.get('flash').add({
            message: this.get('i18n').t('auth.resetPassword.mismatch'),
            type: 'alert-error'
          });
          return;
        }

        this.set('resetSent', true);

        this.get('request').POST(resetEndpoint, options).then(function () {
          _this2.get('flash').add({
            message: _this2.get('i18n').t('auth.resetPassword.confirmation'),
            type: 'alert-success'
          });
          // Cookie should be set, try authentication
          _this2.get('session').authenticate('authenticator:gingerbread', {});
        }, function () {
          _this2.get('flash').add({
            message: _this2.get('i18n').t('auth.resetPassword.failure'),
            type: 'alert-error'
          });
        });
      }
    }
  });
});
define("goods-gateway/auth/reset-password/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/auth/reset-password/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "class", "md-column--1of2 center");
        dom.setAttribute(el1, "id", "reset-password-container");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(6);
        morphs[0] = dom.createElementMorph(element0);
        morphs[1] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
        morphs[2] = dom.createMorphAt(element0, 3, 3);
        morphs[3] = dom.createMorphAt(element0, 5, 5);
        morphs[4] = dom.createMorphAt(element0, 7, 7);
        morphs[5] = dom.createMorphAt(element0, 9, 9);
        return morphs;
      },
      statements: [["element", "action", ["sendReset"], ["on", "submit"], ["loc", [null, [1, 67], [1, 101]]], 0, 0], ["inline", "t", ["auth.resetPassword.introExplanation"], [], ["loc", [null, [3, 4], [3, 47]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "auth.resetPassword", "key", "password", "model", ["subexpr", "@mut", [["get", "model", ["loc", [null, [6, 61], [6, 66]]], 0, 0, 0, 0]], [], [], 0, 0], "type", "password"], ["loc", [null, [6, 2], [6, 84]]], 0, 0], ["inline", "vp-field", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [7, 20], [7, 32]]], 0, 0, 0, 0]], [], [], 0, 0], "tRoot", "auth.resetPassword", "key", "passwordRepeat", "model", ["subexpr", "@mut", [["get", "model", ["loc", [null, [7, 87], [7, 92]]], 0, 0, 0, 0]], [], [], 0, 0], "type", "password"], ["loc", [null, [7, 2], [7, 110]]], 0, 0], ["inline", "vp-terms-of-use-checkbox", [], ["key", "hasAcceptedTerms", "model", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 58], [8, 63]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [8, 2], [8, 65]]], 0, 0], ["inline", "mx-submit", [], ["fullWidth", true, "disabled", ["subexpr", "@mut", [["get", "model.isIncomplete", ["loc", [null, [10, 38], [10, 56]]], 0, 0, 0, 0]], [], [], 0, 0], "submitTranslation", ["subexpr", "t", ["auth.resetPassword.button"], [], ["loc", [null, [10, 75], [10, 106]]], 0, 0]], ["loc", [null, [10, 2], [10, 108]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/auth/route', ['exports', 'ember', 'ember-simple-auth/mixins/unauthenticated-route-mixin'], function (exports, _ember, _emberSimpleAuthMixinsUnauthenticatedRouteMixin) {

  var suffix = /^[^\+]+@groupon.com$/;

  exports['default'] = _ember['default'].Route.extend(_emberSimpleAuthMixinsUnauthenticatedRouteMixin['default'], {
    model: function model() {
      return _ember['default'].Object.extend({
        email: '',
        password: '',
        isInternal: _ember['default'].computed('email', function () {
          // Ends with suffix?
          var email = this.get('email');
          return suffix.test(email);
        })
      }).create();
    }
  });
});
define("goods-gateway/auth/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 15,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/auth/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h1");
          dom.setAttribute(el1, "class", "text-center");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "mx-icon-mpetus mx-icon-64");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "logo icon-groupon groupon-green");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 3]), 1, 1);
          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["app.title"], [], ["loc", [null, [10, 8], [10, 25]]], 0, 0], ["content", "outlet", ["loc", [null, [14, 4], [14, 14]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/auth/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("main");
        dom.setAttribute(el1, "id", "login");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(element0, 1, 1);
        morphs[1] = dom.createMorphAt(element0, 3, 3);
        return morphs;
      },
      statements: [["content", "vp-login-background", ["loc", [null, [2, 2], [2, 25]]], 0, 0, 0, 0], ["block", "mx-modal", [], ["closeable", false, "open", true], 0, null, ["loc", [null, [4, 2], [15, 15]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/authenticators/gingerbread', ['exports', 'ember', 'ember-simple-auth/authenticators/base'], function (exports, _ember, _emberSimpleAuthAuthenticatorsBase) {
  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }

  exports['default'] = _emberSimpleAuthAuthenticatorsBase['default'].extend({
    flash: _ember['default'].inject.service('flashMessages'),
    gpapi: _ember['default'].inject.service(),
    i18n: _ember['default'].inject.service(),

    //TODO: Factor this out for use elsewhere? Seems easily reusable.
    // Queues a flash message using the translation for successKey or failureKey
    // when the promise authResult is resolved or rejected.
    handleNotifications: function handleNotifications(authResult, successKey, failureKey) {
      var _this = this;

      if (successKey) {
        authResult.then(function () {
          _this.get('flash').add({
            message: _this.get('i18n').t(successKey),
            type: 'alert-success'
          });
        });
      }

      if (failureKey) {
        authResult['catch'](function () {
          _this.get('flash').add({
            message: _this.get('i18n').t(failureKey),
            type: 'alert-error'
          });
        });
      }
    },

    buildUserInfo: function buildUserInfo(data) {
      return this.get('gpapi').request('v1.roles.index').then(function (response) {
        var _ref;

        var roles = response.roles;
        var userRoles = roles.filter(function (role) {
          return data.user_info.roles.includes(role.name);
        });
        var flattenedPermissions = (_ref = []).concat.apply(_ref, _toConsumableArray(userRoles.map(function (role) {
          return role.permissions;
        })));

        data.user_info.permissions = flattenedPermissions.uniq();
        return data.user_info;
      });
    },

    restore: function restore() {
      var _this2 = this;

      var authResult = this.get('gpapi').request('v1.sessions.validate.validate').then(function (data) {
        return _this2.buildUserInfo(data);
      });
      this.handleNotifications(authResult, null, 'auth.login.validationFailureFlash');
      return authResult;
    },

    retryCookie: function retryCookie() {
      var _this3 = this;

      return this.get('gpapi').request('v1.sessions.validate.validate').then(function (data) {
        return _this3.buildUserInfo(data);
      });
    },

    authenticate: function authenticate(options) {
      var _this4 = this;

      var userData = {
        user: {
          email: options.email,
          password: options.password
        }
      };

      if (!userData.user.email && !userData.user.password) {
        return this.retryCookie();
      }

      var authResult = this.get('gpapi').request('v1.sessions.create', userData).then(function (data) {
        return _this4.buildUserInfo(data);
      });
      this.handleNotifications(authResult, 'auth.login.authSuccessFlash', 'auth.login.authFailureFlash');
      return authResult;
    },

    invalidate: function invalidate() {
      return this.get('gpapi').request('v1.sessions.destroy');
    }
  });
});
define('goods-gateway/bulk-updates/base/route', ['exports', 'ember', 'goods-gateway/utils/string-to-array'], function (exports, _ember, _goodsGatewayUtilsStringToArray) {
  exports['default'] = _ember['default'].Route.extend({
    bulkActions: [],
    bulkUpdater: _ember['default'].inject.service(),
    model: function model() {
      return _ember['default'].Object.create({
        permalinks: '',
        categoryIds: [],
        updateType: null,
        bulkActions: this.get('bulkActions')
      });
    },
    resetController: function resetController() {
      this.get('bulkUpdater').reset();
    },
    enqueue: function enqueue() {
      var _this = this;

      var permalinks = (0, _goodsGatewayUtilsStringToArray['default'])(this.currentModel.get('permalinks'));

      permalinks.forEach(function (permalinkOrId) {
        var job = _this.createJob(permalinkOrId);
        _this.get('bulkUpdater').enqueue(job);
      });

      this.currentModel.set('permalinks', '');
    },
    actions: {
      enqueue: function enqueue() {
        this.enqueue();
      }
    }
  });
});
define('goods-gateway/bulk-updates/deals/route', ['exports', 'ember', 'goods-gateway/constants/bulk-actions', 'goods-gateway/bulk-updates/base/route'], function (exports, _ember, _goodsGatewayConstantsBulkActions, _goodsGatewayBulkUpdatesBaseRoute) {
  exports['default'] = _goodsGatewayBulkUpdatesBaseRoute['default'].extend({
    bulkActions: _goodsGatewayConstantsBulkActions.BULK_DEAL_ACTIONS,

    createJob: function createJob(permalinkOrId) {
      var jobType = undefined;
      var updateType = this.currentModel.get('updateType');
      var tags = _ember['default'].copy(this.currentModel.get('categoryIds'));
      var args = { permalinkOrId: permalinkOrId, type: updateType };

      if (updateType === 'addCategories' || updateType === 'removeCategories') {
        jobType = 'bulk-job:deal-category-update';
        args.tags = tags;
      }

      if (updateType === 'boost' || updateType === 'deboost') {
        jobType = 'bulk-job:deal-boost';
      }

      var job = this.container.lookup(jobType);
      job.set('args', args);
      return job;
    },
    actions: {
      addTag: function addTag(tag) {
        this.currentModel.get('categoryIds').pushObject(tag);
      },
      removeTag: function removeTag(tag) {
        this.currentModel.get('categoryIds').removeObject(tag);
      }
    }
  });
});
define("goods-gateway/bulk-updates/deals/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/bulk-updates/deals/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("hr");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-bulk.actions", [], ["bulkActions", ["subexpr", "@mut", [["get", "model.bulkActions", ["loc", [null, [2, 14], [2, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "updateType", ["subexpr", "@mut", [["get", "model.updateType", ["loc", [null, [3, 13], [3, 29]]], 0, 0, 0, 0]], [], [], 0, 0], "categoryIds", ["subexpr", "@mut", [["get", "model.categoryIds", ["loc", [null, [4, 14], [4, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "addTag", "addTag", "removeTag", "removeTag"], ["loc", [null, [1, 0], [6, 25]]], 0, 0], ["inline", "vp-bulk.input", [], ["permalinks", ["subexpr", "@mut", [["get", "model.permalinks", ["loc", [null, [9, 13], [9, 29]]], 0, 0, 0, 0]], [], [], 0, 0], "updateType", ["subexpr", "@mut", [["get", "model.updateType", ["loc", [null, [10, 13], [10, 29]]], 0, 0, 0, 0]], [], [], 0, 0], "categoryIds", ["subexpr", "@mut", [["get", "model.categoryIds", ["loc", [null, [11, 14], [11, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "placeholder", ["subexpr", "t", ["bulkUpdater.dealsPlaceholder"], [], ["loc", [null, [12, 14], [12, 48]]], 0, 0], "enqueue", "enqueue"], ["loc", [null, [8, 0], [13, 21]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/bulk-updates/products/route', ['exports', 'ember', 'goods-gateway/constants/bulk-actions', 'goods-gateway/bulk-updates/base/route'], function (exports, _ember, _goodsGatewayConstantsBulkActions, _goodsGatewayBulkUpdatesBaseRoute) {
  exports['default'] = _goodsGatewayBulkUpdatesBaseRoute['default'].extend({
    bulkActions: _goodsGatewayConstantsBulkActions.BULK_PRODUCT_ACTIONS,

    createJob: function createJob(permalinkOrId) {
      var jobType = undefined;
      var updateType = this.currentModel.get('updateType');
      var tags = _ember['default'].copy(this.currentModel.get('categoryIds'));
      var args = { permalinkOrId: permalinkOrId, type: updateType };

      if (updateType === 'pause' || updateType === 'unpause') {
        jobType = 'bulk-job:product-status-update';
      }

      if (updateType === 'updateMrt') {
        jobType = 'bulk-job:product-mrt-update';
        args.tag = tags[0];
      }

      var job = this.container.lookup(jobType);
      job.set('args', args);
      return job;
    },
    actions: {
      addTag: function addTag(tag) {
        this.currentModel.get('categoryIds').setObjects([tag]);
      },
      removeTag: function removeTag(tag) {
        this.currentModel.get('categoryIds').removeObject(tag);
      }
    }
  });
});
define("goods-gateway/bulk-updates/products/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/bulk-updates/products/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("hr");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-bulk.actions", [], ["bulkActions", ["subexpr", "@mut", [["get", "model.bulkActions", ["loc", [null, [2, 14], [2, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "updateType", ["subexpr", "@mut", [["get", "model.updateType", ["loc", [null, [3, 13], [3, 29]]], 0, 0, 0, 0]], [], [], 0, 0], "categoryIds", ["subexpr", "@mut", [["get", "model.categoryIds", ["loc", [null, [4, 14], [4, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "addTag", "addTag", "removeTag", "removeTag"], ["loc", [null, [1, 0], [6, 25]]], 0, 0], ["inline", "vp-bulk.input", [], ["permalinks", ["subexpr", "@mut", [["get", "model.permalinks", ["loc", [null, [9, 13], [9, 29]]], 0, 0, 0, 0]], [], [], 0, 0], "updateType", ["subexpr", "@mut", [["get", "model.updateType", ["loc", [null, [10, 13], [10, 29]]], 0, 0, 0, 0]], [], [], 0, 0], "categoryIds", ["subexpr", "@mut", [["get", "model.categoryIds", ["loc", [null, [11, 14], [11, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "placeholder", ["subexpr", "t", ["bulkUpdater.productsPlaceholder"], [], ["loc", [null, [12, 14], [12, 51]]], 0, 0], "enqueue", "enqueue"], ["loc", [null, [8, 0], [13, 21]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/bulk-updates/route', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Route.extend({
    model: function model() {
      this.get('bulkUpdater').reset();
      return _ember['default'].Object.create({
        errors: this.get('bulkUpdater.errors'),
        successList: this.get('bulkUpdater.successList'),
        isProcessing: this.get('bulkUpdater.isProcessing'),
        queue: this.get('bulkUpdater.queue')
      });
    },
    bulkUpdater: _ember['default'].inject.service(),
    actions: {
      reEnqueue: function reEnqueue(job) {
        this.get('bulkUpdater').reEnqueue(job);
      },
      removeError: function removeError(job) {
        this.get('bulkUpdater').removeError(job);
      },
      reEnqueueAll: function reEnqueueAll() {
        this.get('bulkUpdater').reEnqueueAll();
      },
      removeAllErrors: function removeAllErrors() {
        this.get('bulkUpdater').removeAllErrors();
      },
      process: function process() {
        this.get('bulkUpdater').process();
      }
    }
  });
});
define("goods-gateway/bulk-updates/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 3,
                "column": 4
              },
              "end": {
                "line": 5,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/bulk-updates/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["bulkUpdater.deals"], [], ["loc", [null, [4, 6], [4, 31]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 7,
                "column": 4
              },
              "end": {
                "line": 9,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/bulk-updates/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["bulkUpdater.products"], [], ["loc", [null, [8, 6], [8, 34]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 10,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/bulk-updates/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-tab-navigation-link", [], ["to", "bulk-updates.deals"], 0, null, ["loc", [null, [3, 4], [5, 31]]]], ["block", "mx-tab-navigation-link", [], ["to", "bulk-updates.products"], 1, null, ["loc", [null, [7, 4], [9, 31]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/bulk-updates/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "bulk-updater");
        dom.setAttribute(el1, "class", "md-column");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("hr");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("hr");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column--3of3");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("h5");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "id", "enqueued-list");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("hr");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("hr");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column--3of3");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("h5");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "id", "success-list");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [11, 1]);
        var element2 = dom.childAt(element1, [3]);
        var element3 = dom.childAt(element0, [19, 1]);
        var morphs = new Array(9);
        morphs[0] = dom.createMorphAt(element0, 1, 1);
        morphs[1] = dom.createMorphAt(element0, 3, 3);
        morphs[2] = dom.createMorphAt(element0, 7, 7);
        morphs[3] = dom.createMorphAt(dom.childAt(element1, [1]), 0, 0);
        morphs[4] = dom.createMorphAt(element2, 1, 1);
        morphs[5] = dom.createMorphAt(element2, 3, 3);
        morphs[6] = dom.createMorphAt(element0, 15, 15);
        morphs[7] = dom.createMorphAt(dom.childAt(element3, [1]), 0, 0);
        morphs[8] = dom.createMorphAt(dom.childAt(element3, [3]), 1, 1);
        return morphs;
      },
      statements: [["block", "mx-tab-navigation", [], [], 0, null, ["loc", [null, [2, 2], [10, 24]]]], ["inline", "vp-bulk.status", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [13, 11], [13, 23]]], 0, 0, 0, 0]], [], [], 0, 0], "successList", ["subexpr", "@mut", [["get", "model.successList", ["loc", [null, [14, 16], [14, 33]]], 0, 0, 0, 0]], [], [], 0, 0], "queue", ["subexpr", "@mut", [["get", "model.queue", ["loc", [null, [15, 10], [15, 21]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [12, 2], [15, 23]]], 0, 0], ["content", "outlet", ["loc", [null, [17, 2], [17, 12]]], 0, 0, 0, 0], ["inline", "t", ["bulkUpdater.enqueued"], [], ["loc", [null, [21, 10], [21, 38]]], 0, 0], ["inline", "vp-bulk.queue", [], ["queue", ["subexpr", "@mut", [["get", "model.queue", ["loc", [null, [23, 30], [23, 41]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [23, 8], [23, 43]]], 0, 0], ["inline", "vp-bulk.processButton", [], ["queue", ["subexpr", "@mut", [["get", "model.queue", ["loc", [null, [25, 16], [25, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "isProcessing", ["subexpr", "@mut", [["get", "model.isProcessing", ["loc", [null, [26, 23], [26, 41]]], 0, 0, 0, 0]], [], [], 0, 0], "process", "process"], ["loc", [null, [24, 8], [27, 29]]], 0, 0], ["inline", "vp-bulk.errors", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [33, 11], [33, 23]]], 0, 0, 0, 0]], [], [], 0, 0], "reEnqueue", "reEnqueue", "reEnqueueAll", "reEnqueueAll", "removeError", "removeError", "removeAllErrors", "removeAllErrors"], ["loc", [null, [32, 2], [37, 39]]], 0, 0], ["inline", "t", ["bulkUpdater.success"], [], ["loc", [null, [41, 10], [41, 37]]], 0, 0], ["inline", "vp-bulk.queue", [], ["queue", ["subexpr", "@mut", [["get", "model.successList", ["loc", [null, [43, 30], [43, 47]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [43, 8], [43, 49]]], 0, 0]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/category/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    findRecord: function findRecord(store, type, id) {
      return this.queryRecord(store, type, {
        id: id,
        include: 'variantCategories'
      });
    },

    isInvalid: function isInvalid() {
      return false;
    },

    namespace: '/goods-gateway/proxy/gpapi/v1',

    // https://github.com/emberjs/data/blob/v2.3.0/addon/adapters/rest.js#L449
    queryRecord: function queryRecord(store, type, query) {
      var id = query.id;
      delete query.id;
      var url = this.buildURL(type.modelName, id, null, 'findRecord');
      return this.ajax(url, 'GET', { data: query });
    },

    shouldReloadRecord: function shouldReloadRecord() {
      // `required` on a particular variantCategory changes based on its category, not it's id
      // so unfortunately, we can't leverage the cache as it will use the variantCategory's cache
      // if we exposed `requiredAttributes` here like taxonomy,
      // we could add a computed property to variantCategory and leverage the cache again
      return true;
    }
  });
});
define('goods-gateway/category/localized-content/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {
  exports['default'] = _modelFragments['default'].Fragment.extend({
    attrValue: _emberData['default'].attr('string'),
    description: _emberData['default'].attr('string'),
    locale: _emberData['default'].attr('string'),
    name: _emberData['default'].attr('string')
  });
});
define('goods-gateway/category/model', ['exports', 'ember-data', 'model-fragments', 'goods-gateway/utils/ember-helpers'], function (exports, _emberData, _modelFragments, _goodsGatewayUtilsEmberHelpers) {
  exports['default'] = _emberData['default'].Model.extend({
    children: _emberData['default'].attr({ defaultValue: _goodsGatewayUtilsEmberHelpers.defaultArray }),
    isClosedCategory: _emberData['default'].attr('boolean'),
    localizedContents: _modelFragments['default'].fragmentArray('category/localizedContent'),
    variantCategories: _emberData['default'].hasMany('category.variantCategory')
  });
});
define('goods-gateway/category/serializer', ['exports', 'ember-data'], function (exports, _emberData) {
  exports['default'] = _emberData['default'].RESTSerializer.extend(_emberData['default'].EmbeddedRecordsMixin, {
    attrs: {
      variantCategories: { deserialize: 'records' }
    }
  });
});
define('goods-gateway/category/variant-category/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {
  exports['default'] = _emberData['default'].Model.extend({
    canBeVariation: _emberData['default'].attr('boolean'),
    canBeCustom: _emberData['default'].attr('boolean'),
    localizedContents: _modelFragments['default'].fragmentArray('category/localizedContent'),
    required: _emberData['default'].attr('boolean'),
    values: _emberData['default'].hasMany('category.variantCategory')
  });
});
define('goods-gateway/category/variant-category/serializer', ['exports', 'ember-data'], function (exports, _emberData) {
  exports['default'] = _emberData['default'].RESTSerializer.extend(_emberData['default'].EmbeddedRecordsMixin, {
    attrs: {
      values: { deserialize: 'records' }
    }
  });
});
define('goods-gateway/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'goods-gateway/config/environment'], function (exports, _emberCliAppVersionComponentsAppVersion, _goodsGatewayConfigEnvironment) {

  var name = _goodsGatewayConfigEnvironment['default'].APP.name;
  var version = _goodsGatewayConfigEnvironment['default'].APP.version;

  exports['default'] = _emberCliAppVersionComponentsAppVersion['default'].extend({
    version: version,
    name: name
  });
});
define('goods-gateway/components/credit-card-input', ['exports', 'ember-inputmask/components/credit-card-input'], function (exports, _emberInputmaskComponentsCreditCardInput) {
  exports['default'] = _emberInputmaskComponentsCreditCardInput['default'];
});
define('goods-gateway/components/currency-input', ['exports', 'ember-inputmask/components/currency-input'], function (exports, _emberInputmaskComponentsCurrencyInput) {
  exports['default'] = _emberInputmaskComponentsCurrencyInput['default'];
});
define('goods-gateway/components/date-input', ['exports', 'ember-inputmask/components/date-input'], function (exports, _emberInputmaskComponentsDateInput) {
  exports['default'] = _emberInputmaskComponentsDateInput['default'];
});
define('goods-gateway/components/email-input', ['exports', 'ember-inputmask/components/email-input'], function (exports, _emberInputmaskComponentsEmailInput) {
  exports['default'] = _emberInputmaskComponentsEmailInput['default'];
});
define('goods-gateway/components/fa-icon', ['exports', 'ember-cli-font-awesome/components/fa-icon'], function (exports, _emberCliFontAwesomeComponentsFaIcon) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberCliFontAwesomeComponentsFaIcon['default'];
    }
  });
});
define('goods-gateway/components/fa-list-icon', ['exports', 'ember-cli-font-awesome/components/fa-list-icon'], function (exports, _emberCliFontAwesomeComponentsFaListIcon) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberCliFontAwesomeComponentsFaListIcon['default'];
    }
  });
});
define('goods-gateway/components/fa-list', ['exports', 'ember-cli-font-awesome/components/fa-list'], function (exports, _emberCliFontAwesomeComponentsFaList) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberCliFontAwesomeComponentsFaList['default'];
    }
  });
});
define('goods-gateway/components/fa-stack', ['exports', 'ember-cli-font-awesome/components/fa-stack'], function (exports, _emberCliFontAwesomeComponentsFaStack) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberCliFontAwesomeComponentsFaStack['default'];
    }
  });
});
define('goods-gateway/components/flash-message', ['exports', 'ember-cli-flash/components/flash-message'], function (exports, _emberCliFlashComponentsFlashMessage) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberCliFlashComponentsFlashMessage['default'];
    }
  });
});
define('goods-gateway/components/head-content', ['exports', 'ember', 'goods-gateway/templates/head'], function (exports, _ember, _goodsGatewayTemplatesHead) {
  exports['default'] = _ember['default'].Component.extend({
    tagName: '',
    model: _ember['default'].inject.service('head-data'),
    layout: _goodsGatewayTemplatesHead['default']
  });
});
define('goods-gateway/components/head-layout', ['exports', 'ember', 'ember-cli-head/templates/components/head-layout'], function (exports, _ember, _emberCliHeadTemplatesComponentsHeadLayout) {
  exports['default'] = _ember['default'].Component.extend({
    tagName: '',
    layout: _emberCliHeadTemplatesComponentsHeadLayout['default']
  });
});
define('goods-gateway/components/input-mask', ['exports', 'ember-inputmask/components/input-mask'], function (exports, _emberInputmaskComponentsInputMask) {
  exports['default'] = _emberInputmaskComponentsInputMask['default'];
});
define('goods-gateway/components/mx-alert/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // args
    flash: null,
    dismiss: null,
    transparent: false,
    type: 'error',

    // helpers
    classType: _ember['default'].computed('flash', 'type', function () {
      return this.get('flash.type') || this.get('type');
    }),

    actions: {
      dismiss: function dismiss() {
        this.sendAction('dismiss', this.get('flash'));
      }
    }
  });
});
define("goods-gateway/components/mx-alert/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 7,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/mx-alert/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "href", "#");
          dom.setAttribute(el1, "class", "mx-alert-close");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createElementMorph(element0);
          return morphs;
        },
        statements: [["element", "action", ["dismiss"], [], ["loc", [null, [5, 16], [5, 36]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-alert/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var morphs = new Array(3);
        morphs[0] = dom.createAttrMorph(element1, 'class');
        morphs[1] = dom.createMorphAt(element1, 1, 1);
        morphs[2] = dom.createMorphAt(element1, 3, 3);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["alert-", ["get", "classType", ["loc", [null, [1, 20], [1, 29]]], 0, 0, 0, 0], " mx-alert-", ["get", "classType", ["loc", [null, [1, 43], [1, 52]]], 0, 0, 0, 0], " ", ["subexpr", "if", [["get", "transparent", ["loc", [null, [1, 60], [1, 71]]], 0, 0, 0, 0], "mx-alert-transparent"], [], ["loc", [null, [1, 55], [1, 96]]], 0, 0], " ", ["subexpr", "if", [["get", "dismiss", ["loc", [null, [1, 102], [1, 109]]], 0, 0, 0, 0], "mx-alert-dismissible"], [], ["loc", [null, [1, 97], [1, 134]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["content", "yield", ["loc", [null, [2, 2], [2, 11]]], 0, 0, 0, 0], ["block", "if", [["get", "dismiss", ["loc", [null, [4, 8], [4, 15]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [4, 2], [7, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/mx-button/component', ['exports', 'ember', 'ember-simple-uuid'], function (exports, _ember, _emberSimpleUuid) {
  exports['default'] = _ember['default'].Component.extend({
    // args
    action: null,
    cautious: false,
    cta: false,
    data: null,
    enabled: true,
    id: null,
    secondary: false,
    type: 'button',

    // attributes
    tagName: 'button',
    classNames: ['button', 'button-primary'],
    attributeBindings: ['elementId:id', 'type'],
    classNameBindings: ['cautious:cautious', 'secondary:button-secondary', 'cta:button-cta', 'enabled::is-disabled'],

    // actions
    click: function click() {
      this.send('triggerAction');
    },

    // lifecycle
    didReceiveAttrs: function didReceiveAttrs() {
      this.set('elementId', this.get('elementId') || this.get('id') || (0, _emberSimpleUuid['default'])());
    },

    actions: {
      triggerAction: function triggerAction() {
        if (this.get('action') && this.get('enabled')) {
          var data = this.get('data');
          if (data) {
            this.sendAction('action', data);
          } else {
            this.sendAction('action');
          }
        }
      }
    }
  });
});
define("goods-gateway/components/mx-button/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-button/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/mx-dot/component', ['exports', 'ember'], function (exports, _ember) {

  var warningColor = 'yellow';

  exports['default'] = _ember['default'].Component.extend({
    // args
    color: 'green',

    // lifecycle
    init: function init() {
      this._super.apply(this, arguments);
      var mixerClass = 'mx-dot-' + (this.get('color') || warningColor);
      this.set('classNames', [mixerClass]);
    },

    // attributes
    tagName: 'span'
  });
});
define("goods-gateway/components/mx-dot/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-dot/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/mx-icon/component', ['exports', 'ember'], function (exports, _ember) {

  var MxIcon = _ember['default'].Component.extend({
    tagName: 'svg',
    classNames: ['mx-icon', 'mx-svg']
  });

  MxIcon.reopenClass({
    positionalParams: ['iconId']
  });

  exports['default'] = MxIcon;
});
define("goods-gateway/components/mx-icon/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-icon/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("use");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createAttrMorph(element0, 'xlink:href', 'http://www.w3.org/1999/xlink');
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        return morphs;
      },
      statements: [["attribute", "xlink:href", ["concat", [["subexpr", "asset", [["subexpr", "concat", ["svgs/icons.svg#icon-", ["get", "iconId", ["loc", [null, [1, 56], [1, 62]]], 0, 0, 0, 0]], [], ["loc", [null, [1, 25], [1, 63]]], 0, 0]], [], ["loc", [null, [1, 17], [1, 65]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["content", "yield", ["loc", [null, [3, 0], [3, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/mx-modal/component', ['exports', 'ember', 'goods-gateway/mixins/escapable'], function (exports, _ember, _goodsGatewayMixinsEscapable) {
  exports['default'] = _ember['default'].Component.extend(_goodsGatewayMixinsEscapable['default'], {
    // action args: close

    // args
    open: false,
    closeable: true,
    title: null,

    // attributes
    classNames: ['mx-modal'],
    classNameBindings: ['open'],

    actions: {
      close: function close() {
        this.set('open', false);
        this.sendAction('close');
      }
    }
  });
});
define("goods-gateway/components/mx-modal/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 4
            },
            "end": {
              "line": 9,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/mx-modal/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "href", "#");
          dom.setAttribute(el1, "class", "close");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("span");
          dom.setAttribute(el2, "class", "icon-accept mx-icon-close");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createElementMorph(element0);
          return morphs;
        },
        statements: [["element", "action", ["close"], [], ["loc", [null, [6, 32], [6, 50]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 4
            },
            "end": {
              "line": 15,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/mx-modal/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h2");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "title", ["loc", [null, [13, 8], [13, 17]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-modal/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "mx-modal-container");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("label");
        dom.setAttribute(el2, "class", "mx-modal-overlay");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "mx-modal-content");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0, 3]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(element1, 1, 1);
        morphs[1] = dom.createMorphAt(element1, 3, 3);
        morphs[2] = dom.createMorphAt(element1, 5, 5);
        return morphs;
      },
      statements: [["block", "if", [["get", "closeable", ["loc", [null, [5, 10], [5, 19]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [5, 4], [9, 11]]]], ["block", "if", [["get", "title", ["loc", [null, [11, 10], [11, 15]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [11, 4], [15, 11]]]], ["content", "yield", ["loc", [null, [17, 4], [17, 13]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/mx-paginator/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // args
    action: null,
    meta: _ember['default'].Object.create({
      offset: 0,
      limit: 0,
      total: 0
    }),

    // attributes
    classNames: ['mx-paginator'],

    // helpers
    hasPrevPage: _ember['default'].computed('meta', function () {
      return this.get('meta.offset') > 0;
    }),

    hasNextPage: _ember['default'].computed('meta', function () {
      var lastRecord = this.get('meta.offset') + this.get('meta.limit');
      return lastRecord < this.get('meta.total');
    }),

    currentPage: _ember['default'].computed('meta', function () {
      return parseInt(this.get('meta.offset') / this.get('meta.limit') + 1);
    }),

    totalPages: _ember['default'].computed('meta', function () {
      return Math.ceil(this.get('meta.total') / this.get('meta.limit'));
    }),

    actions: {
      nextPage: function nextPage() {
        this.sendAction('action', this.get('currentPage') + 1);
      },

      previousPage: function previousPage() {
        this.sendAction('action', this.get('currentPage') - 1);
      }
    }
  });
});
define("goods-gateway/components/mx-paginator/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 6,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/mx-paginator/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "href", "#");
          dom.setAttribute(el1, "class", "previous-page mx-pagination-prev");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          return morphs;
        },
        statements: [["element", "action", ["previousPage"], [], ["loc", [null, [3, 57], [3, 82]]], 0, 0], ["inline", "t", ["vp-paginator.previous"], [], ["loc", [null, [4, 6], [4, 35]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 2
            },
            "end": {
              "line": 10,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/mx-paginator/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "class", "previous-page mx-pagination-prev");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["vp-paginator.previous"], [], ["loc", [null, [8, 6], [8, 35]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 19,
              "column": 2
            },
            "end": {
              "line": 23,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/mx-paginator/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "href", "");
          dom.setAttribute(el1, "class", "next-page mx-pagination-next");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element0);
          morphs[1] = dom.createMorphAt(element0, 1, 1);
          return morphs;
        },
        statements: [["element", "action", ["nextPage"], [], ["loc", [null, [20, 52], [20, 73]]], 0, 0], ["inline", "t", ["vp-paginator.next"], [], ["loc", [null, [21, 6], [21, 31]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 23,
              "column": 2
            },
            "end": {
              "line": 27,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/mx-paginator/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "class", "next-page mx-pagination-next");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["vp-paginator.next"], [], ["loc", [null, [25, 6], [25, 31]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-paginator/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "mx-pagination");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        dom.setAttribute(el2, "class", "mx-pagination-info");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [0]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(element2, 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element2, [3]), 1, 1);
        morphs[2] = dom.createMorphAt(element2, 5, 5);
        return morphs;
      },
      statements: [["block", "if", [["get", "hasPrevPage", ["loc", [null, [2, 8], [2, 19]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [2, 2], [10, 9]]]], ["inline", "t", ["vp-paginator.summary"], ["current", ["subexpr", "concat", ["<span class=\"current-page\">", ["get", "currentPage", ["loc", [null, [14, 50], [14, 61]]], 0, 0, 0, 0], "</span>"], [], ["loc", [null, [14, 12], [14, 72]]], 0, 0], "total", ["subexpr", "concat", ["<span class=\"total-pages\">", ["get", "totalPages", ["loc", [null, [15, 47], [15, 57]]], 0, 0, 0, 0], "</span>"], [], ["loc", [null, [15, 10], [15, 68]]], 0, 0]], ["loc", [null, [13, 4], [16, 6]]], 0, 0], ["block", "if", [["get", "hasNextPage", ["loc", [null, [19, 8], [19, 19]]], 0, 0, 0, 0]], [], 2, 3, ["loc", [null, [19, 2], [27, 9]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define('goods-gateway/components/mx-spinner/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // attributes
    classNames: ['mx-spinner'],
    tagName: 'span'
  });
});
define("goods-gateway/components/mx-spinner/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-spinner/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("span");
        dom.setAttribute(el1, "class", "spinner mx-icon-spinner-ring");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/mx-submit/component', ['exports', 'ember', 'goods-gateway/mixins/field'], function (exports, _ember, _goodsGatewayMixinsField) {
  exports['default'] = _ember['default'].Component.extend(_goodsGatewayMixinsField['default'], {
    // dependencies
    i18n: _ember['default'].inject.service('i18n'),

    // args
    model: null,
    disabled: false,
    fullWidth: false,
    tPath: null,
    inputId: null, // translates to inputElementId via FieldMixin

    // attributes
    tagName: 'input',
    classNames: ['mx-submit', 'button', 'button-primary'],
    classNameBindings: ['fullWidth:submit-full-width', 'finalDisabled:is-disabled'],
    attributeBindings: ['type', 'inputElementId:id', 'submitTranslation:value', 'finalDisabled:disabled'],
    type: 'submit',

    // helpers
    enabled: _ember['default'].computed.not('finalDisabled'),
    finalDisabled: _ember['default'].computed.or('disabled', 'model.isSaving'),
    submitTranslation: _ember['default'].computed('model.isSaving', function () {
      var i18n = this.get('i18n');

      var suppliedTPath = this.get('tPath');
      var initialValue = suppliedTPath ? i18n.t(suppliedTPath) : i18n.t('vp-submit.save');
      var savingValue = i18n.t('vp-submit.saving');

      return this.get('model.isSaving') ? savingValue : initialValue;
    })
  });
});
define("goods-gateway/components/mx-submit/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-submit/template.hbs"
      },
      isEmpty: true,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/mx-switch/component', ['exports', 'ember', 'goods-gateway/mixins/field'], function (exports, _ember, _goodsGatewayMixinsField) {
  exports['default'] = _ember['default'].Component.extend(_goodsGatewayMixinsField['default'], {
    // args
    key: null,
    model: null,
    large: true,

    // attributes
    classNames: ['mx-switch-component']
  });
});
define("goods-gateway/components/mx-switch/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 4
            },
            "end": {
              "line": 17,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/mx-switch/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "class", "mx-switch-on");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "class", "mx-switch-off");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["mx-switch.on"], [], ["loc", [null, [12, 8], [12, 28]]], 0, 0], ["inline", "t", ["mx-switch.off"], [], ["loc", [null, [15, 8], [15, 29]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-switch/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("label");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "mx-switch-button");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(4);
        morphs[0] = dom.createAttrMorph(element0, 'for');
        morphs[1] = dom.createAttrMorph(element0, 'class');
        morphs[2] = dom.createMorphAt(element0, 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
        return morphs;
      },
      statements: [["attribute", "for", ["get", "inputElementId", ["loc", [null, [1, 13], [1, 27]]], 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "class", ["concat", ["mx-switch ", ["subexpr", "unless", [["get", "large", ["loc", [null, [1, 56], [1, 61]]], 0, 0, 0, 0], "mx-switch-small"], [], ["loc", [null, [1, 47], [1, 81]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "input", [], ["type", "checkbox", "class", "mx-toggle-checkbox", "checked", ["subexpr", "@mut", [["get", "value", ["loc", [null, [5, 12], [5, 17]]], 0, 0, 0, 0]], [], [], 0, 0], "id", ["subexpr", "@mut", [["get", "inputElementId", ["loc", [null, [6, 7], [6, 21]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [2, 2], [7, 4]]], 0, 0], ["block", "if", [["get", "large", ["loc", [null, [10, 10], [10, 15]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [10, 4], [17, 11]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/mx-tab-navigation-link/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // args
    to: '',

    // attributes
    tagName: 'li',
    classNames: ['mx-tab-navigation-link', 'mx-tab-item']
  });
});
define("goods-gateway/components/mx-tab-navigation-link/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/mx-tab-navigation-link/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "yield", ["loc", [null, [2, 2], [2, 11]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-tab-navigation-link/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "link-to", [["get", "to", ["loc", [null, [1, 11], [1, 13]]], 0, 0, 0, 0]], ["class", "mx-tab-label"], 0, null, ["loc", [null, [1, 0], [3, 12]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/mx-tab-navigation/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // args
    small: false,
    classNames: ['mx-tab-list'],
    classNameBindings: ['small:mx-tab-list-small'],
    tagName: 'ul'
  });
});
define("goods-gateway/components/mx-tab-navigation/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-tab-navigation/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/mx-table-header/component', ['exports', 'ember'], function (exports, _ember) {
  var _slice = Array.prototype.slice;
  exports['default'] = _ember['default'].Component.extend({
    // args
    sort: null, // action
    controllerName: null,
    field: null,

    // attributes
    tagName: 'th',
    classNames: ['mx-sortable-header'],
    classNameBindings: ['isNumber:number'],
    isNumber: false,

    // helpers
    iconClass: _ember['default'].computed('ordering', function () {
      var ordering = this.get('ordering');

      if (_ember['default'].isBlank(ordering)) {
        return 'mx-icon-caret-up inactive';
      } else if (ordering === 'asc') {
        return 'mx-icon-caret-up active';
      } else {
        return 'mx-icon-caret-down active';
      }
    }),

    ordering: _ember['default'].computed('controllerName', 'field', 'sort', function () {
      if (_ember['default'].isBlank(this.get('sort'))) {
        return;
      }

      var controller = this.get('container').lookup('controller:' + this.get('controllerName'));
      var orderBy = controller.get('orderBy');

      if (this.get('field') === orderBy) {
        return controller.get('sort');
      }
    }),

    sortByClass: _ember['default'].computed('field', function () {
      return 'sort-by-' + this.get('field').dasherize();
    }),

    actions: {
      sort: function sort() {
        this.sendAction.apply(this, ['sort'].concat(_slice.call(arguments)));
      }
    }
  });
});
define("goods-gateway/components/mx-table-header/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/mx-table-header/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "href", "#");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("span");
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(element0, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createElementMorph(element0);
          morphs[2] = dom.createAttrMorph(element1, 'class');
          morphs[3] = dom.createMorphAt(element0, 3, 3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["get", "sortByClass", ["loc", [null, [2, 23], [2, 34]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["sort", ["get", "field", ["loc", [null, [2, 54], [2, 59]]], 0, 0, 0, 0]], [], ["loc", [null, [2, 38], [2, 61]]], 0, 0], ["attribute", "class", ["concat", ["mx-icon mx-icon-16 ", ["get", "iconClass", ["loc", [null, [3, 38], [3, 47]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["content", "yield", ["loc", [null, [6, 4], [6, 13]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/mx-table-header/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "yield", ["loc", [null, [9, 2], [9, 11]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-table-header/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "sort", ["loc", [null, [1, 6], [1, 10]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [1, 0], [10, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/mx-tag/component', ['exports', 'ember'], function (exports, _ember) {
  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }

  var component = _ember['default'].Component.extend({
    // attributes
    tagName: ['li'],
    classNames: ['tag-item'],

    // actions
    click: function click() {
      this.send('relayAction');
    },

    // helpers
    action: _ember['default'].computed('params.[]', function () {
      return this.get('params')[0];
    }),

    actions: {
      relayAction: function relayAction() {
        // Everything after params[0]
        var params = this.get('params').slice(1);
        this.sendAction.apply(this, ['action'].concat(_toConsumableArray(params)));
      }
    }
  });

  component.reopenClass({
    positionalParams: 'params'
  });

  exports['default'] = component;
});
define("goods-gateway/components/mx-tag/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-tag/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/mx-tags/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // attributes
    tagName: 'ul',
    classNames: ['tag-list']
  });
});
define("goods-gateway/components/mx-tags/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-tags/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/mx-top-nav-list-item/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // args
    to: null,

    // attributes
    tagName: 'li',
    classNames: ['mx-top-nav-list-item', 'top-nav-list-item']
  });
});
define("goods-gateway/components/mx-top-nav-list-item/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-top-nav-list-item/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/mx-top-nav-list/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    tagName: 'ul',
    classNames: ['mx-top-nav-list', 'top-nav-list']
  });
});
define("goods-gateway/components/mx-top-nav-list/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/mx-top-nav-list/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/number-input', ['exports', 'ember-inputmask/components/number-input'], function (exports, _emberInputmaskComponentsNumberInput) {
  exports['default'] = _emberInputmaskComponentsNumberInput['default'];
});
define('goods-gateway/components/phone-number-input', ['exports', 'ember-inputmask/components/phone-number-input'], function (exports, _emberInputmaskComponentsPhoneNumberInput) {
  exports['default'] = _emberInputmaskComponentsPhoneNumberInput['default'];
});
define('goods-gateway/components/pikaday-input', ['exports', 'ember', 'ember-pikaday/components/pikaday-input'], function (exports, _ember, _emberPikadayComponentsPikadayInput) {
  exports['default'] = _emberPikadayComponentsPikadayInput['default'];
});
define('goods-gateway/components/radio-button', ['exports', 'ember-radio-buttons/components/radio-button'], function (exports, _emberRadioButtonsComponentsRadioButton) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberRadioButtonsComponentsRadioButton['default'];
    }
  });
});
define('goods-gateway/components/vp-add/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // attributes
    tagName: 'span',
    classNames: ['vp-add', 'middle'],

    // actions
    click: function click() {
      this.incrementProperty('_rotation', 180);
      this.$().find('.icon-decline').css({
        transform: 'rotate(' + this.get('_rotation') + 'deg)'
      });
    },

    // helpers
    _rotation: 45
  });
});
define("goods-gateway/components/vp-add/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-add/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("span");
        dom.setAttribute(el1, "class", "container");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "mx-icon", ["ex-circle"], [], ["loc", [null, [1, 0], [1, 23]]], 0, 0], ["content", "yield", ["loc", [null, [3, 2], [3, 11]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-application-container/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // dependencies
    i18n: _ember['default'].inject.service(),

    // attributes
    elementId: 'application-wrapper',
    classNameBindings: ['_isRightToLeft:is-right-to-left'],

    _isRightToLeft: _ember['default'].computed.oneWay('i18n._locale.rtl')
  });
});
define("goods-gateway/components/vp-application-container/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-application-container/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-approval-stats/component', ['exports', 'ember', 'goods-gateway/utils/overall-approval-status'], function (exports, _ember, _goodsGatewayUtilsOverallApprovalStatus) {
  exports['default'] = _ember['default'].Component.extend({
    classNames: ['md-column'],

    overallStats: _ember['default'].computed('stats', function () {
      var approvalStats = this.get('stats').reduce(function (approvalStats, stat) {
        var status = (0, _goodsGatewayUtilsOverallApprovalStatus['default'])(stat.autoApprovalStatus, stat.manualApprovalStatus);
        approvalStats[status] = approvalStats[status] || 0;
        approvalStats[status] += stat.count;
        return approvalStats;
      }, {});
      var result = [];
      for (var _status in approvalStats) {
        if (approvalStats.hasOwnProperty(_status)) {
          result.push({
            approvalStatus: _status,
            count: approvalStats[_status]
          });
        }
      }
      return result;
    })
  });
});
define("goods-gateway/components/vp-approval-stats/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 6
            },
            "end": {
              "line": 12,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-approval-stats/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "status");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "status");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["stats.approvals.manualApprovalStatus"], [], ["loc", [null, [6, 10], [6, 54]]], 0, 0], ["inline", "t", ["stats.approvals.autoApprovalStatus"], [], ["loc", [null, [10, 10], [10, 52]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 16,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-approval-stats/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "status");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["stats.approvals.approvalStatus"], [], ["loc", [null, [14, 10], [14, 48]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 36,
                  "column": 12
                },
                "end": {
                  "line": 44,
                  "column": 12
                }
              },
              "moduleName": "goods-gateway/components/vp-approval-stats/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "stat.count", ["loc", [null, [43, 14], [43, 28]]], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 25,
                "column": 6
              },
              "end": {
                "line": 47,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-approval-stats/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "manual-approval status");
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "auto-approval status");
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "approval-inventory count");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("          ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
            morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
            morphs[2] = dom.createMorphAt(dom.childAt(element1, [5]), 1, 1);
            return morphs;
          },
          statements: [["inline", "vp-listing", [], ["status", ["subexpr", "@mut", [["get", "stat.manualApprovalStatus", ["loc", [null, [28, 32], [28, 57]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [28, 12], [28, 59]]], 0, 0], ["inline", "vp-listing", [], ["status", ["subexpr", "@mut", [["get", "stat.autoApprovalStatus", ["loc", [null, [32, 32], [32, 55]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [32, 12], [32, 57]]], 0, 0], ["block", "link-to", ["inventory.index", ["subexpr", "contextual-params", [["get", "params", ["loc", [null, [37, 33], [37, 39]]], 0, 0, 0, 0]], ["autoApprovalStatus", ["get", "stat.autoApprovalStatus", ["loc", [null, [38, 35], [38, 58]]], 0, 0, 0, 0], "manualApprovalStatus", ["get", "stat.manualApprovalStatus", ["loc", [null, [39, 37], [39, 62]]], 0, 0, 0, 0]], ["loc", [null, [37, 14], [40, 15]]], 0, 0]], ["class", "inventory-link"], 0, null, ["loc", [null, [36, 12], [44, 24]]]]],
          locals: ["stat"],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 24,
              "column": 4
            },
            "end": {
              "line": 48,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-approval-stats/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "stats", ["loc", [null, [25, 14], [25, 19]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [25, 6], [47, 15]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 56,
                  "column": 12
                },
                "end": {
                  "line": 61,
                  "column": 12
                }
              },
              "moduleName": "goods-gateway/components/vp-approval-stats/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "stat.count", ["loc", [null, [60, 14], [60, 28]]], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 49,
                "column": 6
              },
              "end": {
                "line": 64,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-approval-stats/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "approval status");
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "approval-inventory count");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("          ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
            morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
            return morphs;
          },
          statements: [["inline", "vp-listing", [], ["status", ["subexpr", "@mut", [["get", "stat.approvalStatus", ["loc", [null, [52, 32], [52, 51]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [52, 12], [52, 53]]], 0, 0], ["block", "link-to", ["inventory.index", ["subexpr", "contextual-params", [["get", "params", ["loc", [null, [57, 33], [57, 39]]], 0, 0, 0, 0]], ["approvalStatus", ["get", "stat.approvalStatus", ["loc", [null, [57, 55], [57, 74]]], 0, 0, 0, 0]], ["loc", [null, [57, 14], [57, 75]]], 0, 0]], ["class", "inventory-link"], 0, null, ["loc", [null, [56, 12], [61, 24]]]]],
          locals: ["stat"],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 48,
              "column": 4
            },
            "end": {
              "line": 65,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-approval-stats/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "overallStats", ["loc", [null, [49, 14], [49, 26]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [49, 6], [64, 15]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 68,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-approval-stats/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("table");
        dom.setAttribute(el1, "id", "approval-stats-table");
        dom.setAttribute(el1, "class", "table-lined");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("thead");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("tr");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        dom.setAttribute(el4, "class", "count");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("tbody");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [0]);
        var element3 = dom.childAt(element2, [1, 1]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(element3, 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element3, [3]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element2, [3]), 1, 1);
        return morphs;
      },
      statements: [["block", "vp-can", ["read_default"], [], 0, 1, ["loc", [null, [4, 6], [16, 17]]]], ["inline", "t", ["stats.approvals.count"], [], ["loc", [null, [18, 8], [18, 37]]], 0, 0], ["block", "vp-can", ["read_default"], [], 2, 3, ["loc", [null, [24, 4], [65, 15]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define('goods-gateway/components/vp-attachment-card/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // attributes
    tagName: 'li',
    classNameBindings: ['isHidden:hidden'],

    // properties
    attachment: null,
    hidden: false,
    isNew: null,

    actions: {
      deleteAttachment: function deleteAttachment(attachment) {
        if (attachment.get('isNew')) {
          attachment.deleteRecord();
        } else {
          this.set('hidden', true); // DOM won't update until http DELETE returns
          attachment.destroyRecord();
        }
      }
    }
  });
});
define("goods-gateway/components/vp-attachment-card/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-attachment-card/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("a");
        dom.setAttribute(el2, "target", "_blank");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        dom.setAttribute(el2, "class", "mx-circle-x warranty-attachment-delete-button");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(element0, [3]);
        var morphs = new Array(3);
        morphs[0] = dom.createAttrMorph(element1, 'href');
        morphs[1] = dom.createMorphAt(element1, 0, 0);
        morphs[2] = dom.createElementMorph(element2);
        return morphs;
      },
      statements: [["attribute", "href", ["get", "attachment.downloadLocation", ["loc", [null, [2, 12], [2, 39]]], 0, 0, 0, 0], 0, 0, 0, 0], ["content", "attachment.inferredFilename", ["loc", [null, [2, 58], [2, 89]]], 0, 0, 0, 0], ["element", "action", ["deleteAttachment", ["get", "attachment", ["loc", [null, [3, 90], [3, 100]]], 0, 0, 0, 0]], [], ["loc", [null, [3, 62], [3, 102]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-bulk/actions/component', ['exports', 'ember', 'goods-gateway/constants/bulk-actions'], function (exports, _ember, _goodsGatewayConstantsBulkActions) {
  exports['default'] = _ember['default'].Component.extend({
    i18n: _ember['default'].inject.service('i18n'),

    // args
    updateType: null,
    bulkActions: [],

    bulkActionOptions: _ember['default'].computed('bulkActions.[]', function () {
      var i18n = this.get('i18n');
      return this.get('bulkActions').map(function (action) {
        return {
          label: i18n.t(action),
          value: action
        };
      });
    }),

    showCategoryIds: _ember['default'].computed('updateType', function () {
      return _goodsGatewayConstantsBulkActions.ACTION_USES_CATEGORIES[this.get('updateType')] || false;
    }),
    actions: {
      addTag: function addTag(tag) {
        this.sendAction('addTag', tag);
      },
      removeTag: function removeTag(tag) {
        this.sendAction('removeTag', tag);
      }
    }
  });
});
define("goods-gateway/components/vp-bulk/actions/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 16,
              "column": 2
            },
            "end": {
              "line": 23,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-bulk/actions/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "vp-category-ids", [], ["categoryIds", ["subexpr", "@mut", [["get", "categoryIds", ["loc", [null, [19, 18], [19, 29]]], 0, 0, 0, 0]], [], [], 0, 0], "addTag", "addTag", "removeTag", "removeTag"], ["loc", [null, [18, 6], [21, 29]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-bulk/actions/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h5");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
        morphs[1] = dom.createMorphAt(element1, 3, 3);
        morphs[2] = dom.createMorphAt(element0, 3, 3);
        return morphs;
      },
      statements: [["inline", "t", ["bulkUpdater.bulkUpdateAction"], [], ["loc", [null, [4, 6], [4, 42]]], 0, 0], ["inline", "vp-select", [], ["options", ["subexpr", "@mut", [["get", "bulkActionOptions", ["loc", [null, [8, 14], [8, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [9, 12], [9, 16]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "updateType", "inputId", "bulk-action-selector", "showLabel", false], ["loc", [null, [7, 4], [13, 6]]], 0, 0], ["block", "if", [["get", "showCategoryIds", ["loc", [null, [16, 8], [16, 23]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [16, 2], [23, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-bulk/errors/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    hasErrors: _ember['default'].computed('errors.[]', function () {
      if (this.get('errors').length > 0) {
        return true;
      }
    }),
    actions: {
      reEnqueue: function reEnqueue(error) {
        this.sendAction('reEnqueue', error);
      },
      reEnqueueAll: function reEnqueueAll() {
        this.sendAction('reEnqueueAll');
      },
      removeAllErrors: function removeAllErrors() {
        this.sendAction('removeAllErrors');
      },
      removeError: function removeError(error) {
        this.sendAction('removeError', error);
      }
    }
  });
});
define("goods-gateway/components/vp-bulk/errors/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 14,
                "column": 8
              },
              "end": {
                "line": 32,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-bulk/errors/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "align-center");
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("input");
            dom.setAttribute(el3, "type", "submit");
            dom.setAttribute(el3, "class", "button button-secondary remove-error");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("input");
            dom.setAttribute(el3, "type", "submit");
            dom.setAttribute(el3, "class", "button button-secondary re-enqueue-error");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var element1 = dom.childAt(element0, [5]);
            var element2 = dom.childAt(element1, [1]);
            var element3 = dom.childAt(element1, [3]);
            var morphs = new Array(6);
            morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);
            morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 0, 0);
            morphs[2] = dom.createAttrMorph(element2, 'value');
            morphs[3] = dom.createElementMorph(element2);
            morphs[4] = dom.createAttrMorph(element3, 'value');
            morphs[5] = dom.createElementMorph(element3);
            return morphs;
          },
          statements: [["content", "error.details", ["loc", [null, [16, 14], [16, 31]]], 0, 0, 0, 0], ["content", "error.message", ["loc", [null, [17, 14], [17, 31]]], 0, 0, 0, 0], ["attribute", "value", ["subexpr", "t", ["bulkUpdater.removeError"], [], ["loc", [null, [null, null], [22, 51]]], 0, 0], 0, 0, 0, 0], ["element", "action", ["removeError", ["get", "error", ["loc", [null, [23, 37], [23, 42]]], 0, 0, 0, 0]], [], ["loc", [null, [23, 14], [23, 44]]], 0, 0], ["attribute", "value", ["subexpr", "t", ["bulkUpdater.reEnqueueDeal"], [], ["loc", [null, [null, null], [28, 53]]], 0, 0], 0, 0, 0, 0], ["element", "action", ["reEnqueue", ["get", "error", ["loc", [null, [29, 35], [29, 40]]], 0, 0, 0, 0]], [], ["loc", [null, [29, 14], [29, 42]]], 0, 0]],
          locals: ["error"],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-bulk/errors/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("table");
          dom.setAttribute(el1, "id", "error-list");
          dom.setAttribute(el1, "class", "table-lined");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("thead");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("tr");
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "class", "align-left");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("tbody");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("input");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "id", "remove-all-errors");
          dom.setAttribute(el1, "class", "button button-secondary");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("input");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "id", "re-enqueue-all-errors");
          dom.setAttribute(el1, "class", "button button-secondary");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element4 = dom.childAt(fragment, [1]);
          var element5 = dom.childAt(element4, [1, 1]);
          var element6 = dom.childAt(fragment, [3]);
          var element7 = dom.childAt(fragment, [5]);
          var morphs = new Array(8);
          morphs[0] = dom.createMorphAt(dom.childAt(element5, [1]), 0, 0);
          morphs[1] = dom.createMorphAt(dom.childAt(element5, [3]), 0, 0);
          morphs[2] = dom.createMorphAt(dom.childAt(element5, [5]), 0, 0);
          morphs[3] = dom.createMorphAt(dom.childAt(element4, [3]), 1, 1);
          morphs[4] = dom.createAttrMorph(element6, 'value');
          morphs[5] = dom.createElementMorph(element6);
          morphs[6] = dom.createAttrMorph(element7, 'value');
          morphs[7] = dom.createElementMorph(element7);
          return morphs;
        },
        statements: [["inline", "t", ["bulkUpdater.details"], [], ["loc", [null, [8, 33], [8, 60]]], 0, 0], ["inline", "t", ["bulkUpdater.response"], [], ["loc", [null, [9, 14], [9, 42]]], 0, 0], ["inline", "t", ["bulkUpdater.action"], [], ["loc", [null, [10, 14], [10, 40]]], 0, 0], ["block", "each", [["get", "errors", ["loc", [null, [14, 16], [14, 22]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [14, 8], [32, 17]]]], ["attribute", "value", ["subexpr", "t", ["bulkUpdater.removeAll"], [], ["loc", [null, [null, null], [39, 41]]], 0, 0], 0, 0, 0, 0], ["element", "action", ["removeAllErrors"], [], ["loc", [null, [40, 6], [40, 34]]], 0, 0], ["attribute", "value", ["subexpr", "t", ["bulkUpdater.reEnqueueAll"], [], ["loc", [null, [null, null], [45, 44]]], 0, 0], 0, 0, 0, 0], ["element", "action", ["reEnqueueAll"], [], ["loc", [null, [46, 6], [46, 31]]], 0, 0]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-bulk/errors/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column--3of3");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h5");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element8 = dom.childAt(fragment, [0, 1]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(element8, [1]), 0, 0);
        morphs[1] = dom.createMorphAt(element8, 3, 3);
        return morphs;
      },
      statements: [["inline", "t", ["bulkUpdater.errors"], [], ["loc", [null, [3, 8], [3, 34]]], 0, 0], ["block", "if", [["get", "hasErrors", ["loc", [null, [4, 10], [4, 19]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [4, 4], [47, 11]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-bulk/input/component', ['exports', 'ember', 'goods-gateway/constants/bulk-actions'], function (exports, _ember, _goodsGatewayConstantsBulkActions) {
  exports['default'] = _ember['default'].Component.extend({
    shouldDisableEnqueue: _ember['default'].computed('categoryIds.[]', 'updateType', 'permalinks', function () {
      var usesCategories = _goodsGatewayConstantsBulkActions.ACTION_USES_CATEGORIES[this.get('updateType')];
      var isMissingCategories = usesCategories && this.get('categoryIds').length === 0;
      return !this.get('updateType') || !this.get('permalinks') || isMissingCategories || false;
    }),

    actions: {
      enqueue: function enqueue() {
        this.sendAction('enqueue');
      }
    }
  });
});
define("goods-gateway/components/vp-bulk/input/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-bulk/input/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h5");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("form");
        dom.setAttribute(el3, "id", "deals-bulk-form");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("input");
        dom.setAttribute(el3, "type", "submit");
        dom.setAttribute(el3, "id", "enqueue-deals");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0, 1]);
        var element1 = dom.childAt(element0, [5]);
        var morphs = new Array(6);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);
        morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
        morphs[2] = dom.createAttrMorph(element1, 'class');
        morphs[3] = dom.createAttrMorph(element1, 'disabled');
        morphs[4] = dom.createAttrMorph(element1, 'value');
        morphs[5] = dom.createElementMorph(element1);
        return morphs;
      },
      statements: [["inline", "t", ["bulkUpdater.idsOrPermalinks"], [], ["loc", [null, [3, 8], [3, 43]]], 0, 0], ["inline", "textarea", [], ["id", "deal-list", "class", "text-input", "value", ["subexpr", "@mut", [["get", "permalinks", ["loc", [null, [7, 14], [7, 24]]], 0, 0, 0, 0]], [], [], 0, 0], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [8, 20], [8, 31]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [5, 6], [8, 33]]], 0, 0], ["attribute", "class", ["concat", ["button button-secondary ", ["subexpr", "if", [["get", "shouldDisableEnqueue", ["loc", [null, [13, 42], [13, 62]]], 0, 0, 0, 0], "is-disabled"], [], ["loc", [null, [13, 37], [13, 78]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "disabled", ["get", "shouldDisableEnqueue", ["loc", [null, [15, 17], [15, 37]]], 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "value", ["subexpr", "t", ["bulkUpdater.enqueueDeals"], [], ["loc", [null, [null, null], [16, 44]]], 0, 0], 0, 0, 0, 0], ["element", "action", ["enqueue"], [], ["loc", [null, [17, 6], [17, 26]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-bulk/process-button/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    shouldDisableProcess: _ember['default'].computed('queue.[]', 'isProcessing', function () {
      return this.get('isProcessing') || this.get('queue').length === 0 || false;
    }),

    actions: {
      process: function process() {
        this.sendAction('process');
      }
    }
  });
});
define("goods-gateway/components/vp-bulk/process-button/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-bulk/process-button/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("input");
        dom.setAttribute(el1, "type", "submit");
        dom.setAttribute(el1, "id", "process-deals");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(4);
        morphs[0] = dom.createAttrMorph(element0, 'class');
        morphs[1] = dom.createAttrMorph(element0, 'disabled');
        morphs[2] = dom.createAttrMorph(element0, 'value');
        morphs[3] = dom.createElementMorph(element0);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["button button-primary ", ["subexpr", "if", [["get", "shouldDisableProcess", ["loc", [null, [3, 36], [3, 56]]], 0, 0, 0, 0], "is-disabled"], [], ["loc", [null, [3, 31], [3, 72]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "disabled", ["get", "shouldDisableProcess", ["loc", [null, [4, 13], [4, 33]]], 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "value", ["subexpr", "t", ["bulkUpdater.processDeals"], [], ["loc", [null, [null, null], [6, 40]]], 0, 0], 0, 0, 0, 0], ["element", "action", ["process"], [], ["loc", [null, [7, 2], [7, 22]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-bulk/queue/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({});
});
define("goods-gateway/components/vp-bulk/queue/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 4
            },
            "end": {
              "line": 12,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-bulk/queue/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]), 0, 0);
          return morphs;
        },
        statements: [["content", "job.details", ["loc", [null, [10, 12], [10, 27]]], 0, 0, 0, 0]],
        locals: ["job"],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-bulk/queue/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("table");
        dom.setAttribute(el1, "class", "table-lined");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("thead");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("tr");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        dom.setAttribute(el4, "class", "align-left");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("tbody");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1, 1, 1]), 0, 0);
        morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["bulkUpdater.details"], [], ["loc", [null, [4, 29], [4, 56]]], 0, 0], ["block", "each", [["get", "queue", ["loc", [null, [8, 12], [8, 17]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [8, 4], [12, 13]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-bulk/status/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    successCount: _ember['default'].computed('successList.[]', function () {
      return this.get('successList').length;
    }),
    errorCount: _ember['default'].computed('errors.[]', function () {
      return this.get('errors').length;
    }),
    queueCount: _ember['default'].computed('queue.[]', function () {
      return this.get('queue').length;
    })
  });
});
define("goods-gateway/components/vp-bulk/status/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-bulk/status/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "queue-count");
        dom.setAttribute(el2, "class", "md-column align-center");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h5");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "status-count");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "success-count");
        dom.setAttribute(el2, "class", "md-column align-center");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h5");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "status-count success");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "error-count");
        dom.setAttribute(el2, "class", "md-column align-center");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h5");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "status-count error");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(element0, [3]);
        var element3 = dom.childAt(element0, [5]);
        var morphs = new Array(6);
        morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 0, 0);
        morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [3]), 0, 0);
        morphs[4] = dom.createMorphAt(dom.childAt(element3, [1]), 0, 0);
        morphs[5] = dom.createMorphAt(dom.childAt(element3, [3]), 0, 0);
        return morphs;
      },
      statements: [["inline", "t", ["bulkUpdater.enqueued"], [], ["loc", [null, [3, 8], [3, 36]]], 0, 0], ["content", "queueCount", ["loc", [null, [4, 30], [4, 44]]], 0, 0, 0, 0], ["inline", "t", ["bulkUpdater.success"], [], ["loc", [null, [7, 8], [7, 35]]], 0, 0], ["content", "successCount", ["loc", [null, [8, 38], [8, 54]]], 0, 0, 0, 0], ["inline", "t", ["bulkUpdater.errors"], [], ["loc", [null, [11, 8], [11, 34]]], 0, 0], ["content", "errorCount", ["loc", [null, [12, 36], [12, 50]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-bullet-points/component', ['exports', 'ember'], function (exports, _ember) {

  var ENTER_KEY = 13;
  exports['default'] = _ember['default'].Component.extend({
    //args
    bulletPoints: [],

    // attributes
    classNames: ['vp-bullet-points'],

    newBulletPoint: null,
    editingIndex: null,

    indexedBulletPoints: _ember['default'].computed('bulletPoints.@each', function () {
      return this.get('bulletPoints').map(function (bulletValue, index) {
        return _ember['default'].Object.create({
          id: index,
          value: bulletValue,
          isEditing: false
        });
      });
    }),

    keyPress: function keyPress(e) {
      if (e.which === ENTER_KEY) {
        if (_ember['default'].isPresent(this.get('editingIndex'))) {
          this.send('edit', this.get('editingIndex'));
        } else {
          this.send('add');
        }
        return false;
      }
    },

    didRender: function didRender() {
      var editingIndex = this.get('editingIndex');
      if (_ember['default'].isPresent(editingIndex)) {
        this.$('#bullet-edit-input-' + editingIndex).focus();
      }
    },

    actions: {
      add: function add() {
        if (_ember['default'].isBlank(this.get('newBulletPoint'))) {
          return;
        }
        this.get('bulletPoints').addObject(this.get('newBulletPoint'));
        this.set('newBulletPoint', null);
      },

      remove: function remove(item) {
        this.get('bulletPoints').removeObject(item);
      },

      makeEditable: function makeEditable(index) {
        this.set('editingIndex', index);
        var bulletPoint = this.get('indexedBulletPoints').findBy('id', index);
        bulletPoint.set('isEditing', true);
      },

      edit: function edit(index) {
        var newValue = this.get('indexedBulletPoints').findBy('id', index).value;
        this.set('editingIndex');
        if (_ember['default'].isBlank(newValue)) {
          this.get('bulletPoints').removeAt(index);
          return;
        }
        this.get('bulletPoints').replace(index, 1, newValue);
      }
    }
  });
});
define("goods-gateway/components/vp-bullet-points/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 17,
                "column": 6
              },
              "end": {
                "line": 24,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-bullet-points/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "input", [], ["id", ["subexpr", "concat", ["bullet-edit-input-", ["get", "bulletPoint.id", ["loc", [null, [19, 42], [19, 56]]], 0, 0, 0, 0]], [], ["loc", [null, [19, 13], [19, 57]]], 0, 0], "class", "text-input alt-input bullet-edit-input", "value", ["subexpr", "@mut", [["get", "bulletPoint.value", ["loc", [null, [21, 16], [21, 33]]], 0, 0, 0, 0]], [], [], 0, 0], "focusOut", ["subexpr", "action", ["edit", ["get", "bulletPoint.id", ["loc", [null, [22, 34], [22, 48]]], 0, 0, 0, 0]], [], ["loc", [null, [22, 19], [22, 49]]], 0, 0]], ["loc", [null, [18, 8], [23, 10]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 24,
                "column": 6
              },
              "end": {
                "line": 29,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-bullet-points/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("label");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("a");
            dom.setAttribute(el1, "tabIndex", "-1");
            dom.setAttribute(el1, "href", "#");
            dom.setAttribute(el1, "class", "mx-icon-close");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var element1 = dom.childAt(fragment, [3]);
            var morphs = new Array(5);
            morphs[0] = dom.createAttrMorph(element0, 'id');
            morphs[1] = dom.createElementMorph(element0);
            morphs[2] = dom.createMorphAt(element0, 1, 1);
            morphs[3] = dom.createAttrMorph(element1, 'id');
            morphs[4] = dom.createElementMorph(element1);
            return morphs;
          },
          statements: [["attribute", "id", ["concat", ["bullet-point-", ["get", "bulletPoint.id", ["loc", [null, [25, 34], [25, 48]]], 0, 0, 0, 0], "-label"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["makeEditable", ["get", "bulletPoint.id", ["loc", [null, [25, 82], [25, 96]]], 0, 0, 0, 0]], ["on", "click"], ["loc", [null, [25, 58], [25, 109]]], 0, 0], ["content", "bulletPoint.value", ["loc", [null, [26, 10], [26, 31]]], 0, 0, 0, 0], ["attribute", "id", ["concat", ["delete-bullet-point-", ["get", "bulletPoint.id", ["loc", [null, [28, 51], [28, 65]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["remove", ["get", "bulletPoint.value", ["loc", [null, [28, 87], [28, 104]]], 0, 0, 0, 0]], [], ["loc", [null, [28, 69], [28, 106]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 15,
              "column": 2
            },
            "end": {
              "line": 31,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-bullet-points/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element2 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element2, 'id');
          morphs[1] = dom.createMorphAt(element2, 1, 1);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", ["bullet-point-", ["get", "bulletPoint.id", ["loc", [null, [16, 27], [16, 41]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "if", [["get", "bulletPoint.isEditing", ["loc", [null, [17, 12], [17, 33]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [17, 6], [29, 13]]]]],
        locals: ["bulletPoint"],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-bullet-points/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("ul");
        dom.setAttribute(el1, "class", "bullet-points");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-field", [], ["class", "is-filled", "errorKey", "bulletPoints", "id", "add-bullet-point-input", "immediateErrors", ["subexpr", "@mut", [["get", "immediateErrors", ["loc", [null, [5, 18], [5, 33]]], 0, 0, 0, 0]], [], [], 0, 0], "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [6, 8], [6, 12]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "newBulletPoint", "tRoot", "vp-product", "tKey", "bulletPoints", "placeholder", ["subexpr", "t", ["vp-product.bulletPointsPlaceholder"], [], ["loc", [null, [10, 14], [10, 54]]], 0, 0], "validityModel", ["subexpr", "@mut", [["get", "validityModel", ["loc", [null, [11, 16], [11, 29]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [1, 0], [12, 2]]], 0, 0], ["block", "each", [["get", "indexedBulletPoints", ["loc", [null, [15, 10], [15, 29]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [15, 2], [31, 11]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-can/component', ['exports', 'ember'], function (exports, _ember) {

  var component = _ember['default'].Component.extend({

    tagName: '',
    // dependencies
    authorization: _ember['default'].inject.service('authorization'),

    // args
    allowedPermissions: _ember['default'].computed('params.[]', function () {
      return this.get('params');
    }),

    // helpers
    showContent: _ember['default'].computed('authorization.userInfo', 'authorization.userInfo.permissions.[]', 'allowedPermissions.[]', function () {
      var _this = this;

      return this.get('allowedPermissions').every(function (permission) {
        return _this.get('authorization').can(permission);
      });
    })
  });

  component.reopenClass({
    positionalParams: 'params'
  });

  exports['default'] = component;
});
//This is deprecated in favor of app/helpers/can.js
define("goods-gateway/components/vp-can/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-can/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "yield", ["loc", [null, [2, 2], [2, 11]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-can/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "yield", [], ["to", "inverse"], ["loc", [null, [4, 2], [4, 24]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-can/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "showContent", ["loc", [null, [1, 6], [1, 17]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [1, 0], [5, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-catalog-export-status/component', ['exports', 'ember', 'goods-gateway/utils/download-utility', 'goods-gateway/utils/format-bytes'], function (exports, _ember, _goodsGatewayUtilsDownloadUtility, _goodsGatewayUtilsFormatBytes) {
  exports['default'] = _ember['default'].Component.extend({
    classNames: ['md-column--1of2'],
    gpapi: _ember['default'].inject.service(),

    init: function init() {
      if (!this.get('catalogExports')) {
        this.set('catalogExports', []);
      }
      this._super.apply(this, arguments);
    },

    noExportRecords: _ember['default'].computed('catalogExports', function () {
      return this.get('catalogExports').length === 0;
    }),

    exportRecordsTemplate: _ember['default'].computed('catalogExports', function () {
      return this.get('catalogExports').map(function (record) {
        return {
          vendorId: record.get('vendorId'),
          status: record.get('status'),
          view: record.get('view'),
          date: record.get('createdAt'),
          fileName: record.get('catalogExportFile.filename'),
          url: record.get('catalogExportFile.url'),
          size: (0, _goodsGatewayUtilsFormatBytes['default'])(record.get('catalogExportFile.byteSize'), 1),
          isComplete: record.get('status') === 'complete',
          id: record.get('id')
        };
      });
    }),

    actions: {
      downloadFile: function downloadFile(endpoint, id) {
        var _this = this;

        this.get('gpapi').request('bulk.v1.exports.id.show', { id: id }).then(function (data) {
          var overrideUri = {
            "export": data['export'].downloadUri
          };
          _goodsGatewayUtilsDownloadUtility['default'].fileDownload(endpoint, id, _this.$(), overrideUri[endpoint]);
        });
      }
    }
  });
});
define("goods-gateway/components/vp-catalog-export-status/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 8
            },
            "end": {
              "line": 8,
              "column": 8
            }
          },
          "moduleName": "goods-gateway/components/vp-catalog-export-status/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["inline", "t", ["catalog-exports.headings.vendor"], [], ["loc", [null, [7, 14], [7, 53]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 16,
              "column": 4
            },
            "end": {
              "line": 22,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-catalog-export-status/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tbody");
          dom.setAttribute(el1, "class", "no-jobs");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("tr");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("td");
          dom.setAttribute(el3, "colspan", "4");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1, 1]), 0, 0);
          return morphs;
        },
        statements: [["inline", "t", ["catalog-exports.noExports"], [], ["loc", [null, [19, 26], [19, 59]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 26,
                  "column": 12
                },
                "end": {
                  "line": 28,
                  "column": 12
                }
              },
              "moduleName": "goods-gateway/components/vp-catalog-export-status/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              dom.setAttribute(el1, "class", "export-vendorId");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
              return morphs;
            },
            statements: [["content", "export.vendorId", ["loc", [null, [27, 42], [27, 61]]], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 29,
                  "column": 12
                },
                "end": {
                  "line": 41,
                  "column": 12
                }
              },
              "moduleName": "goods-gateway/components/vp-catalog-export-status/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("span");
              dom.setAttribute(el2, "class", "underline-on-hover download-link");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              dom.setAttribute(el1, "class", "status-text");
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("div");
              dom.setAttribute(el2, "class", "download-link");
              var el3 = dom.createTextNode("\n                ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("span");
              dom.setAttribute(el3, "class", "fa fa-cloud-download");
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n                ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("strong");
              var el4 = dom.createComment("");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n              ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var element1 = dom.childAt(fragment, [7, 1]);
              var morphs = new Array(6);
              morphs[0] = dom.createElementMorph(element0);
              morphs[1] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);
              morphs[2] = dom.createMorphAt(dom.childAt(fragment, [3]), 0, 0);
              morphs[3] = dom.createMorphAt(dom.childAt(fragment, [5]), 0, 0);
              morphs[4] = dom.createElementMorph(element1);
              morphs[5] = dom.createMorphAt(dom.childAt(element1, [3]), 0, 0);
              return morphs;
            },
            statements: [["element", "action", ["downloadFile", "export", ["get", "export.id", ["loc", [null, [30, 51], [30, 60]]], 0, 0, 0, 0]], [], ["loc", [null, [30, 18], [30, 62]]], 0, 0], ["content", "export.fileName", ["loc", [null, [31, 63], [31, 82]]], 0, 0, 0, 0], ["inline", "t", [["subexpr", "concat", ["catalog-exports.views.", ["get", "export.view", ["loc", [null, [33, 55], [33, 66]]], 0, 0, 0, 0]], [], ["loc", [null, [33, 22], [33, 67]]], 0, 0]], [], ["loc", [null, [33, 18], [33, 69]]], 0, 0], ["inline", "moment-format", [["get", "export.date", ["loc", [null, [34, 34], [34, 45]]], 0, 0, 0, 0], "L LTS"], [], ["loc", [null, [34, 18], [34, 55]]], 0, 0], ["element", "action", ["downloadFile", "export", ["get", "export.id", ["loc", [null, [36, 74], [36, 83]]], 0, 0, 0, 0]], [], ["loc", [null, [36, 41], [36, 85]]], 0, 0], ["inline", "t", ["catalog-exports.statusMsg.exportIsComplete"], [], ["loc", [null, [38, 24], [38, 74]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 41,
                  "column": 12
                },
                "end": {
                  "line": 46,
                  "column": 12
                }
              },
              "moduleName": "goods-gateway/components/vp-catalog-export-status/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              dom.setAttribute(el1, "class", "status-text");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(4);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
              morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 0, 0);
              morphs[2] = dom.createMorphAt(dom.childAt(fragment, [5]), 0, 0);
              morphs[3] = dom.createMorphAt(dom.childAt(fragment, [7]), 0, 0);
              return morphs;
            },
            statements: [["content", "export.fileName", ["loc", [null, [42, 18], [42, 37]]], 0, 0, 0, 0], ["inline", "t", [["subexpr", "concat", ["catalog-exports.views.", ["get", "export.view", ["loc", [null, [43, 55], [43, 66]]], 0, 0, 0, 0]], [], ["loc", [null, [43, 22], [43, 67]]], 0, 0]], [], ["loc", [null, [43, 18], [43, 69]]], 0, 0], ["inline", "moment-format", [["get", "export.date", ["loc", [null, [44, 34], [44, 45]]], 0, 0, 0, 0], "L LTS"], [], ["loc", [null, [44, 18], [44, 55]]], 0, 0], ["content", "export.status", ["loc", [null, [45, 38], [45, 55]]], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 24,
                "column": 8
              },
              "end": {
                "line": 48,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-catalog-export-status/template.hbs"
          },
          isEmpty: false,
          arity: 2,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element2, 'class');
            morphs[1] = dom.createMorphAt(element2, 1, 1);
            morphs[2] = dom.createMorphAt(element2, 2, 2);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", [["subexpr", "if", [["get", "export.isComplete", ["loc", [null, [25, 26], [25, 43]]], 0, 0, 0, 0], "complete-status"], [], ["loc", [null, [25, 21], [25, 63]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "vp-can", ["read_default"], [], 0, null, ["loc", [null, [26, 12], [28, 23]]]], ["block", "if", [["get", "export.isComplete", ["loc", [null, [29, 18], [29, 35]]], 0, 0, 0, 0]], [], 1, 2, ["loc", [null, [29, 12], [46, 19]]]]],
          locals: ["export", "index"],
          templates: [child0, child1, child2]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 22,
              "column": 4
            },
            "end": {
              "line": 50,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-catalog-export-status/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tbody");
          dom.setAttribute(el1, "class", "exports-list");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["block", "each", [["get", "exportRecordsTemplate", ["loc", [null, [24, 16], [24, 37]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [24, 8], [48, 17]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-catalog-export-status/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "class", "catalog-export-status");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("table");
        dom.setAttribute(el2, "class", "table-lined");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("thead");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("tr");
        dom.setAttribute(el4, "class", "header-row");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        dom.setAttribute(el5, "class", "status-text");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element3 = dom.childAt(fragment, [0]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element4, [1, 1]);
        var morphs = new Array(7);
        morphs[0] = dom.createMorphAt(dom.childAt(element3, [1]), 0, 0);
        morphs[1] = dom.createMorphAt(element5, 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element5, [3]), 0, 0);
        morphs[3] = dom.createMorphAt(dom.childAt(element5, [5]), 0, 0);
        morphs[4] = dom.createMorphAt(dom.childAt(element5, [7]), 0, 0);
        morphs[5] = dom.createMorphAt(dom.childAt(element5, [9]), 0, 0);
        morphs[6] = dom.createMorphAt(element4, 3, 3);
        return morphs;
      },
      statements: [["inline", "t", ["catalog-exports.headings.main"], [], ["loc", [null, [2, 6], [2, 43]]], 0, 0], ["block", "vp-can", ["read_default"], [], 0, null, ["loc", [null, [6, 8], [8, 19]]]], ["inline", "t", ["catalog-exports.headings.filename"], [], ["loc", [null, [9, 12], [9, 53]]], 0, 0], ["inline", "t", ["catalog-exports.headings.viewType"], [], ["loc", [null, [10, 12], [10, 53]]], 0, 0], ["inline", "t", ["catalog-exports.headings.exportDate"], [], ["loc", [null, [11, 12], [11, 55]]], 0, 0], ["inline", "t", ["catalog-exports.headings.exportStatus"], [], ["loc", [null, [12, 32], [12, 77]]], 0, 0], ["block", "if", [["get", "noExportRecords", ["loc", [null, [16, 10], [16, 25]]], 0, 0, 0, 0]], [], 1, 2, ["loc", [null, [16, 4], [50, 11]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define('goods-gateway/components/vp-category-attribute/component', ['exports', 'ember', 'goods-gateway/utils/content-for-locale', 'goods-gateway/constants/category-ids'], function (exports, _ember, _goodsGatewayUtilsContentForLocale, _goodsGatewayConstantsCategoryIds) {

  var ENTER_KEY = 13;
  var EN_US_LOCALE = 'en_US';

  exports['default'] = _ember['default'].Component.extend({
    i18n: _ember['default'].inject.service(),

    // attributes
    classNames: ['vp-category-attribute'],

    // helpers
    freeformValue: null,

    isFreeform: _ember['default'].computed.equal('attribute.selectableValues.firstObject.id', _goodsGatewayConstantsCategoryIds.FREEFORM_ATTRIBUTE_ID),

    label: _ember['default'].computed('attribute.localizedContents.[]', 'attribute.required', function () {
      var locale = this.get('i18n.locale');
      var label = (0, _goodsGatewayUtilsContentForLocale['default'])(locale, this.get('attribute.localizedContents'));

      if (!label) {
        label = '';
      } else {
        label = label.get('name');
      }

      if (this.get('attribute.required')) {
        return this.get('i18n').t('vp-category-attribute.required', { value: label });
      }

      return label;
    }),

    keyPress: function keyPress(e) {
      if (!this.get('isFreeform')) {
        return true;
      }

      if (e.which === ENTER_KEY) {
        this.send('addFreeform');
        return false;
      }
    },

    actions: {
      addFreeform: function addFreeform() {
        var value = this.get('freeformValue');
        if (!value) {
          return;
        }

        var freeformObject = _ember['default'].Object.create({
          id: _goodsGatewayConstantsCategoryIds.FREEFORM_ATTRIBUTE_ID,
          displayName: value,
          localizedContents: [_ember['default'].Object.create({
            locale: EN_US_LOCALE,
            attrValue: value
          })]
        });

        this.set('freeformValue', null);
        this.get('attribute.selectedValues').addObject(freeformObject);
      }
    }
  });
});
define("goods-gateway/components/vp-category-attribute/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-category-attribute/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-field", [], ["inputId", ["subexpr", "@mut", [["get", "attribute.id", ["loc", [null, [3, 12], [3, 24]]], 0, 0, 0, 0]], [], [], 0, 0], "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [4, 10], [4, 14]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "freeformValue", "label", ["subexpr", "@mut", [["get", "label", ["loc", [null, [6, 10], [6, 15]]], 0, 0, 0, 0]], [], [], 0, 0], "placeholder", ["subexpr", "t", ["vp-category-attribute.placeholder"], [], ["loc", [null, [7, 16], [7, 55]]], 0, 0]], ["loc", [null, [2, 2], [7, 57]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 0
            },
            "end": {
              "line": 15,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-category-attribute/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-typeahead", [], ["id", ["subexpr", "@mut", [["get", "attribute.id", ["loc", [null, [10, 7], [10, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "values", ["subexpr", "@mut", [["get", "attribute.selectableValues", ["loc", [null, [11, 11], [11, 37]]], 0, 0, 0, 0]], [], [], 0, 0], "selectedValues", ["subexpr", "@mut", [["get", "attribute.selectedValues", ["loc", [null, [12, 19], [12, 43]]], 0, 0, 0, 0]], [], [], 0, 0], "required", ["subexpr", "@mut", [["get", "attribute.required", ["loc", [null, [13, 13], [13, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "placeholder", ["subexpr", "@mut", [["get", "label", ["loc", [null, [14, 16], [14, 21]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [9, 2], [14, 23]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-category-attribute/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "isFreeform", ["loc", [null, [1, 6], [1, 16]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [1, 0], [15, 7]]]], ["inline", "vp-tags", [], ["selectedItems", ["subexpr", "@mut", [["get", "attribute.selectedValues", ["loc", [null, [17, 24], [17, 48]]], 0, 0, 0, 0]], [], [], 0, 0], "nameField", "displayName"], ["loc", [null, [17, 0], [17, 74]]], 0, 0]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-category-display/component', ['exports', 'ember', 'goods-gateway/utils/replace-underscores-with-pipes', 'goods-gateway/utils/content-for-locale'], function (exports, _ember, _goodsGatewayUtilsReplaceUnderscoresWithPipes, _goodsGatewayUtilsContentForLocale) {
  exports['default'] = _ember['default'].Component.extend({
    tagName: '',
    i18n: _ember['default'].inject.service(),

    categoryDisplay: _ember['default'].computed('category', function () {
      var category = this.get('category');
      if (!category) {
        return;
      }
      var locale = this.get('i18n.locale');
      var localizedContent = (0, _goodsGatewayUtilsContentForLocale['default'])(locale, category.get('localizedContents'));
      if (localizedContent) {
        return (0, _goodsGatewayUtilsReplaceUnderscoresWithPipes['default'])(localizedContent.get('description') || localizedContent.get('name'));
      }
    })
  });
});
define("goods-gateway/components/vp-category-display/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-category-display/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "categoryDisplay", ["loc", [null, [1, 0], [1, 19]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-category-ids/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    actions: {
      addTag: function addTag(tag) {
        this.$('#add-category-id-input').val('');
        this.sendAction('addTag', tag && tag.trim());
      },
      removeTag: function removeTag(tag) {
        this.sendAction('removeTag', tag && tag.trim());
      }
    }
  });
});
define("goods-gateway/components/vp-category-ids/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 6,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-category-ids/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          dom.setAttribute(el1, "class", "tag-item");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element0, 'id');
          morphs[1] = dom.createElementMorph(element0);
          morphs[2] = dom.createMorphAt(element0, 0, 0);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", ["tag-item-", ["get", "categoryId", ["loc", [null, [5, 57], [5, 67]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["removeTag", ["get", "categoryId", ["loc", [null, [5, 29], [5, 39]]], 0, 0, 0, 0]], [], ["loc", [null, [5, 8], [5, 41]]], 0, 0], ["content", "categoryId", ["loc", [null, [5, 88], [5, 102]]], 0, 0, 0, 0]],
        locals: ["categoryId"],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-category-ids/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h5");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("ul");
        dom.setAttribute(el1, "class", "tag-list");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("button");
        dom.setAttribute(el1, "class", "button button-secondary");
        dom.setAttribute(el1, "id", "add-category");
        var el2 = dom.createTextNode("Add");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [6]);
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 1, 1);
        morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        morphs[3] = dom.createElementMorph(element1);
        return morphs;
      },
      statements: [["inline", "t", ["deal.categoryIdsHeader"], [], ["loc", [null, [1, 4], [1, 34]]], 0, 0], ["block", "each", [["get", "categoryIds", ["loc", [null, [4, 10], [4, 21]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [4, 2], [6, 11]]]], ["inline", "input", [], ["id", "add-category-id-input", "class", "text-input", "value", ["subexpr", "@mut", [["get", "newTag", ["loc", [null, [12, 8], [12, 14]]], 0, 0, 0, 0]], [], [], 0, 0], "placeholder", ["subexpr", "t", ["deal.categoryPlaceholder"], [], ["loc", [null, [13, 14], [13, 44]]], 0, 0], "type", "text", "enter", "addTag"], ["loc", [null, [9, 0], [15, 18]]], 0, 0], ["element", "action", ["addTag", ["get", "newTag", ["loc", [null, [17, 76], [17, 82]]], 0, 0, 0, 0]], [], ["loc", [null, [17, 58], [17, 84]]], 0, 0]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-checkbox/component', ['exports', 'ember', 'goods-gateway/mixins/field'], function (exports, _ember, _goodsGatewayMixinsField) {
  exports['default'] = _ember['default'].Component.extend(_goodsGatewayMixinsField['default'], {
    // args
    disabled: false,
    inputId: null,
    showLabel: true
  });
});
define("goods-gateway/components/vp-checkbox/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 2
            },
            "end": {
              "line": 13,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-checkbox/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "label", ["loc", [null, [12, 4], [12, 13]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-checkbox/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("label");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        dom.setAttribute(el2, "class", "checkbox");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(4);
        morphs[0] = dom.createAttrMorph(element0, 'class');
        morphs[1] = dom.createAttrMorph(element0, 'for');
        morphs[2] = dom.createMorphAt(element0, 1, 1);
        morphs[3] = dom.createMorphAt(element0, 5, 5);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["checkbox-label ", ["subexpr", "if", [["get", "disabled", ["loc", [null, [1, 34], [1, 42]]], 0, 0, 0, 0], "disabled"], [], ["loc", [null, [1, 29], [1, 55]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "for", ["get", "inputElementId", ["loc", [null, [1, 63], [1, 77]]], 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "input", [], ["id", ["subexpr", "@mut", [["get", "inputElementId", ["loc", [null, [3, 7], [3, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "name", ["subexpr", "@mut", [["get", "field", ["loc", [null, [4, 9], [4, 14]]], 0, 0, 0, 0]], [], [], 0, 0], "type", "checkbox", "checked", ["subexpr", "@mut", [["get", "value", ["loc", [null, [6, 12], [6, 17]]], 0, 0, 0, 0]], [], [], 0, 0], "disabled", ["subexpr", "@mut", [["get", "disabled", ["loc", [null, [7, 13], [7, 21]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [2, 2], [8, 4]]], 0, 0], ["block", "if", [["get", "showLabel", ["loc", [null, [11, 8], [11, 17]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [11, 2], [13, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-concatenated-categories/component', ['exports', 'ember', 'goods-gateway/utils/content-for-locale'], function (exports, _ember, _goodsGatewayUtilsContentForLocale) {
  exports['default'] = _ember['default'].Component.extend({
    // dependencies
    i18n: _ember['default'].inject.service(),

    //args
    item: null,
    delimiter: null,
    asList: false,

    // attributes
    classNames: ['vp-concatenated-categories'],

    //helpers
    attributes: _ember['default'].computed.oneWay('item.attributes'),
    categories: _ember['default'].computed.oneWay('item.category.variantCategories'), // MRTAs

    _freeformAttributeLocalizedContents: _ember['default'].computed.mapBy('attributes', 'localizedContents'),
    _freeformAttributeLocalizedContentsFlattened: _ember['default'].computed('_freeformAttributeLocalizedContents.@each.length', function () {
      return this.get('_freeformAttributeLocalizedContents').reduce(function (flattenedArray, contents) {
        if (contents.length) {
          flattenedArray.pushObjects(contents.map(function (content) {
            return content;
          }));
        }
        return flattenedArray;
      }, []);
    }),
    _freeformAttributeNames: _ember['default'].computed.mapBy('_freeformAttributeLocalizedContentsFlattened', 'attrValue'),

    asSentence: _ember['default'].computed('displayValues', function () {
      var delimiter = this.get('delimiter') || this.get('i18n').t('syntaxConfig.listSeparator');
      return this.getWithDefault('displayValues', []).join(delimiter);
    }),

    displayValues: _ember['default'].computed('attributes.@each.attrValueId', 'categories.@each.id', '_freeformAttributeNames.@each', function () {
      var _this = this;

      this.get('_freeformAttributeWatcher.firstObject.attrValue'); // Poke Ember
      var locale = this.get('i18n.locale');
      this.get('_freeformAttributeNames'); // Poke ember

      if (!this.get('categories.length') || !this.get('attributes.length')) {
        return;
      }

      return this.get('attributes').map(function (attribute) {
        if (attribute.get('localizedContents.length')) {
          var _content = (0, _goodsGatewayUtilsContentForLocale['default'])(locale, attribute.get('localizedContents'));
          if (_content && _ember['default'].isPresent(_content.get('attrValue'))) {
            return _content.get('attrValue');
          }
        }

        var mrt = _this.get('categories').findBy('id', attribute.get('attrNameId'));
        var mrtValue = mrt && mrt.get('values').findBy('id', attribute.get('attrValueId'));
        var content = mrtValue && (0, _goodsGatewayUtilsContentForLocale['default'])(locale, mrtValue.get('localizedContents'));
        return content && _ember['default'].isPresent(content.get('name')) ? content.get('name') : undefined;
      }).compact();
    })
  });
});
define("goods-gateway/components/vp-concatenated-categories/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 6,
                "column": 2
              }
            },
            "moduleName": "goods-gateway/components/vp-concatenated-categories/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "category-value");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["content", "value", ["loc", [null, [4, 6], [4, 15]]], 0, 0, 0, 0]],
          locals: ["value"],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-concatenated-categories/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "displayValues", ["loc", [null, [2, 10], [2, 23]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [2, 2], [6, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-concatenated-categories/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "asSentence", ["loc", [null, [8, 2], [8, 16]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-concatenated-categories/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "asList", ["loc", [null, [1, 6], [1, 12]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [1, 0], [9, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-confirm-cancel-modal/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    actions: {
      cancel: function cancel() {
        this.sendAction('cancel');
      },
      confirm: function confirm() {
        this.sendAction('confirm');
      }
    }
  });
});
define("goods-gateway/components/vp-confirm-cancel-modal/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 4
            },
            "end": {
              "line": 9,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-confirm-cancel-modal/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["vp-contract-notes-modal.cancel"], [], ["loc", [null, [8, 6], [8, 44]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 4
            },
            "end": {
              "line": 12,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-confirm-cancel-modal/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["vp-contract-notes-modal.confirm"], [], ["loc", [null, [11, 6], [11, 45]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-confirm-cancel-modal/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "class", "confirm-cancel-modal");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "button-row align-right");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [3]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
        morphs[1] = dom.createMorphAt(element1, 1, 1);
        morphs[2] = dom.createMorphAt(element1, 2, 2);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [3, 4], [3, 13]]], 0, 0, 0, 0], ["block", "mx-button", [], ["class", "cancel-button-modal", "secondary", true, "action", "cancel"], 0, null, ["loc", [null, [7, 4], [9, 18]]]], ["block", "mx-button", [], ["class", "confirm-button-modal", "action", "confirm"], 1, null, ["loc", [null, [10, 4], [12, 18]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-confirm-modal/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    actions: {
      cancelAction: function cancelAction() {
        this.sendAction('cancelAction');
      },
      confirmAction: function confirmAction() {
        this.sendAction('confirmAction');
      }
    }
  });
});
define("goods-gateway/components/vp-confirm-modal/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 6,
                "column": 4
              },
              "end": {
                "line": 8,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-confirm-modal/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["confirmModal.cancel"], [], ["loc", [null, [7, 6], [7, 33]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 9,
                "column": 4
              },
              "end": {
                "line": 11,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-confirm-modal/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["confirmModal.confirm"], [], ["loc", [null, [10, 6], [10, 34]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-confirm-modal/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          dom.setAttribute(el1, "class", "md-column align-center");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column align-center");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [3]);
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(element0, 1, 1);
          morphs[2] = dom.createMorphAt(element0, 2, 2);
          return morphs;
        },
        statements: [["content", "warning", ["loc", [null, [3, 4], [3, 15]]], 0, 0, 0, 0], ["block", "mx-button", [], ["action", "cancelAction", "secondary", true, "class", "cancel-action-button"], 0, null, ["loc", [null, [6, 4], [8, 18]]]], ["block", "mx-button", [], ["action", "confirmAction", "class", "confirm-action-button"], 1, null, ["loc", [null, [9, 4], [11, 18]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-confirm-modal/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "mx-modal", [], ["closeable", false, "open", ["subexpr", "@mut", [["get", "isShowingConfirmModal", ["loc", [null, [1, 33], [1, 54]]], 0, 0, 0, 0]], [], [], 0, 0], "title", ["subexpr", "@mut", [["get", "title", ["loc", [null, [1, 61], [1, 66]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [1, 0], [13, 13]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-contract-daterange/component', ['exports', 'ember', 'goods-gateway/mixins/daterange'], function (exports, _ember, _goodsGatewayMixinsDaterange) {
  exports['default'] = _ember['default'].Component.extend(_goodsGatewayMixinsDaterange['default'], {
    authorization: _ember['default'].inject.service('authorization'),

    classNames: ['vp-contract-daterange', 'row'],

    model: _ember['default'].computed.alias('contract'),
    enabled: _ember['default'].computed.and('editable', 'authorization.isExternal'),
    disabled: _ember['default'].computed.not('enabled')
  });
});
define("goods-gateway/components/vp-contract-daterange/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-contract-daterange/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column clear-padding start-date");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column clear-padding end-date");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(fragment, [2]);
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(element0, 1, 1);
        morphs[1] = dom.createMorphAt(element0, 3, 3);
        morphs[2] = dom.createMorphAt(element1, 1, 1);
        morphs[3] = dom.createMorphAt(element1, 3, 3);
        return morphs;
      },
      statements: [["inline", "t", ["contract.startDate"], [], ["loc", [null, [2, 2], [2, 28]]], 0, 0], ["inline", "pikaday-input", [], ["value", ["subexpr", "@mut", [["get", "startDate", ["loc", [null, [4, 10], [4, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "disabled", ["subexpr", "@mut", [["get", "disabled", ["loc", [null, [5, 13], [5, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "class", "alt-input", "minDate", ["subexpr", "@mut", [["get", "minStartDate", ["loc", [null, [7, 12], [7, 24]]], 0, 0, 0, 0]], [], [], 0, 0], "maxDate", ["subexpr", "@mut", [["get", "maxStartDate", ["loc", [null, [8, 12], [8, 24]]], 0, 0, 0, 0]], [], [], 0, 0], "options", ["subexpr", "hash", [], ["defaultDate", ["get", "minStartDate", ["loc", [null, [9, 30], [9, 42]]], 0, 0, 0, 0]], ["loc", [null, [9, 12], [9, 43]]], 0, 0], "format", ["subexpr", "@mut", [["get", "dateFormat", ["loc", [null, [10, 11], [10, 21]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [3, 2], [11, 4]]], 0, 0], ["inline", "t", ["contract.endDate"], [], ["loc", [null, [15, 2], [15, 26]]], 0, 0], ["inline", "pikaday-input", [], ["value", ["subexpr", "@mut", [["get", "endDate", ["loc", [null, [17, 10], [17, 17]]], 0, 0, 0, 0]], [], [], 0, 0], "disabled", ["subexpr", "@mut", [["get", "disabled", ["loc", [null, [18, 13], [18, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "class", "alt-input", "minDate", ["subexpr", "@mut", [["get", "minEndDate", ["loc", [null, [20, 12], [20, 22]]], 0, 0, 0, 0]], [], [], 0, 0], "options", ["subexpr", "hash", [], ["defaultDate", ["get", "minStartDate", ["loc", [null, [21, 30], [21, 42]]], 0, 0, 0, 0]], ["loc", [null, [21, 12], [21, 43]]], 0, 0], "format", ["subexpr", "@mut", [["get", "dateFormat", ["loc", [null, [22, 11], [22, 21]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [16, 2], [23, 4]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-contract-form/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // dependencies
    authorization: _ember['default'].inject.service('authorization'),
    i18n: _ember['default'].inject.service(),
    flashMessages: _ember['default'].inject.service('flash-messages'),

    // attributes
    classNames: ['vp-contract-form', 'md-column'],

    hasAgreedToTerms: false,
    isShowingApproveModal: false,
    isShowingEndContractConfirmationModal: false,
    isShowingRejectModal: false,

    isValid: _ember['default'].computed.and('contract.isValid', 'contract.allChildrenValid'),

    readyToApprove: _ember['default'].computed.and('isValid', 'contract.isSellPricePresentOnEveryItem'),

    readyToSubmit: _ember['default'].computed.and('isValid', 'hasAgreedToTerms'),

    readyToSubmitAfterUpdate: _ember['default'].computed.and('isValid', 'hasAgreedToTerms', 'contract.isShippingCostPresentOnEveryItem'),

    needToAgree: _ember['default'].computed.or('canSubmit', 'canResubmit', 'canUpdate'),

    canEndContract: _ember['default'].computed('contract.isActive', function () {
      return this.get('contract.isActive') && this.get('authorization').can('write_default');
    }),

    canSubmit: _ember['default'].computed.and('contract.isNew', 'authorization.isExternal'),

    canUpdate: _ember['default'].computed('contract.isNew', 'contract.isPending', function () {
      return !this.get('contract.isNew') && this.get('contract.isPending') && this.get('authorization.isExternal');
    }),

    canResubmit: _ember['default'].computed('contract.isNew', 'contract.isRejected', function () {
      return !this.get('contract.isNew') && this.get('contract.isRejected') && this.get('authorization.isExternal');
    }),

    canModify: _ember['default'].computed('contract.isContracted', function () {
      return this.get('contract.isContracted') && this.get('authorization').can('write_default');
    }),

    canApprove: _ember['default'].computed('contract.isNew', 'contract.editable', function () {
      return !this.get('contract.isNew') && this.get('contract.editable') && //because buyer can approve a rejected contract
      this.get('authorization').can('write_default');
    }),

    canReject: _ember['default'].computed('contract.isNew', 'contract.isPending', function () {
      return !this.get('contract.isNew') && this.get('contract.isPending') && this.get('authorization').can('write_default');
    }),

    termsAndConditions: _ember['default'].computed(function () {
      var i18n = this.get('i18n');
      var goodsVendorGuideLinkText = i18n.t('contract.goodsVendorGuideLinkText');
      var goodsVendorGuideLink = _ember['default'].$('<a>', {
        href: 'https://www.groupon.com/guides/GoodsVendorGuide.pdf',
        target: '_blank',
        text: goodsVendorGuideLinkText
      });

      return i18n.t('contract.terms', {
        goodsVendorGuide: goodsVendorGuideLink[0].outerHTML
      });
    }),

    init: function init() {
      var _this = this;

      this._super.apply(this, arguments);
      if (this._shouldDisplayEffectiveDateNotInFutureNotification()) {
        _ember['default'].run.later(function () {
          _this.get('flashMessages').add({
            message: _this.get('i18n').t('contract.startDateInThePastNotification'),
            type: 'alert-notify',
            sticky: true
          });
        });
      }
    },

    _shouldDisplayEffectiveDateNotInFutureNotification: function _shouldDisplayEffectiveDateNotInFutureNotification() {
      return this.get('authorization').can('read_default') && this.get('contract.status') === 'pending_review' && this.get('contract.startDate') < moment().tz('CST').endOf('day').toDate();
    },

    actions: {
      approve: function approve(notes) {
        this.sendAction('approve', notes);
      },
      cancel: function cancel() {
        this.sendAction('cancel');
      },
      cancelApprove: function cancelApprove() {
        this.set('isShowingApproveModal', false);
      },
      cancelEndContract: function cancelEndContract() {
        this.set('isShowingEndContractConfirmationModal', false);
      },
      cancelReject: function cancelReject() {
        this.set('isShowingRejectModal', false);
      },
      endContract: function endContract() {
        this.sendAction('endContract');
      },
      reject: function reject(notes) {
        this.sendAction('reject', notes);
      },
      resubmit: function resubmit() {
        this.sendAction('resubmit');
      },
      showApproveModal: function showApproveModal() {
        this.set('isShowingApproveModal', true);
      },
      showEndContractConfirmationModal: function showEndContractConfirmationModal() {
        this.set('isShowingEndContractConfirmationModal', true);
      },
      showRejectModal: function showRejectModal() {
        this.set('isShowingRejectModal', true);
      },
      submit: function submit() {
        this.sendAction('submit');
      },
      update: function update() {
        this.sendAction('update');
      },
      applyScheduledSellPriceToAll: function applyScheduledSellPriceToAll(checkedOffers, newScheduledSellPrice) {
        this.sendAction('applyScheduledSellPriceToAll', checkedOffers, newScheduledSellPrice);
      }
    }
  });
});
define("goods-gateway/components/vp-contract-form/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 19,
                "column": 12
              },
              "end": {
                "line": 21,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["content", "content.title", ["loc", [null, [20, 14], [20, 31]]], 0, 0, 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 18,
              "column": 10
            },
            "end": {
              "line": 22,
              "column": 10
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "link-to", ["product.edit", ["get", "contract.product.id", ["loc", [null, [19, 38], [19, 57]]], 0, 0, 0, 0]], ["class", "product-view-link"], 0, null, ["loc", [null, [19, 12], [21, 24]]]]],
        locals: ["content"],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 29,
              "column": 8
            },
            "end": {
              "line": 31,
              "column": 8
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-listing", [], ["id", "contract-status", "status", "new"], ["loc", [null, [30, 10], [30, 58]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 31,
              "column": 8
            },
            "end": {
              "line": 33,
              "column": 8
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-listing", [], ["id", "contract-status", "status", ["subexpr", "@mut", [["get", "contract.status", ["loc", [null, [32, 51], [32, 66]]], 0, 0, 0, 0]], [], [], 0, 0], "notes", ["subexpr", "@mut", [["get", "contract.notes", ["loc", [null, [32, 73], [32, 87]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [32, 10], [32, 89]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 39,
                "column": 6
              },
              "end": {
                "line": 41,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["contract.fulfillmentOptionValidationError"], [], ["loc", [null, [40, 8], [40, 57]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 38,
              "column": 4
            },
            "end": {
              "line": 42,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-alert", [], [], 0, null, ["loc", [null, [39, 6], [41, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 68,
              "column": 0
            },
            "end": {
              "line": 78,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("label");
          dom.setAttribute(el3, "class", "checkbox-label");
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("span");
          dom.setAttribute(el4, "class", "checkbox");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("small");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1, 1, 1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(element0, 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element0, [5]), 0, 0);
          return morphs;
        },
        statements: [["inline", "input", [], ["id", "agreement-checkbox", "type", "checkbox", "checked", ["subexpr", "@mut", [["get", "hasAgreedToTerms", ["loc", [null, [72, 64], [72, 80]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [72, 8], [72, 82]]], 0, 0], ["inline", "t", ["contract.agreeToTerms"], [], ["loc", [null, [74, 15], [74, 44]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child5 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 83,
                "column": 6
              },
              "end": {
                "line": 85,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["contract.end"], [], ["loc", [null, [84, 8], [84, 28]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-button", [], ["id", "end-contract-detail", "secondary", true, "action", "showEndContractConfirmationModal"], 0, null, ["loc", [null, [83, 6], [85, 20]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child6 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["contract.close"], [], ["loc", [null, [89, 6], [89, 28]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child7 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 93,
                "column": 6
              },
              "end": {
                "line": 95,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["contract.submit"], [], ["loc", [null, [94, 8], [94, 31]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 92,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-button", [], ["id", "submit-contract", "action", "submit", "enabled", ["subexpr", "@mut", [["get", "readyToSubmit", ["loc", [null, [93, 64], [93, 77]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [93, 6], [95, 20]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child8 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 99,
                "column": 6
              },
              "end": {
                "line": 101,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["contract.resubmit"], [], ["loc", [null, [100, 8], [100, 33]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-button", [], ["id", "resubmit-contract", "action", "resubmit", "enabled", ["subexpr", "@mut", [["get", "readyToSubmitAfterUpdate", ["loc", [null, [99, 68], [99, 92]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [99, 6], [101, 20]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child9 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 105,
                "column": 6
              },
              "end": {
                "line": 107,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["contract.update"], [], ["loc", [null, [106, 8], [106, 31]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 104,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-button", [], ["id", "update-contract", "action", "update", "enabled", ["subexpr", "@mut", [["get", "readyToSubmitAfterUpdate", ["loc", [null, [105, 64], [105, 88]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [105, 6], [107, 20]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child10 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 111,
                "column": 6
              },
              "end": {
                "line": 115,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "reject");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["contract.reject"], [], ["loc", [null, [113, 10], [113, 33]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 110,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-button", [], ["id", "reject-contract", "secondary", true, "action", "showRejectModal"], 0, null, ["loc", [null, [111, 6], [115, 20]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child11 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 119,
                "column": 6
              },
              "end": {
                "line": 121,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["contract.approve"], [], ["loc", [null, [120, 8], [120, 32]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-button", [], ["id", "approve-contract", "action", "showApproveModal", "enabled", ["subexpr", "@mut", [["get", "readyToApprove", ["loc", [null, [119, 75], [119, 89]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [119, 6], [121, 20]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child12 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 125,
                "column": 6
              },
              "end": {
                "line": 127,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["contract.update"], [], ["loc", [null, [126, 8], [126, 31]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 128,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-button", [], ["id", "reapprove-contract", "action", "approve", "enabled", ["subexpr", "@mut", [["get", "readyToApprove", ["loc", [null, [125, 68], [125, 82]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [125, 6], [127, 20]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child13 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 131,
              "column": 0
            },
            "end": {
              "line": 137,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-contract-notes-modal", [], ["id", "rejection-notes", "cancel", "cancelReject", "confirm", "reject"], ["loc", [null, [132, 2], [136, 4]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child14 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 138,
              "column": 0
            },
            "end": {
              "line": 144,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-contract-notes-modal", [], ["id", "approval-notes", "cancel", "cancelApprove", "confirm", "approve"], ["loc", [null, [139, 2], [143, 4]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child15 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 146,
                "column": 2
              },
              "end": {
                "line": 148,
                "column": 2
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["contract.endContractConfirmation"], [], ["loc", [null, [147, 4], [147, 44]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 145,
              "column": 0
            },
            "end": {
              "line": 149,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "vp-confirm-cancel-modal", [], ["id", "end-contract-modal", "confirm", "endContract", "cancel", "cancelEndContract"], 0, null, ["loc", [null, [146, 2], [148, 30]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 151,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-contract-form/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "contract-info");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column title");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column vendor");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column title");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column product");
        var el6 = dom.createTextNode("\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column title");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "instruction");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("hr");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "instruction");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("hr");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "instruction");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("hr");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "instruction");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("hr");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("small");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("hr");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column align-right");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var element2 = dom.childAt(element1, [1]);
        var element3 = dom.childAt(element2, [3]);
        var element4 = dom.childAt(element3, [1]);
        var element5 = dom.childAt(element3, [3]);
        var element6 = dom.childAt(element3, [5]);
        var element7 = dom.childAt(fragment, [30, 1]);
        var morphs = new Array(28);
        morphs[0] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);
        morphs[1] = dom.createMorphAt(dom.childAt(element4, [1]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element4, [3]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element5, [1]), 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element5, [3]), 1, 1);
        morphs[5] = dom.createMorphAt(dom.childAt(element6, [1]), 1, 1);
        morphs[6] = dom.createMorphAt(element6, 3, 3);
        morphs[7] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[9] = dom.createMorphAt(fragment, 6, 6, contextualElement);
        morphs[10] = dom.createMorphAt(dom.childAt(fragment, [8]), 0, 0);
        morphs[11] = dom.createMorphAt(fragment, 12, 12, contextualElement);
        morphs[12] = dom.createMorphAt(dom.childAt(fragment, [14]), 0, 0);
        morphs[13] = dom.createMorphAt(fragment, 18, 18, contextualElement);
        morphs[14] = dom.createMorphAt(dom.childAt(fragment, [20]), 0, 0);
        morphs[15] = dom.createMorphAt(dom.childAt(fragment, [24]), 0, 0);
        morphs[16] = dom.createMorphAt(fragment, 28, 28, contextualElement);
        morphs[17] = dom.createMorphAt(element7, 1, 1);
        morphs[18] = dom.createMorphAt(element7, 3, 3);
        morphs[19] = dom.createMorphAt(element7, 5, 5);
        morphs[20] = dom.createMorphAt(element7, 7, 7);
        morphs[21] = dom.createMorphAt(element7, 9, 9);
        morphs[22] = dom.createMorphAt(element7, 11, 11);
        morphs[23] = dom.createMorphAt(element7, 13, 13);
        morphs[24] = dom.createMorphAt(element7, 15, 15);
        morphs[25] = dom.createMorphAt(fragment, 32, 32, contextualElement);
        morphs[26] = dom.createMorphAt(fragment, 33, 33, contextualElement);
        morphs[27] = dom.createMorphAt(fragment, 34, 34, contextualElement);
        return morphs;
      },
      statements: [["inline", "t", ["contract.detailHeader"], [], ["loc", [null, [3, 8], [3, 37]]], 0, 0], ["inline", "t", ["contract.detail.vendor"], [], ["loc", [null, [7, 10], [7, 40]]], 0, 0], ["content", "contract.product.vendor.name", ["loc", [null, [10, 10], [10, 42]]], 0, 0, 0, 0], ["inline", "t", ["contract.detail.product"], [], ["loc", [null, [15, 10], [15, 41]]], 0, 0], ["block", "vp-localized-content", [], ["contents", ["subexpr", "@mut", [["get", "contract.product.localizedContents", ["loc", [null, [18, 43], [18, 77]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [18, 10], [22, 35]]]], ["inline", "t", ["contract.detail.status"], [], ["loc", [null, [27, 10], [27, 40]]], 0, 0], ["block", "if", [["get", "contract.isNew", ["loc", [null, [29, 14], [29, 28]]], 0, 0, 0, 0]], [], 1, 2, ["loc", [null, [29, 8], [33, 15]]]], ["block", "unless", [["get", "contract.fulfillmentOption.isValid", ["loc", [null, [38, 14], [38, 48]]], 0, 0, 0, 0]], [], 3, null, ["loc", [null, [38, 4], [42, 15]]]], ["inline", "t", ["contract.optionPeriod"], [], ["loc", [null, [46, 24], [46, 53]]], 0, 0], ["inline", "vp-contract-daterange", [], ["contract", ["subexpr", "@mut", [["get", "contract", ["loc", [null, [49, 11], [49, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "editable", ["subexpr", "@mut", [["get", "contract.editable", ["loc", [null, [50, 11], [50, 28]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [48, 0], [51, 2]]], 0, 0], ["inline", "t", ["contract.offerTerms"], [], ["loc", [null, [53, 24], [53, 51]]], 0, 0], ["inline", "vp-fulfillment-option-form", [], ["fulfillmentOption", ["subexpr", "@mut", [["get", "contract.fulfillmentOption", ["loc", [null, [56, 20], [56, 46]]], 0, 0, 0, 0]], [], [], 0, 0], "editable", ["subexpr", "@mut", [["get", "contract.editable", ["loc", [null, [57, 11], [57, 28]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [55, 0], [58, 2]]], 0, 0], ["inline", "t", ["contract.items"], [], ["loc", [null, [60, 24], [60, 46]]], 0, 0], ["inline", "vp-contract-offer-table", [], ["contract", ["subexpr", "@mut", [["get", "contract", ["loc", [null, [62, 35], [62, 43]]], 0, 0, 0, 0]], [], [], 0, 0], "applyScheduledSellPriceToAll", "applyScheduledSellPriceToAll"], ["loc", [null, [62, 0], [62, 105]]], 0, 0], ["inline", "t", ["contract.termsAndConditionsHeading"], [], ["loc", [null, [64, 24], [64, 66]]], 0, 0], ["content", "termsAndConditions", ["loc", [null, [66, 7], [66, 29]]], 0, 0, 0, 0], ["block", "if", [["get", "needToAgree", ["loc", [null, [68, 6], [68, 17]]], 0, 0, 0, 0]], [], 4, null, ["loc", [null, [68, 0], [78, 7]]]], ["block", "if", [["get", "canEndContract", ["loc", [null, [82, 10], [82, 24]]], 0, 0, 0, 0]], [], 5, null, ["loc", [null, [82, 4], [86, 11]]]], ["block", "mx-button", [], ["id", "cancel-contract-detail", "secondary", true, "action", "cancel"], 6, null, ["loc", [null, [88, 4], [90, 18]]]], ["block", "if", [["get", "canSubmit", ["loc", [null, [92, 10], [92, 19]]], 0, 0, 0, 0]], [], 7, null, ["loc", [null, [92, 4], [96, 11]]]], ["block", "if", [["get", "canResubmit", ["loc", [null, [98, 10], [98, 21]]], 0, 0, 0, 0]], [], 8, null, ["loc", [null, [98, 4], [102, 11]]]], ["block", "if", [["get", "canUpdate", ["loc", [null, [104, 10], [104, 19]]], 0, 0, 0, 0]], [], 9, null, ["loc", [null, [104, 4], [108, 11]]]], ["block", "if", [["get", "canReject", ["loc", [null, [110, 10], [110, 19]]], 0, 0, 0, 0]], [], 10, null, ["loc", [null, [110, 4], [116, 11]]]], ["block", "if", [["get", "canApprove", ["loc", [null, [118, 10], [118, 20]]], 0, 0, 0, 0]], [], 11, null, ["loc", [null, [118, 4], [122, 11]]]], ["block", "if", [["get", "canModify", ["loc", [null, [124, 10], [124, 19]]], 0, 0, 0, 0]], [], 12, null, ["loc", [null, [124, 4], [128, 11]]]], ["block", "vp-page-overlay", [], ["isOpen", ["subexpr", "@mut", [["get", "isShowingRejectModal", ["loc", [null, [131, 26], [131, 46]]], 0, 0, 0, 0]], [], [], 0, 0], "smallContent", true], 13, null, ["loc", [null, [131, 0], [137, 20]]]], ["block", "vp-page-overlay", [], ["isOpen", ["subexpr", "@mut", [["get", "isShowingApproveModal", ["loc", [null, [138, 26], [138, 47]]], 0, 0, 0, 0]], [], [], 0, 0], "smallContent", true], 14, null, ["loc", [null, [138, 0], [144, 20]]]], ["block", "vp-page-overlay", [], ["isOpen", ["subexpr", "@mut", [["get", "isShowingEndContractConfirmationModal", ["loc", [null, [145, 26], [145, 63]]], 0, 0, 0, 0]], [], [], 0, 0], "smallContent", true], 15, null, ["loc", [null, [145, 0], [149, 20]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11, child12, child13, child14, child15]
    };
  })());
});
define('goods-gateway/components/vp-contract-notes-modal/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    actions: {
      cancel: function cancel() {
        this.sendAction('cancel');
      },
      confirm: function confirm() {
        var notes = this.get('notes');
        this.sendAction('confirm', notes);
      }
    }
  });
});
define("goods-gateway/components/vp-contract-notes-modal/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 15,
              "column": 4
            },
            "end": {
              "line": 17,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-notes-modal/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["vp-contract-notes-modal.cancel"], [], ["loc", [null, [16, 6], [16, 44]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 18,
              "column": 4
            },
            "end": {
              "line": 20,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-notes-modal/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["vp-contract-notes-modal.confirm"], [], ["loc", [null, [19, 6], [19, 45]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-contract-notes-modal/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "class", "contract-notes-modal");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "button-row align-right");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [5]);
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
        morphs[2] = dom.createMorphAt(element1, 1, 1);
        morphs[3] = dom.createMorphAt(element1, 2, 2);
        return morphs;
      },
      statements: [["inline", "t", ["vp-contract-notes-modal.title"], [], ["loc", [null, [3, 4], [3, 41]]], 0, 0], ["inline", "textarea", [], ["class", "text-input notes", "value", ["subexpr", "@mut", [["get", "notes", ["loc", [null, [9, 12], [9, 17]]], 0, 0, 0, 0]], [], [], 0, 0], "placeholder", ["subexpr", "t", ["vp-contract-notes-modal.notesPrompt"], [], ["loc", [null, [10, 18], [10, 59]]], 0, 0]], ["loc", [null, [7, 4], [11, 6]]], 0, 0], ["block", "mx-button", [], ["class", "cancel-contract-notes-modal", "secondary", true, "action", "cancel"], 0, null, ["loc", [null, [15, 4], [17, 18]]]], ["block", "mx-button", [], ["class", "confirm-contract-notes-modal", "action", "confirm"], 1, null, ["loc", [null, [18, 4], [20, 18]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-contract-offer-table/component', ['exports', 'ember', 'goods-gateway/helpers/net-price', 'goods-gateway/utils/money-converter', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayHelpersNetPrice, _goodsGatewayUtilsMoneyConverter, _goodsGatewayConfigEnvironment) {
  exports['default'] = _ember['default'].Component.extend({
    i18n: _ember['default'].inject.service(),
    authorization: _ember['default'].inject.service('authorization'),

    tagName: 'row',

    allOffersSelected: _ember['default'].computed('contract.offers.@each.isChecked', {
      get: function get() {
        return this.get('contract.offers').isEvery('isChecked', true);
      },
      set: function set(_key, value) {
        this.get('contract.offers').setEach('isChecked', value);
        return value;
      }
    }),

    shipOnVendor: _ember['default'].computed('contract.fulfillmentOption.fulfillmentMethod', function () {
      return this.get('contract.fulfillmentOption.fulfillmentMethod').toString() === this.get('i18n').t('constants.fulfillmentOptions.vendor').toString();
    }),

    freightCostEditEnabled: _goodsGatewayConfigEnvironment['default'].featureFlags.freightCostEditingEnabled,

    isFreightCostEditable: _ember['default'].computed.and('shipOnVendor', 'authorization.isExternal', 'contract.editable', 'freightCostEditEnabled'),

    totalQuantity: _ember['default'].computed('contract.offers.@each.minimumQuantity', function () {
      return this.get('contract.offers').reduce(function (sum, offer) {
        return sum + 1 * offer.get('minimumQuantity');
      }, 0);
    }),

    totalNetExtendedPrice: _ember['default'].computed('contract.fulfillmentOption.discountAllowance', 'contract.fulfillmentOption.freightAllowance', 'contract.offers.@each.costAmount', 'contract.offers.@each.minimumQuantity', 'contract.offers.@each.shippingCostAmount', 'shipOnVendor', function () {
      var freightAllowance = this.get('contract.fulfillmentOption.freightAllowance');
      var discountAllowance = this.get('contract.fulfillmentOption.discountAllowance');
      var shipOnVendor = this.get('shipOnVendor');
      return this.get('contract.offers').reduce(function (prev, cur) {
        var cost = cur.get('cost.amount');
        var quantity = cur.get('minimumQuantity');
        var shippingCost = cur.get('shippingCostAmount');
        return prev + _goodsGatewayHelpersNetPrice['default'].compute([cost, freightAllowance, discountAllowance, quantity, shipOnVendor, shippingCost]);
      }, 0);
    }),

    editableByVendor: _ember['default'].computed.and('contract.editable', 'authorization.isExternal'),
    editableByBuyer: _ember['default'].computed('contract.isContracted', 'contract.editable', function () {
      return (this.get('contract.isContracted') || this.get('contract.editable')) && this.get('authorization').can('write_item_sell_price');
    }),

    toolTipComment: _ember['default'].computed('contract.startDate', 'contract.endDate', function () {
      var i18n = this.get('i18n');
      if (!this.get('contract.startDate') || !this.get('contract.endDate')) {
        return '';
      }
      var contractStartDate = moment(this.get('contract.startDate')).format('l');
      var contractEndDate = moment(this.get('contract.endDate')).format('l');
      return i18n.t('contract.costTooltip', { startDate: contractStartDate, endDate: contractEndDate });
    }),

    _selectedOffers: function _selectedOffers() {
      return this.get('contract.offers').filterBy('isChecked', true);
    },

    actions: {
      applyScheduledSellPriceToAll: function applyScheduledSellPriceToAll(selectedOffer) {
        var newScheduledSellPrice = selectedOffer.get('price.amount');
        if (_goodsGatewayUtilsMoneyConverter['default'].isValidPrice(newScheduledSellPrice)) {
          this.sendAction('applyScheduledSellPriceToAll', this._selectedOffers(), newScheduledSellPrice);
        }
      }
    }
  });
});
define("goods-gateway/components/vp-contract-offer-table/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 6
            },
            "end": {
              "line": 11,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "checkbox-column");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          dom.setAttribute(el2, "class", "checkbox-label");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("span");
          dom.setAttribute(el3, "class", "checkbox");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "input", [], ["id", "select-all", "type", "checkbox", "checked", ["subexpr", "@mut", [["get", "allOffersSelected", ["loc", [null, [7, 60], [7, 77]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [7, 12], [7, 79]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 29,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["item.msrp"], [], ["loc", [null, [27, 10], [27, 27]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 35,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "align-right");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["contract.freightCost"], [], ["loc", [null, [37, 10], [37, 38]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 40,
                "column": 8
              },
              "end": {
                "line": 44,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            dom.setAttribute(el1, "class", "align-right");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["contract.estimatedFreightCost"], [], ["loc", [null, [42, 12], [42, 49]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 45,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "vp-can", ["read_default"], [], 0, null, ["loc", [null, [40, 8], [44, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "align-right");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "align-right");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["contract.sellPrice"], [], ["loc", [null, [65, 10], [65, 36]]], 0, 0], ["inline", "t", ["contract.GR"], [], ["loc", [null, [69, 10], [69, 29]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child5 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 78,
                "column": 8
              },
              "end": {
                "line": 85,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "checkbox-column");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("label");
            dom.setAttribute(el2, "class", "checkbox-label");
            var el3 = dom.createTextNode("\n              ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n              ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("span");
            dom.setAttribute(el3, "class", "checkbox");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "input", [], ["id", ["subexpr", "concat", ["checkbox-", ["get", "index", ["loc", [null, [81, 45], [81, 50]]], 0, 0, 0, 0]], [], ["loc", [null, [81, 25], [81, 51]]], 0, 0], "type", "checkbox", "checked", ["subexpr", "@mut", [["get", "offer.isChecked", ["loc", [null, [81, 76], [81, 91]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [81, 14], [81, 93]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 88,
                  "column": 12
                },
                "end": {
                  "line": 90,
                  "column": 12
                }
              },
              "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "content.title", ["loc", [null, [89, 14], [89, 31]]], 0, 0, 0, 0]],
            locals: ["content"],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 87,
                "column": 10
              },
              "end": {
                "line": 91,
                "column": 10
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "vp-localized-content", [], ["contents", ["subexpr", "@mut", [["get", "offer.item.localizedContents", ["loc", [null, [88, 45], [88, 73]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [88, 12], [90, 37]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 102,
                "column": 8
              },
              "end": {
                "line": 108,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "msrp");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "format-currency", [["get", "offer.item.regionalizedContents.firstObject.msrp.amount", ["loc", [null, [105, 14], [105, 69]]], 0, 0, 0, 0], ["get", "offer.item.regionalizedContents.firstObject.msrp.currencyCode", ["loc", [null, [106, 14], [106, 75]]], 0, 0, 0, 0]], [], ["loc", [null, [104, 12], [106, 77]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child3 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 110,
                "column": 8
              },
              "end": {
                "line": 120,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "cost align-right input-field");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "vp-money-field", [], ["required", true, "inputId", ["subexpr", "concat", ["cost-", ["get", "index", ["loc", [null, [114, 38], [114, 43]]], 0, 0, 0, 0]], [], ["loc", [null, [114, 22], [114, 44]]], 0, 0], "model", ["subexpr", "@mut", [["get", "offer", ["loc", [null, [115, 20], [115, 25]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "cost.amount", "showLabel", false], ["loc", [null, [112, 12], [118, 14]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child4 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 120,
                "column": 8
              },
              "end": {
                "line": 127,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "cost align-right");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "format-currency", [["get", "offer.cost.amount", ["loc", [null, [123, 14], [123, 31]]], 0, 0, 0, 0], ["get", "offer.cost.currencyCode", ["loc", [null, [124, 14], [124, 37]]], 0, 0, 0, 0]], [], ["loc", [null, [122, 12], [125, 14]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child5 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 129,
                "column": 8
              },
              "end": {
                "line": 139,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "freight-cost align-right input-field");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "vp-money-field", [], ["inputId", ["subexpr", "concat", ["freightCost-", ["get", "index", ["loc", [null, [132, 45], [132, 50]]], 0, 0, 0, 0]], [], ["loc", [null, [132, 22], [132, 51]]], 0, 0], "model", ["subexpr", "@mut", [["get", "offer", ["loc", [null, [133, 20], [133, 25]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "shippingCost.amount", "showLabel", false, "required", true], ["loc", [null, [131, 12], [137, 14]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child6 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 139,
                  "column": 8
                },
                "end": {
                  "line": 146,
                  "column": 8
                }
              },
              "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              dom.setAttribute(el1, "class", "freight-cost align-right ");
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["inline", "format-currency", [["get", "offer.shippingCost.amount", ["loc", [null, [142, 14], [142, 39]]], 0, 0, 0, 0], ["get", "offer.shippingCost.currencyCode", ["loc", [null, [143, 14], [143, 45]]], 0, 0, 0, 0]], [], ["loc", [null, [141, 12], [144, 14]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 147,
                    "column": 10
                  },
                  "end": {
                    "line": 154,
                    "column": 10
                  }
                },
                "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("            ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("td");
                dom.setAttribute(el1, "class", "estimated-freight-cost align-right ");
                var el2 = dom.createTextNode("\n              ");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
                return morphs;
              },
              statements: [["inline", "format-currency", [["get", "offer.estimatedShippingCost.amount", ["loc", [null, [150, 16], [150, 50]]], 0, 0, 0, 0], ["get", "offer.estimatedShippingCost.currencyCode", ["loc", [null, [151, 16], [151, 56]]], 0, 0, 0, 0]], [], ["loc", [null, [149, 14], [152, 16]]], 0, 0]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 146,
                  "column": 8
                },
                "end": {
                  "line": 155,
                  "column": 8
                }
              },
              "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              return morphs;
            },
            statements: [["block", "vp-can", ["read_default"], [], 0, null, ["loc", [null, [147, 10], [154, 21]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 139,
                "column": 8
              },
              "end": {
                "line": 155,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "shipOnVendor", ["loc", [null, [139, 18], [139, 30]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [139, 8], [155, 8]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      var child7 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 171,
                "column": 8
              },
              "end": {
                "line": 181,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "minimum-quantity align-right input-field");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "vp-field", [], ["inputId", ["subexpr", "concat", ["minimum-quantity-", ["get", "index", ["loc", [null, [174, 50], [174, 55]]], 0, 0, 0, 0]], [], ["loc", [null, [174, 22], [174, 56]]], 0, 0], "showLabel", false, "type", "number", "model", ["subexpr", "@mut", [["get", "offer", ["loc", [null, [177, 20], [177, 25]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "minimumQuantity"], ["loc", [null, [173, 12], [179, 14]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child8 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 181,
                "column": 8
              },
              "end": {
                "line": 185,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "minimum-quantity align-right");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["content", "offer.minimumQuantity", ["loc", [null, [183, 12], [183, 37]]], 0, 0, 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child9 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 208,
                    "column": 14
                  },
                  "end": {
                    "line": 210,
                    "column": 14
                  }
                },
                "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("span");
                dom.setAttribute(el1, "class", "mx-icon-rake mx-icon-16");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element0 = dom.childAt(fragment, [1]);
                var morphs = new Array(1);
                morphs[0] = dom.createElementMorph(element0);
                return morphs;
              },
              statements: [["element", "action", ["applyScheduledSellPriceToAll", ["get", "offer", ["loc", [null, [209, 94], [209, 99]]], 0, 0, 0, 0]], [], ["loc", [null, [209, 54], [209, 101]]], 0, 0]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 196,
                  "column": 10
                },
                "end": {
                  "line": 212,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              dom.setAttribute(el1, "class", "price align-right input-field");
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              dom.setAttribute(el1, "class", "rake-icon");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("            ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
              return morphs;
            },
            statements: [["inline", "vp-money-field", [], ["inputId", ["subexpr", "concat", ["price-", ["get", "index", ["loc", [null, [199, 41], [199, 46]]], 0, 0, 0, 0]], [], ["loc", [null, [199, 24], [199, 47]]], 0, 0], "model", ["subexpr", "@mut", [["get", "offer", ["loc", [null, [200, 22], [200, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "price.amount", "showLabel", false, "required", true, "immediateErrors", true], ["loc", [null, [198, 14], [205, 16]]], 0, 0], ["block", "if", [["get", "offer.isChecked", ["loc", [null, [208, 20], [208, 35]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [208, 14], [210, 21]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 212,
                  "column": 10
                },
                "end": {
                  "line": 219,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              dom.setAttribute(el1, "class", "price align-right");
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["inline", "format-currency", [["get", "offer.price.amount", ["loc", [null, [215, 16], [215, 34]]], 0, 0, 0, 0], ["get", "offer.price.currencyCode", ["loc", [null, [216, 16], [216, 40]]], 0, 0, 0, 0]], [], ["loc", [null, [214, 14], [217, 16]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 221,
                  "column": 12
                },
                "end": {
                  "line": 252,
                  "column": 12
                }
              },
              "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("br");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              morphs[1] = dom.createMorphAt(fragment, 4, 4, contextualElement);
              return morphs;
            },
            statements: [["inline", "format-currency", [["subexpr", "gross-revenue", [["get", "offer.cost.amount", ["loc", [null, [224, 18], [224, 35]]], 0, 0, 0, 0], ["subexpr", "allowance-calculator", [["get", "offer.cost.amount", ["loc", [null, [225, 40], [225, 57]]], 0, 0, 0, 0], ["subexpr", "sum", [["get", "contract.fulfillmentOption.discountAllowance", ["loc", [null, [226, 25], [226, 69]]], 0, 0, 0, 0], ["get", "contract.fulfillmentOption.freightAllowance", ["loc", [null, [227, 22], [227, 65]]], 0, 0, 0, 0]], [], ["loc", [null, [226, 20], [227, 66]]], 0, 0]], [], ["loc", [null, [225, 18], [227, 67]]], 0, 0], ["subexpr", "effective-shipping-cost", [["get", "shipOnVendor", ["loc", [null, [229, 20], [229, 32]]], 0, 0, 0, 0], ["get", "offer.shippingCost.amount", ["loc", [null, [230, 20], [230, 45]]], 0, 0, 0, 0], ["get", "offer.estimatedShippingCost.amount", ["loc", [null, [231, 20], [231, 54]]], 0, 0, 0, 0]], [], ["loc", [null, [228, 18], [231, 55]]], 0, 0], ["get", "offer.price.amount", ["loc", [null, [232, 18], [232, 36]]], 0, 0, 0, 0]], [], ["loc", [null, [223, 16], [233, 17]]], 0, 0], ["get", "offer.cost.currencyCode", ["loc", [null, [234, 16], [234, 39]]], 0, 0, 0, 0]], [], ["loc", [null, [222, 14], [235, 16]]], 0, 0], ["inline", "percentage", [["subexpr", "divide", [["subexpr", "gross-revenue", [["get", "offer.cost.amount", ["loc", [null, [239, 20], [239, 37]]], 0, 0, 0, 0], ["subexpr", "allowance-calculator", [["get", "offer.cost.amount", ["loc", [null, [240, 42], [240, 59]]], 0, 0, 0, 0], ["subexpr", "sum", [["get", "contract.fulfillmentOption.discountAllowance", ["loc", [null, [241, 27], [241, 71]]], 0, 0, 0, 0], ["get", "contract.fulfillmentOption.freightAllowance", ["loc", [null, [242, 24], [242, 67]]], 0, 0, 0, 0]], [], ["loc", [null, [241, 22], [242, 68]]], 0, 0]], [], ["loc", [null, [240, 20], [242, 69]]], 0, 0], ["subexpr", "effective-shipping-cost", [["get", "shipOnVendor", ["loc", [null, [244, 22], [244, 34]]], 0, 0, 0, 0], ["get", "offer.shippingCost.amount", ["loc", [null, [245, 22], [245, 47]]], 0, 0, 0, 0], ["get", "offer.estimatedShippingCost.amount", ["loc", [null, [246, 22], [246, 56]]], 0, 0, 0, 0]], [], ["loc", [null, [243, 20], [246, 57]]], 0, 0], ["get", "offer.price.amount", ["loc", [null, [247, 20], [247, 38]]], 0, 0, 0, 0]], [], ["loc", [null, [238, 18], [247, 39]]], 0, 0], ["get", "offer.price.amount", ["loc", [null, [248, 18], [248, 36]]], 0, 0, 0, 0]], [], ["loc", [null, [237, 16], [249, 17]]], 0, 0]], ["decimals", 2], ["loc", [null, [236, 14], [251, 16]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 195,
                "column": 8
              },
              "end": {
                "line": 254,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "GR align-right");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 1, 1);
            dom.insertBoundary(fragment, 0);
            return morphs;
          },
          statements: [["block", "if", [["get", "editableByBuyer", ["loc", [null, [196, 16], [196, 31]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [196, 10], [219, 17]]]], ["block", "if", [["get", "offer.price.amount", ["loc", [null, [221, 18], [221, 36]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [221, 12], [252, 19]]]]],
          locals: [],
          templates: [child0, child1, child2]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
        },
        isEmpty: false,
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "item-title");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "upc");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "vendor-sku");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "freight-allowance align-right");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "discount-allowance align-right");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "net-price align-right");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(13);
          morphs[0] = dom.createAttrMorph(element1, 'id');
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
          morphs[3] = dom.createMorphAt(dom.childAt(element1, [5]), 1, 1);
          morphs[4] = dom.createMorphAt(dom.childAt(element1, [7]), 1, 1);
          morphs[5] = dom.createMorphAt(element1, 9, 9);
          morphs[6] = dom.createMorphAt(element1, 11, 11);
          morphs[7] = dom.createMorphAt(element1, 13, 13);
          morphs[8] = dom.createMorphAt(dom.childAt(element1, [15]), 1, 1);
          morphs[9] = dom.createMorphAt(dom.childAt(element1, [17]), 1, 1);
          morphs[10] = dom.createMorphAt(element1, 19, 19);
          morphs[11] = dom.createMorphAt(dom.childAt(element1, [21]), 1, 1);
          morphs[12] = dom.createMorphAt(element1, 23, 23);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", ["offer-", ["get", "index", ["loc", [null, [77, 22], [77, 27]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "if", [["get", "editableByBuyer", ["loc", [null, [78, 14], [78, 29]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [78, 8], [85, 15]]]], ["block", "link-to", ["product.edit", ["get", "offer.item.productId", ["loc", [null, [87, 36], [87, 56]]], 0, 0, 0, 0]], ["class", "product-view-link"], 1, null, ["loc", [null, [87, 10], [91, 22]]]], ["content", "offer.item.universalId.value", ["loc", [null, [95, 10], [95, 42]]], 0, 0, 0, 0], ["content", "offer.item.vendorSku", ["loc", [null, [99, 10], [99, 34]]], 0, 0, 0, 0], ["block", "vp-can", ["read_default"], [], 2, null, ["loc", [null, [102, 8], [108, 19]]]], ["block", "if", [["get", "editableByVendor", ["loc", [null, [110, 14], [110, 30]]], 0, 0, 0, 0]], [], 3, 4, ["loc", [null, [110, 8], [127, 15]]]], ["block", "if", [["get", "isFreightCostEditable", ["loc", [null, [129, 14], [129, 35]]], 0, 0, 0, 0]], [], 5, 6, ["loc", [null, [129, 8], [155, 15]]]], ["inline", "format-currency", [["subexpr", "allowance-calculator", [["get", "offer.cost.amount", ["loc", [null, [159, 34], [159, 51]]], 0, 0, 0, 0], ["get", "contract.fulfillmentOption.freightAllowance", ["loc", [null, [159, 52], [159, 95]]], 0, 0, 0, 0]], [], ["loc", [null, [159, 12], [159, 96]]], 0, 0], ["get", "offer.cost.currencyCode", ["loc", [null, [160, 12], [160, 35]]], 0, 0, 0, 0]], [], ["loc", [null, [158, 10], [161, 12]]], 0, 0], ["inline", "format-currency", [["subexpr", "allowance-calculator", [["get", "offer.cost.amount", ["loc", [null, [166, 34], [166, 51]]], 0, 0, 0, 0], ["get", "contract.fulfillmentOption.discountAllowance", ["loc", [null, [166, 52], [166, 96]]], 0, 0, 0, 0]], [], ["loc", [null, [166, 12], [166, 97]]], 0, 0], ["get", "offer.cost.currencyCode", ["loc", [null, [167, 12], [167, 35]]], 0, 0, 0, 0]], [], ["loc", [null, [165, 10], [168, 12]]], 0, 0], ["block", "if", [["get", "editableByVendor", ["loc", [null, [171, 14], [171, 30]]], 0, 0, 0, 0]], [], 7, 8, ["loc", [null, [171, 8], [185, 15]]]], ["inline", "format-currency", [["subexpr", "net-price", [["get", "offer.cost.amount", ["loc", [null, [189, 23], [189, 40]]], 0, 0, 0, 0], ["get", "contract.fulfillmentOption.freightAllowance", ["loc", [null, [189, 41], [189, 84]]], 0, 0, 0, 0], ["get", "contract.fulfillmentOption.discountAllowance", ["loc", [null, [189, 85], [189, 129]]], 0, 0, 0, 0], ["get", "offer.minimumQuantity", ["loc", [null, [190, 14], [190, 35]]], 0, 0, 0, 0], ["get", "shipOnVendor", ["loc", [null, [190, 36], [190, 48]]], 0, 0, 0, 0], ["get", "offer.shippingCost.amount", ["loc", [null, [190, 49], [190, 74]]], 0, 0, 0, 0]], [], ["loc", [null, [189, 12], [190, 75]]], 0, 0], ["get", "offer.cost.currencyCode", ["loc", [null, [191, 12], [191, 35]]], 0, 0, 0, 0]], [], ["loc", [null, [188, 10], [192, 12]]], 0, 0], ["block", "vp-can", ["read_default"], [], 9, null, ["loc", [null, [195, 8], [254, 19]]]]],
        locals: ["offer", "index"],
        templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9]
      };
    })();
    var child6 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 260,
              "column": 4
            },
            "end": {
              "line": 262,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("td");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child7 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 263,
              "column": 4
            },
            "end": {
              "line": 265,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("td");
          dom.setAttribute(el1, "colspan", "7");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child8 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 266,
                "column": 6
              },
              "end": {
                "line": 268,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "colspan", "6");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 268,
                "column": 6
              },
              "end": {
                "line": 270,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "colspan", "5");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 265,
              "column": 4
            },
            "end": {
              "line": 271,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "shipOnVendor", ["loc", [null, [266, 12], [266, 24]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [266, 6], [270, 13]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child9 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 287,
              "column": 4
            },
            "end": {
              "line": 289,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("td");
          dom.setAttribute(el1, "colspan", "3");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 292,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-contract-offer-table/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("table");
        dom.setAttribute(el1, "class", "table-lined");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("thead");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("tr");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        dom.setAttribute(el4, "class", "unit-cost align-right");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        dom.setAttribute(el4, "class", "align-right");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        dom.setAttribute(el4, "class", "align-right");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        dom.setAttribute(el4, "class", "align-right");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        dom.setAttribute(el4, "class", "align-right");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("tbody");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("tfoot");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("td");
        dom.setAttribute(el3, "class", "align-right");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("td");
        dom.setAttribute(el3, "class", "total-quantity align-right");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("td");
        dom.setAttribute(el3, "class", "total-net-price align-right");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [0]);
        var element3 = dom.childAt(element2, [1, 1]);
        var element4 = dom.childAt(element2, [5]);
        var morphs = new Array(19);
        morphs[0] = dom.createMorphAt(element3, 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element3, [3]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element3, [5]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element3, [7]), 1, 1);
        morphs[4] = dom.createMorphAt(element3, 9, 9);
        morphs[5] = dom.createMorphAt(dom.childAt(element3, [11]), 1, 1);
        morphs[6] = dom.createMorphAt(element3, 13, 13);
        morphs[7] = dom.createMorphAt(dom.childAt(element3, [15]), 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(element3, [17]), 1, 1);
        morphs[9] = dom.createMorphAt(dom.childAt(element3, [19]), 1, 1);
        morphs[10] = dom.createMorphAt(dom.childAt(element3, [21]), 1, 1);
        morphs[11] = dom.createMorphAt(element3, 23, 23);
        morphs[12] = dom.createMorphAt(dom.childAt(element2, [3]), 1, 1);
        morphs[13] = dom.createMorphAt(element4, 1, 1);
        morphs[14] = dom.createMorphAt(element4, 2, 2);
        morphs[15] = dom.createMorphAt(dom.childAt(element4, [4]), 1, 1);
        morphs[16] = dom.createMorphAt(dom.childAt(element4, [6]), 1, 1);
        morphs[17] = dom.createMorphAt(dom.childAt(element4, [8]), 1, 1);
        morphs[18] = dom.createMorphAt(element4, 10, 10);
        return morphs;
      },
      statements: [["block", "if", [["get", "editableByBuyer", ["loc", [null, [4, 12], [4, 27]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [4, 6], [11, 13]]]], ["inline", "t", ["contract.name"], [], ["loc", [null, [14, 8], [14, 29]]], 0, 0], ["inline", "t", ["contract.upc"], [], ["loc", [null, [18, 8], [18, 28]]], 0, 0], ["inline", "t", ["contract.vendorSku"], [], ["loc", [null, [22, 8], [22, 34]]], 0, 0], ["block", "vp-can", ["read_default"], [], 1, null, ["loc", [null, [25, 6], [29, 17]]]], ["inline", "vp-tooltip", [], ["value", ["subexpr", "t", ["contract.cost"], [], ["loc", [null, [32, 27], [32, 46]]], 0, 0], "comment", ["subexpr", "@mut", [["get", "toolTipComment", ["loc", [null, [32, 55], [32, 69]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [32, 8], [32, 71]]], 0, 0], ["block", "if", [["get", "shipOnVendor", ["loc", [null, [35, 12], [35, 24]]], 0, 0, 0, 0]], [], 2, 3, ["loc", [null, [35, 6], [45, 13]]]], ["inline", "t", ["contract.freightAllowance"], [], ["loc", [null, [48, 8], [48, 41]]], 0, 0], ["inline", "t", ["contract.discountAllowance"], [], ["loc", [null, [52, 8], [52, 42]]], 0, 0], ["inline", "t", ["contract.minimumQuantity"], [], ["loc", [null, [56, 8], [56, 40]]], 0, 0], ["inline", "t", ["contract.netExtendedPrice"], [], ["loc", [null, [60, 8], [60, 41]]], 0, 0], ["block", "vp-can", ["read_default"], [], 4, null, ["loc", [null, [63, 6], [71, 17]]]], ["block", "each", [["get", "contract.offers", ["loc", [null, [76, 12], [76, 27]]], 0, 0, 0, 0]], [], 5, null, ["loc", [null, [76, 4], [256, 13]]]], ["block", "if", [["get", "editableByBuyer", ["loc", [null, [260, 10], [260, 25]]], 0, 0, 0, 0]], [], 6, null, ["loc", [null, [260, 4], [262, 11]]]], ["block", "vp-can", ["read_default"], [], 7, 8, ["loc", [null, [263, 4], [271, 15]]]], ["inline", "t", ["contract.total"], [], ["loc", [null, [274, 6], [274, 28]]], 0, 0], ["content", "totalQuantity", ["loc", [null, [278, 6], [278, 23]]], 0, 0, 0, 0], ["inline", "format-currency", [["get", "totalNetExtendedPrice", ["loc", [null, [283, 8], [283, 29]]], 0, 0, 0, 0], ["get", "contract.offers.firstObject.cost.currencyCode", ["loc", [null, [284, 8], [284, 53]]], 0, 0, 0, 0]], [], ["loc", [null, [282, 6], [284, 55]]], 0, 0], ["block", "vp-can", ["read_default"], [], 9, null, ["loc", [null, [287, 4], [289, 15]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9]
    };
  })());
});
define('goods-gateway/components/vp-contract-row/component', ['exports', 'ember', 'goods-gateway/config/environment', 'goods-gateway/constants/timezones'], function (exports, _ember, _goodsGatewayConfigEnvironment, _goodsGatewayConstantsTimezones) {
  exports['default'] = _ember['default'].Component.extend({
    authorization: _ember['default'].inject.service('authorization'),
    i18n: _ember['default'].inject.service('i18n'),
    tagName: 'tr',
    dateFormat: _ember['default'].computed(function () {
      return this.get('i18n').t('contract.dateFormat').toString();
    }),
    isShowingDeleteConfirmModal: false,
    showContractCloneButton: _ember['default'].computed.alias('authorization.isExternal'),
    contractsDeletionEnabled: _ember['default'].computed(function () {
      return _goodsGatewayConfigEnvironment['default'].featureFlags.enableContractDeletion;
    }),
    showDeleteContractButton: _ember['default'].computed('contract.isContracted', 'contractsDeletionEnabled', function () {
      return this.get('contract.isContracted') && this.get('contractsDeletionEnabled') && this.get('authorization').can('write_default');
    }),
    startDate: _ember['default'].computed('contract.startDate', function () {
      return moment(this.get('contract.startDate')).tz(_goodsGatewayConstantsTimezones.CST).format(this.get('dateFormat'));
    }),
    endDate: _ember['default'].computed('contract.endDate', function () {
      return moment(this.get('contract.endDate')).tz(_goodsGatewayConstantsTimezones.CST).format(this.get('dateFormat'));
    }),
    actions: {
      showDeleteContractModal: function showDeleteContractModal() {
        this.set('isShowingDeleteConfirmModal', true);
      },
      cancelDeleteContract: function cancelDeleteContract() {
        this.set('isShowingDeleteConfirmModal', false);
      },
      deleteContract: function deleteContract() {
        this.sendAction('deleteContract', this.get('contract.id'));
      }
    }
  });
});
define("goods-gateway/components/vp-contract-row/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 4,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-image", [], ["image", ["subexpr", "@mut", [["get", "contract.product.images.firstObject", ["loc", [null, [3, 21], [3, 56]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [3, 4], [3, 58]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 10,
                "column": 6
              },
              "end": {
                "line": 12,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["content", "content.title", ["loc", [null, [11, 8], [11, 25]]], 0, 0, 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 9,
              "column": 4
            },
            "end": {
              "line": 13,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "link-to", ["contract.detail", ["get", "contract.id", ["loc", [null, [10, 35], [10, 46]]], 0, 0, 0, 0]], ["class", "view-link"], 0, null, ["loc", [null, [10, 6], [12, 18]]]]],
        locals: ["content"],
        templates: [child0]
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 16,
              "column": 2
            },
            "end": {
              "line": 20,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "class", "category");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "vp-category-display", [], ["category", ["subexpr", "@mut", [["get", "contract.product.items.firstObject.category", ["loc", [null, [18, 37], [18, 80]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [18, 6], [18, 82]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 23,
              "column": 0
            },
            "end": {
              "line": 27,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("td");
          dom.setAttribute(el1, "class", "vendor");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "contract.product.vendor.name", ["loc", [null, [25, 4], [25, 36]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 33,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("td");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "vp-product-state", [["get", "contract.product.state", ["loc", [null, [35, 23], [35, 45]]], 0, 0, 0, 0]], [], ["loc", [null, [35, 4], [35, 47]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child5 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 48,
              "column": 2
            },
            "end": {
              "line": 50,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-product-variations-count", [], ["items", ["subexpr", "@mut", [["get", "contract.product.items", ["loc", [null, [49, 40], [49, 62]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [49, 4], [49, 64]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child6 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 56,
                  "column": 6
                },
                "end": {
                  "line": 60,
                  "column": 8
                }
              },
              "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["inline", "t", ["contract.index.cloneContract"], [], ["loc", [null, [56, 6], [60, 8]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 55,
                "column": 4
              },
              "end": {
                "line": 61,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["block", "link-to", ["contract.new", ["subexpr", "query-params", [], ["id", ["get", "contract.id", ["loc", [null, [57, 40], [57, 51]]], 0, 0, 0, 0]], ["loc", [null, [57, 23], [57, 52]]], 0, 0]], ["id", "clone-contract-button", "class", "contracts-link button-secondary button-small"], 0, null, ["loc", [null, [56, 6], [60, 8]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 63,
                "column": 4
              },
              "end": {
                "line": 66,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["inline", "t", ["contract.index.productDetails"], [], ["loc", [null, [63, 4], [66, 6]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 68,
                "column": 4
              },
              "end": {
                "line": 71,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["inline", "t", ["contract.index.viewFeatures"], [], ["loc", [null, [68, 4], [71, 6]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child3 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 74,
                  "column": 6
                },
                "end": {
                  "line": 77,
                  "column": 9
                }
              },
              "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["inline", "t", ["contract.index.newFeature"], [], ["loc", [null, [74, 6], [77, 9]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 73,
                "column": 4
              },
              "end": {
                "line": 78,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["block", "link-to", ["feature.index.new", ["subexpr", "query-params", [], ["productId", ["get", "contract.product.id", ["loc", [null, [75, 52], [75, 71]]], 0, 0, 0, 0]], ["loc", [null, [75, 28], [75, 72]]], 0, 0]], ["class", "new-feature-link button-secondary button-small"], 0, null, ["loc", [null, [74, 6], [77, 9]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child4 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 80,
                "column": 4
              },
              "end": {
                "line": 84,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "id", "delete-contract");
            dom.setAttribute(el1, "class", "delete-contracted-contract");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["showDeleteContractModal"], [], ["loc", [null, [81, 70], [81, 106]]], 0, 0], ["inline", "t", ["contract.index.deleteContract"], [], ["loc", [null, [82, 8], [82, 45]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 86,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(5);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);
          morphs[3] = dom.createMorphAt(fragment, 6, 6, contextualElement);
          morphs[4] = dom.createMorphAt(fragment, 8, 8, contextualElement);
          dom.insertBoundary(fragment, 0);
          return morphs;
        },
        statements: [["block", "if", [["get", "showContractCloneButton", ["loc", [null, [55, 10], [55, 33]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [55, 4], [61, 11]]]], ["block", "link-to", ["product.edit", ["get", "contract.product.id", ["loc", [null, [64, 21], [64, 40]]], 0, 0, 0, 0]], ["class", "product-edit-link button-secondary button-small"], 1, null, ["loc", [null, [63, 4], [66, 6]]]], ["block", "link-to", ["feature", ["subexpr", "query-params", [], ["productId", ["get", "contract.product.id", ["loc", [null, [69, 40], [69, 59]]], 0, 0, 0, 0]], ["loc", [null, [69, 16], [69, 60]]], 0, 0]], ["class", "view-features-link button-secondary button-small"], 2, null, ["loc", [null, [68, 4], [71, 6]]]], ["block", "vp-can", ["write_default"], [], 3, null, ["loc", [null, [73, 4], [78, 15]]]], ["block", "if", [["get", "showDeleteContractButton", ["loc", [null, [80, 10], [80, 34]]], 0, 0, 0, 0]], [], 4, null, ["loc", [null, [80, 4], [84, 11]]]]],
        locals: [],
        templates: [child0, child1, child2, child3, child4]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 96,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-contract-row/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("td");
        dom.setAttribute(el1, "class", "image");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        dom.setAttribute(el1, "class", "title");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        dom.setAttribute(el2, "class", "product-title");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        dom.setAttribute(el1, "class", "status");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        dom.setAttribute(el1, "class", "start-date number");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        dom.setAttribute(el1, "class", "end-date number");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        dom.setAttribute(el1, "class", "variations align-right");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [2]);
        var element2 = dom.childAt(fragment, [16]);
        var morphs = new Array(11);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
        morphs[2] = dom.createMorphAt(element1, 3, 3);
        morphs[3] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        morphs[4] = dom.createMorphAt(dom.childAt(fragment, [6]), 1, 1);
        morphs[5] = dom.createMorphAt(fragment, 8, 8, contextualElement);
        morphs[6] = dom.createMorphAt(dom.childAt(fragment, [10]), 1, 1);
        morphs[7] = dom.createMorphAt(dom.childAt(fragment, [12]), 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(fragment, [14]), 1, 1);
        morphs[9] = dom.createMorphAt(element2, 1, 1);
        morphs[10] = dom.createMorphAt(element2, 3, 3);
        return morphs;
      },
      statements: [["block", "if", [["get", "contract.product.images.firstObject.imageServiceUri", ["loc", [null, [2, 8], [2, 59]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [2, 2], [4, 9]]]], ["block", "vp-localized-content", [], ["contents", ["subexpr", "@mut", [["get", "contract.product.localizedContents", ["loc", [null, [9, 37], [9, 71]]], 0, 0, 0, 0]], [], [], 0, 0]], 1, null, ["loc", [null, [9, 4], [13, 29]]]], ["block", "if", [["get", "contract.product.items.firstObject.category.id", ["loc", [null, [16, 8], [16, 54]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [16, 2], [20, 9]]]], ["block", "vp-can", ["read_default"], [], 3, null, ["loc", [null, [23, 0], [27, 11]]]], ["inline", "vp-listing", [], ["status", ["subexpr", "@mut", [["get", "contract.status", ["loc", [null, [30, 22], [30, 37]]], 0, 0, 0, 0]], [], [], 0, 0], "notes", ["subexpr", "@mut", [["get", "contract.notes", ["loc", [null, [30, 44], [30, 58]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [30, 2], [30, 60]]], 0, 0], ["block", "if", [["subexpr", "enabled", ["searchProductStates"], [], ["loc", [null, [33, 6], [33, 37]]], 0, 0]], [], 4, null, ["loc", [null, [33, 0], [37, 7]]]], ["content", "startDate", ["loc", [null, [40, 2], [40, 15]]], 0, 0, 0, 0], ["content", "endDate", ["loc", [null, [44, 2], [44, 13]]], 0, 0, 0, 0], ["block", "link-to", ["inventory.index", ["subexpr", "query-params", [], ["productId", ["get", "contract.product.id", ["loc", [null, [48, 55], [48, 74]]], 0, 0, 0, 0]], ["loc", [null, [48, 31], [48, 75]]], 0, 0]], ["class", "inventory-link"], 5, null, ["loc", [null, [48, 2], [50, 14]]]], ["block", "vp-dropdown", [], ["icon", "mx-icon-gear mx-icon-24"], 6, null, ["loc", [null, [54, 2], [86, 18]]]], ["inline", "vp-confirm-modal", [], ["title", ["subexpr", "t", ["contract.deleteContractModal.title"], [], ["loc", [null, [89, 10], [89, 50]]], 0, 0], "isShowingConfirmModal", ["subexpr", "@mut", [["get", "isShowingDeleteConfirmModal", ["loc", [null, [90, 26], [90, 53]]], 0, 0, 0, 0]], [], [], 0, 0], "warning", ["subexpr", "t", ["contract.deleteContractModal.warning"], [], ["loc", [null, [91, 12], [91, 54]]], 0, 0], "confirmAction", "deleteContract", "cancelAction", "cancelDeleteContract"], ["loc", [null, [88, 2], [94, 4]]], 0, 0]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6]
    };
  })());
});
define('goods-gateway/components/vp-deal-card/component', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  exports['default'] = _ember['default'].Component.extend({
    // attributes
    classNames: ['vp-deal-card'],

    // helpers
    dealUrl: _ember['default'].computed('deal.slug', function () {
      return _goodsGatewayConfigEnvironment['default'].dealLink + this.get('deal.slug');
    }),
    pauseTranslation: _ember['default'].computed('deal.status', function () {
      return this.get('deal.status') === 'launched' ? 'deal.pause' : 'deal.unpause';
    }),

    actions: {
      addTag: function addTag(tag) {
        this.sendAction('addTag', tag);
      },
      removeTag: function removeTag(tag) {
        this.sendAction('removeTag', tag);
      },
      togglePause: function togglePause() {
        this.sendAction('togglePause');
      }
    }
  });
});
define("goods-gateway/components/vp-deal-card/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 10,
                "column": 4
              },
              "end": {
                "line": 16,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-deal-card/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("button");
            dom.setAttribute(el2, "class", "button button-secondary");
            dom.setAttribute(el2, "id", "toggle-pause");
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1, 1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element1);
            morphs[1] = dom.createMorphAt(element1, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["togglePause"], [], ["loc", [null, [12, 66], [12, 90]]], 0, 0], ["inline", "t", [["get", "pauseTranslation", ["loc", [null, [13, 14], [13, 30]]], 0, 0, 0, 0]], [], ["loc", [null, [13, 10], [13, 32]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 17,
                "column": 4
              },
              "end": {
                "line": 19,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-deal-card/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("a");
            dom.setAttribute(el1, "id", "deal-link");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element0, 'href');
            morphs[1] = dom.createMorphAt(element0, 0, 0);
            return morphs;
          },
          statements: [["attribute", "href", ["get", "dealUrl", ["loc", [null, [18, 29], [18, 36]]], 0, 0, 0, 0], 0, 0, 0, 0], ["content", "deal.slug", ["loc", [null, [18, 39], [18, 52]]], 0, 0, 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 38,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-deal-card/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column--2of3");
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("h2");
          dom.setAttribute(el3, "id", "deal-title");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n  ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column--1of3 align-right");
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("h2");
          dom.setAttribute(el3, "id", "deal-status");
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n    ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("  ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "id", "deal-details");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "id", "deal-category-ids");
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n    ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("img");
          dom.setAttribute(el4, "class", "deal-image");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("p");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n    ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n  ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element2 = dom.childAt(fragment, [0]);
          var element3 = dom.childAt(element2, [3]);
          var element4 = dom.childAt(element3, [1]);
          var element5 = dom.childAt(fragment, [2, 1]);
          var element6 = dom.childAt(element5, [3]);
          var element7 = dom.childAt(element6, [1]);
          var morphs = new Array(8);
          morphs[0] = dom.createMorphAt(dom.childAt(element2, [1, 1]), 0, 0);
          morphs[1] = dom.createAttrMorph(element4, 'class');
          morphs[2] = dom.createMorphAt(element4, 1, 1);
          morphs[3] = dom.createMorphAt(element3, 3, 3);
          morphs[4] = dom.createMorphAt(element3, 4, 4);
          morphs[5] = dom.createMorphAt(dom.childAt(element5, [1]), 1, 1);
          morphs[6] = dom.createAttrMorph(element7, 'src');
          morphs[7] = dom.createUnsafeMorphAt(dom.childAt(element6, [3]), 0, 0);
          return morphs;
        },
        statements: [["content", "content.title", ["loc", [null, [4, 24], [4, 41]]], 0, 0, 0, 0], ["attribute", "class", ["concat", ["upcase status-", ["get", "deal.status", ["loc", [null, [7, 48], [7, 59]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["content", "deal.status", ["loc", [null, [8, 6], [8, 21]]], 0, 0, 0, 0], ["block", "if", [["get", "product", ["loc", [null, [10, 10], [10, 17]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [10, 4], [16, 11]]]], ["block", "if", [["get", "deal.slug", ["loc", [null, [17, 10], [17, 19]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [17, 4], [19, 11]]]], ["inline", "vp-category-ids", [], ["categoryIds", ["subexpr", "@mut", [["get", "deal.categoryIds", ["loc", [null, [27, 20], [27, 36]]], 0, 0, 0, 0]], [], [], 0, 0], "addTag", "addTag", "removeTag", "removeTag"], ["loc", [null, [26, 6], [30, 8]]], 0, 0], ["attribute", "src", ["concat", ["//", ["get", "deal.images.0.id", ["loc", [null, [33, 39], [33, 57]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["content", "content.pitchMarkup", ["loc", [null, [34, 9], [34, 34]]], 0, 0, 0, 0]],
        locals: ["content"],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-deal-card/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "vp-localized-content", [], ["contents", ["subexpr", "@mut", [["get", "deal.creativeContents", ["loc", [null, [1, 33], [1, 54]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [1, 0], [38, 25]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-deal-paused-indicator/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    isPaused: _ember['default'].computed('deal._links.[]', function () {
      var links = this.get('deal._links');
      return links.isAny('name', 'unpause');
    })
  });
});
define("goods-gateway/components/vp-deal-paused-indicator/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-deal-paused-indicator/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          dom.setAttribute(el1, "class", "paused");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["inline", "t", ["priceSuggestion.paused"], [], ["loc", [null, [2, 20], [2, 50]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-deal-paused-indicator/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "isPaused", ["loc", [null, [1, 6], [1, 14]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [1, 0], [3, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-delete-bands-button/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    showDeal: _ember['default'].computed('dealUuid', function () {
      var _this = this;

      return this.get('activitiesAndDeals').some(function (activityAndDeal) {
        var activity = activityAndDeal.activity;
        return activity.get('dealUuid') === _this.get('dealUuid') && activity.get('approvalBand');
      });
    }),

    actions: {
      unbandDeal: function unbandDeal() {
        this.sendAction('unbandDeal');
      }
    }
  });
});
define("goods-gateway/components/vp-delete-bands-button/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-delete-bands-button/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          dom.setAttribute(el2, "id", "delete-bands-button");
          dom.setAttribute(el2, "class", "button-primary button");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1, 1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element0);
          morphs[1] = dom.createMorphAt(element0, 0, 0);
          return morphs;
        },
        statements: [["element", "action", ["unbandDeal"], [], ["loc", [null, [3, 67], [3, 90]]], 0, 0], ["inline", "t", ["vp-delete-bands-button.unbandDeal"], [], ["loc", [null, [3, 91], [3, 132]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-delete-bands-button/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "showDeal", ["loc", [null, [1, 6], [1, 14]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [1, 0], [5, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-drag-drop/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    classNames: ['vp-drag-drop', 'md-column'],

    actions: {
      openFileBrowseDialog: function openFileBrowseDialog() {
        var fileUploaderElement = this.$("#drag-drop-upload");
        fileUploaderElement.trigger("click");
      },

      fileChanged: function fileChanged(event) {
        var file = event.target.files[0];
        this.sendAction('triggerFileUpload', file);
      }
    }
  });
});
define("goods-gateway/components/vp-drag-drop/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-drag-drop/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "drag-drop-area");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("i");
        dom.setAttribute(el3, "class", "fa fa-cloud-upload");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "drag-drop-title");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("input");
        dom.setAttribute(el3, "id", "drag-drop-upload");
        dom.setAttribute(el3, "type", "file");
        dom.setAttribute(el3, "class", "invis");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("a");
        dom.setAttribute(el3, "id", "upload-trigger");
        dom.setAttribute(el3, "href", "#");
        dom.setAttribute(el3, "class", "button button-secondary");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0, 1]);
        var element1 = dom.childAt(element0, [7]);
        var element2 = dom.childAt(element0, [9]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [3]), 0, 0);
        morphs[1] = dom.createMorphAt(dom.childAt(element0, [5]), 0, 0);
        morphs[2] = dom.createAttrMorph(element1, 'onchange');
        morphs[3] = dom.createElementMorph(element2);
        morphs[4] = dom.createMorphAt(element2, 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["product-upload.dragDropTitle"], [], ["loc", [null, [4, 33], [4, 69]]], 0, 0], ["inline", "t", ["product-upload.dragDropMessage"], [], ["loc", [null, [5, 9], [5, 47]]], 0, 0], ["attribute", "onchange", ["subexpr", "action", ["fileChanged"], [], ["loc", [null, [null, null], [6, 66]]], 0, 0], 0, 0, 0, 0], ["element", "action", ["openFileBrowseDialog"], [], ["loc", [null, [7, 27], [7, 60]]], 0, 0], ["inline", "t", ["product-upload.dragDropCta"], [], ["loc", [null, [8, 6], [8, 40]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-dropdown/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // attributes
    classNames: ['vp-dropdown'],

    // helpers
    icon: null,

    touchEnd: function touchEnd() {
      this.toggleProperty('showDropdown');
    },
    mouseEnter: function mouseEnter() {
      this.set('showDropdown', true);
    },
    mouseLeave: function mouseLeave() {
      this.set('showDropdown', false);
    }
  });
});
define("goods-gateway/components/vp-dropdown/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 8,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-dropdown/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "dropdown");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "yield", ["loc", [null, [6, 6], [6, 15]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-dropdown/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "dropdown-container");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1]);
        var morphs = new Array(2);
        morphs[0] = dom.createAttrMorph(element1, 'class');
        morphs[1] = dom.createMorphAt(element0, 3, 3);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["dropdown-icon ", ["get", "icon", ["loc", [null, [2, 31], [2, 35]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "if", [["get", "showDropdown", ["loc", [null, [4, 8], [4, 20]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [4, 2], [8, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-edit-vendor/add-user/component', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  exports['default'] = _ember['default'].Component.extend({
    // action args: createUser

    // helpers
    newUser: null,
    shouldShowNewUserForm: false,

    actions: {
      closeNewUserForm: function closeNewUserForm() {
        var _this = this;

        this.set('shouldShowNewUserForm', false);
        _ember['default'].run.later(function () {
          _this.set('newUser', null);
        }, _goodsGatewayConfigEnvironment['default'].animation.short);
      },

      showNewUserForm: function showNewUserForm() {
        var newUser = this.container.lookup('service:store').createRecord('user');
        this.set('newUser', newUser);
        this.set('shouldShowNewUserForm', true);
      },

      addUser: function addUser() {
        this.sendAction('createUser', this.get('newUser'));
        this.send('closeNewUserForm');
      }
    }
  });
});
define("goods-gateway/components/vp-edit-vendor/add-user/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 4
            },
            "end": {
              "line": 5,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-edit-vendor/add-user/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["vp-edit-vendor.add-user.title"], [], ["loc", [null, [4, 6], [4, 43]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 14,
                "column": 2
              },
              "end": {
                "line": 44,
                "column": 2
              }
            },
            "moduleName": "goods-gateway/components/vp-edit-vendor/add-user/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("form");
            dom.setAttribute(el1, "action", "#");
            dom.setAttribute(el1, "id", "new-user-form");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "align-right");
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n      ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(6);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            morphs[2] = dom.createMorphAt(element0, 3, 3);
            morphs[3] = dom.createMorphAt(element0, 5, 5);
            morphs[4] = dom.createMorphAt(element0, 7, 7);
            morphs[5] = dom.createMorphAt(dom.childAt(element0, [9]), 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["addUser"], ["on", "submit"], ["loc", [null, [15, 40], [15, 72]]], 0, 0], ["inline", "vp-field", [], ["model", ["subexpr", "@mut", [["get", "newUser", ["loc", [null, [17, 14], [17, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "email", "tRoot", "models.user"], ["loc", [null, [16, 6], [20, 8]]], 0, 0], ["inline", "vp-field", [], ["model", ["subexpr", "@mut", [["get", "newUser", ["loc", [null, [23, 14], [23, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "firstName", "tRoot", "models.user"], ["loc", [null, [22, 6], [26, 8]]], 0, 0], ["inline", "vp-field", [], ["model", ["subexpr", "@mut", [["get", "newUser", ["loc", [null, [29, 14], [29, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "lastName", "tRoot", "models.user"], ["loc", [null, [28, 6], [32, 8]]], 0, 0], ["content", "yield", ["loc", [null, [34, 6], [34, 15]]], 0, 0, 0, 0], ["inline", "mx-submit", [], ["inputId", "create-user", "tPath", "vp-edit-vendor.add-user.create", "disabled", ["subexpr", "@mut", [["get", "newUser.isInvalid", ["loc", [null, [40, 19], [40, 36]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [37, 8], [41, 10]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 9,
              "column": 0
            },
            "end": {
              "line": 45,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-edit-vendor/add-user/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "newUser", ["loc", [null, [14, 8], [14, 15]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [14, 2], [44, 9]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-edit-vendor/add-user/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("p");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("a");
        dom.setAttribute(el2, "href", "#");
        dom.setAttribute(el2, "class", "add-user");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0, 1]);
        var morphs = new Array(3);
        morphs[0] = dom.createElementMorph(element1);
        morphs[1] = dom.createMorphAt(element1, 1, 1);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["element", "action", ["showNewUserForm"], [], ["loc", [null, [2, 31], [2, 59]]], 0, 0], ["block", "vp-add", [], [], 0, null, ["loc", [null, [3, 4], [5, 15]]]], ["block", "mx-modal", [], ["open", ["subexpr", "@mut", [["get", "shouldShowNewUserForm", ["loc", [null, [10, 7], [10, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "close", ["subexpr", "action", ["closeNewUserForm"], [], ["loc", [null, [11, 8], [11, 35]]], 0, 0], "title", ["subexpr", "t", ["vp-edit-vendor.add-user.title"], [], ["loc", [null, [12, 8], [12, 43]]], 0, 0]], 1, null, ["loc", [null, [9, 0], [45, 13]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-edit-vendor/add-vendor-user/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // action args: createUser

    vendorRole: null,
    shouldInvite: true,

    actions: {
      createUser: function createUser(user) {
        var vendorRoles = [this.get('vendorRole')];
        this.sendAction('createUser', user, vendorRoles, this.get('shouldInvite'));
      }
    }
  });
});
define("goods-gateway/components/vp-edit-vendor/add-vendor-user/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-edit-vendor/add-vendor-user/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-select", [], ["options", ["subexpr", "options-for", ["vendorUserAssociationRole"], [], ["loc", [null, [3, 12], [3, 53]]], 0, 0], "showBlankDefault", false, "default", "member", "tRoot", "models.vendorUserAssociation", "tKey", "roles", "key", "vendorRole", "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [9, 10], [9, 14]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [2, 2], [10, 4]]], 0, 0], ["inline", "vp-checkbox", [], ["model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [13, 10], [13, 14]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "shouldInvite", "tRoot", "vp-edit-vendor.add-vendor-user"], ["loc", [null, [12, 2], [16, 4]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-edit-vendor/add-vendor-user/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "vp-edit-vendor/add-user", [], ["createUser", "createUser"], 0, null, ["loc", [null, [1, 0], [17, 28]]]], ["content", "yield", ["loc", [null, [19, 0], [19, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-edit-vendor/address/component', ['exports', 'ember', 'goods-gateway/constants/country-codes'], function (exports, _ember, _goodsGatewayConstantsCountryCodes) {

  var ALLOWED_COUNTRIES = ['CA', 'US'];

  exports['default'] = _ember['default'].Component.extend({
    // dependencies
    localizedConstants: _ember['default'].inject.service('localized-constants'),

    // args
    address: null,
    hasBeenSubmitted: false,

    // helpers
    countryOptions: _ember['default'].computed('localizedConstants.options.[]', function () {
      return this.get('localizedConstants.options.country').filter(function (countryOption) {
        return ALLOWED_COUNTRIES.includes(countryOption.value);
      });
    }),

    isStateRequired: _ember['default'].computed('address.country', function () {
      return _goodsGatewayConstantsCountryCodes.COUNTRY_CODES_WITH_STATES.includes(this.get('address.country'));
    }),

    stateOptions: _ember['default'].computed('localizedConstants.options.[]', 'address.country', function () {
      var countryCode = this.get('address.country');
      if (_goodsGatewayConstantsCountryCodes.COUNTRY_CODES_WITH_STATES.includes(countryCode)) {
        return this.get('localizedConstants.options.' + countryCode.toLowerCase() + 'State');
      } else {
        return [];
      }
    })
  });
});
define("goods-gateway/components/vp-edit-vendor/address/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 77,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-edit-vendor/address/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [6]);
        var element1 = dom.childAt(fragment, [8]);
        var morphs = new Array(7);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2, 1]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4, 1]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
        morphs[5] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
        morphs[6] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]], 0, 0, 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.address", "inputId", ["subexpr", "concat", [["get", "id", ["loc", [null, [7, 22], [7, 24]]], 0, 0, 0, 0], "-address1"], [], ["loc", [null, [7, 14], [7, 37]]], 0, 0], "key", "address1", "model", ["subexpr", "@mut", [["get", "address", ["loc", [null, [9, 12], [9, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [11, 22], [11, 38]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [5, 4], [12, 6]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.address", "inputId", ["subexpr", "concat", [["get", "id", ["loc", [null, [20, 22], [20, 24]]], 0, 0, 0, 0], "-address2"], [], ["loc", [null, [20, 14], [20, 37]]], 0, 0], "key", "address2", "model", ["subexpr", "@mut", [["get", "address", ["loc", [null, [22, 12], [22, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [23, 22], [23, 38]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [18, 4], [24, 6]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.address", "inputId", ["subexpr", "concat", [["get", "id", ["loc", [null, [32, 22], [32, 24]]], 0, 0, 0, 0], "-city"], [], ["loc", [null, [32, 14], [32, 33]]], 0, 0], "key", "city", "model", ["subexpr", "@mut", [["get", "address", ["loc", [null, [34, 12], [34, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [36, 22], [36, 38]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [30, 4], [37, 6]]], 0, 0], ["inline", "vp-select", [], ["options", ["subexpr", "@mut", [["get", "countryOptions", ["loc", [null, [42, 14], [42, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "tRoot", "models.vendor.address", "inputId", ["subexpr", "concat", [["get", "id", ["loc", [null, [44, 22], [44, 24]]], 0, 0, 0, 0], "-country"], [], ["loc", [null, [44, 14], [44, 36]]], 0, 0], "key", "country", "model", ["subexpr", "@mut", [["get", "address", ["loc", [null, [46, 12], [46, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [48, 22], [48, 38]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [41, 4], [49, 6]]], 0, 0], ["inline", "vp-select", [], ["options", ["subexpr", "@mut", [["get", "stateOptions", ["loc", [null, [56, 14], [56, 26]]], 0, 0, 0, 0]], [], [], 0, 0], "tRoot", "models.vendor.address", "key", "state", "inputId", ["subexpr", "concat", [["get", "id", ["loc", [null, [59, 22], [59, 24]]], 0, 0, 0, 0], "-state"], [], ["loc", [null, [59, 14], [59, 34]]], 0, 0], "model", ["subexpr", "@mut", [["get", "address", ["loc", [null, [60, 12], [60, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "required", ["subexpr", "@mut", [["get", "isStateRequired", ["loc", [null, [61, 15], [61, 30]]], 0, 0, 0, 0]], [], [], 0, 0], "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [62, 22], [62, 38]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [55, 4], [63, 6]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.address", "inputId", ["subexpr", "concat", [["get", "id", ["loc", [null, [69, 22], [69, 24]]], 0, 0, 0, 0], "-zip"], [], ["loc", [null, [69, 14], [69, 32]]], 0, 0], "key", "zip", "model", ["subexpr", "@mut", [["get", "address", ["loc", [null, [71, 12], [71, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "required", ["subexpr", "eq", [["get", "address.country", ["loc", [null, [72, 19], [72, 34]]], 0, 0, 0, 0], "US"], [], ["loc", [null, [72, 15], [72, 40]]], 0, 0], "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [73, 22], [73, 38]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [67, 4], [74, 6]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-edit-vendor/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // args
    vendor: null,
    hasBeenSubmitted: false,

    submit: function submit() {
      this.set('hasBeenSubmitted', true);
      this.sendAction('save');
      return false;
    },

    actions: {
      copyShippingAddress: function copyShippingAddress(addressIdentifier) {
        var shippingAddress = _ember['default'].copy(this.get('vendor.shippingAddress'), true);
        this.get('vendor').set(addressIdentifier, shippingAddress);
      }
    }
  });
});
define("goods-gateway/components/vp-edit-vendor/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 75,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-edit-vendor/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h3");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["vp-edit-vendor.shippingAddress"], [], ["loc", [null, [81, 8], [81, 46]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-edit-vendor/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("p");
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("span");
          dom.setAttribute(el4, "class", "mx-icon-knobs mx-icon-16");
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1, 1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(element3, 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element3, [3]), 3, 3);
          return morphs;
        },
        statements: [["inline", "vp-select", [], ["options", ["subexpr", "options-for", ["shippingService"], [], ["loc", [null, [120, 22], [120, 53]]], 0, 0], "multiple", true, "tRoot", "models.vendor", "key", "supportedShippingServices", "model", ["subexpr", "@mut", [["get", "vendor", ["loc", [null, [124, 20], [124, 26]]], 0, 0, 0, 0]], [], [], 0, 0], "showBlankDefault", false, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [126, 30], [126, 46]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [119, 12], [127, 14]]], 0, 0], ["inline", "t", ["vp-edit-vendor.supportedShippingServicesNote"], [], ["loc", [null, [132, 14], [132, 66]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 154,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-edit-vendor/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h2");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("a");
          dom.setAttribute(el2, "href", "#");
          dom.setAttribute(el2, "class", "copy-address");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element2 = dom.childAt(fragment, [3, 1]);
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createElementMorph(element2);
          morphs[2] = dom.createMorphAt(element2, 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["vp-edit-vendor.businessAddress"], [], ["loc", [null, [146, 6], [146, 44]]], 0, 0], ["element", "action", ["copyShippingAddress", "businessAddress"], [], ["loc", [null, [150, 39], [150, 89]]], 0, 0], ["inline", "t", ["vp-edit-vendor.useShippingAddress"], [], ["loc", [null, [151, 8], [151, 49]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 172,
              "column": 4
            },
            "end": {
              "line": 216,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-edit-vendor/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h3");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("a");
          dom.setAttribute(el2, "href", "#");
          dom.setAttribute(el2, "class", "copy-address");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(fragment, [5, 1]);
          var morphs = new Array(6);
          morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
          morphs[3] = dom.createElementMorph(element1);
          morphs[4] = dom.createMorphAt(element1, 1, 1);
          morphs[5] = dom.createMorphAt(dom.childAt(fragment, [7, 1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "vp-money-field", [], ["tRoot", "models.vendor", "key", "returnToVendorThreshold", "model", ["subexpr", "@mut", [["get", "vendor", ["loc", [null, [178, 18], [178, 24]]], 0, 0, 0, 0]], [], [], 0, 0], "type", "number", "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [181, 28], [181, 44]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [175, 10], [182, 12]]], 0, 0], ["inline", "vp-select", [], ["options", ["subexpr", "options-for", ["currencyCode"], [], ["loc", [null, [187, 20], [187, 48]]], 0, 0], "tRoot", "models.vendor", "key", "returnToVendorThresholdCurrency", "model", ["subexpr", "@mut", [["get", "vendor", ["loc", [null, [190, 18], [190, 24]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [192, 28], [192, 44]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [186, 10], [193, 12]]], 0, 0], ["inline", "t", ["vp-edit-vendor.returnToVendorAddress"], [], ["loc", [null, [198, 8], [198, 52]]], 0, 0], ["element", "action", ["copyShippingAddress", "returnAddress"], [], ["loc", [null, [202, 41], [202, 89]]], 0, 0], ["inline", "t", ["vp-edit-vendor.useShippingAddress"], [], ["loc", [null, [203, 10], [203, 51]]], 0, 0], ["inline", "vp-edit-vendor.address", [], ["id", "returnAddress", "address", ["subexpr", "@mut", [["get", "vendor.returnAddress", ["loc", [null, [211, 20], [211, 40]]], 0, 0, 0, 0]], [], [], 0, 0], "hasBeenSubmitted", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [212, 29], [212, 45]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [209, 10], [213, 12]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 398,
              "column": 2
            },
            "end": {
              "line": 400,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-edit-vendor/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["vp-edit-vendor.submit"], [], ["loc", [null, [399, 4], [399, 33]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 404,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-edit-vendor/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "action", "#");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "business-contact");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("section");
        dom.setAttribute(el2, "id", "shipping");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "id", "shipping-options");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("h3");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "return-to-vendor");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "payment-info");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "admin");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element4 = dom.childAt(fragment, [0]);
        var element5 = dom.childAt(element4, [1]);
        var element6 = dom.childAt(element5, [5]);
        var element7 = dom.childAt(element5, [7]);
        var element8 = dom.childAt(element4, [3]);
        var element9 = dom.childAt(element8, [5]);
        var element10 = dom.childAt(element4, [7]);
        var element11 = dom.childAt(element4, [9]);
        var element12 = dom.childAt(element11, [3]);
        var element13 = dom.childAt(element11, [5]);
        var element14 = dom.childAt(element11, [9]);
        var element15 = dom.childAt(element11, [11]);
        var element16 = dom.childAt(element4, [11]);
        var morphs = new Array(34);
        morphs[0] = dom.createAttrMorph(element4, 'id');
        morphs[1] = dom.createMorphAt(dom.childAt(element5, [1]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element5, [3, 1]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element6, [1]), 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element6, [3]), 1, 1);
        morphs[5] = dom.createMorphAt(dom.childAt(element7, [1]), 1, 1);
        morphs[6] = dom.createMorphAt(dom.childAt(element7, [3]), 1, 1);
        morphs[7] = dom.createMorphAt(dom.childAt(element8, [1]), 1, 1);
        morphs[8] = dom.createMorphAt(element8, 3, 3);
        morphs[9] = dom.createMorphAt(dom.childAt(element9, [1]), 1, 1);
        morphs[10] = dom.createMorphAt(dom.childAt(element9, [3, 1]), 1, 1);
        morphs[11] = dom.createMorphAt(dom.childAt(element9, [5, 1]), 1, 1);
        morphs[12] = dom.createMorphAt(element9, 7, 7);
        morphs[13] = dom.createMorphAt(element4, 5, 5);
        morphs[14] = dom.createMorphAt(dom.childAt(element10, [1]), 1, 1);
        morphs[15] = dom.createMorphAt(dom.childAt(element10, [3, 1]), 1, 1);
        morphs[16] = dom.createMorphAt(element10, 5, 5);
        morphs[17] = dom.createMorphAt(dom.childAt(element11, [1]), 1, 1);
        morphs[18] = dom.createMorphAt(dom.childAt(element12, [1]), 1, 1);
        morphs[19] = dom.createMorphAt(dom.childAt(element12, [3]), 1, 1);
        morphs[20] = dom.createMorphAt(dom.childAt(element13, [1]), 1, 1);
        morphs[21] = dom.createMorphAt(dom.childAt(element13, [3]), 1, 1);
        morphs[22] = dom.createMorphAt(dom.childAt(element11, [7, 1]), 1, 1);
        morphs[23] = dom.createMorphAt(dom.childAt(element14, [1]), 1, 1);
        morphs[24] = dom.createMorphAt(dom.childAt(element14, [3]), 1, 1);
        morphs[25] = dom.createMorphAt(dom.childAt(element15, [1]), 1, 1);
        morphs[26] = dom.createMorphAt(dom.childAt(element15, [3]), 1, 1);
        morphs[27] = dom.createMorphAt(dom.childAt(element11, [13, 1]), 1, 1);
        morphs[28] = dom.createMorphAt(dom.childAt(element16, [1]), 1, 1);
        morphs[29] = dom.createMorphAt(dom.childAt(element16, [3, 1]), 1, 1);
        morphs[30] = dom.createMorphAt(dom.childAt(element16, [5, 1]), 1, 1);
        morphs[31] = dom.createMorphAt(dom.childAt(element16, [7, 1]), 1, 1);
        morphs[32] = dom.createMorphAt(element4, 13, 13);
        morphs[33] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        return morphs;
      },
      statements: [["attribute", "id", ["concat", ["edit-vendor-", ["get", "vendor.id", ["loc", [null, [1, 35], [1, 44]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", ["vp-edit-vendor.businessContact"], [], ["loc", [null, [4, 6], [4, 44]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor", "key", "name", "inputId", "name", "model", ["subexpr", "@mut", [["get", "vendor", ["loc", [null, [13, 16], [13, 22]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [15, 26], [15, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [9, 8], [16, 10]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.businessContact", "key", "firstName", "inputId", "businessContact-firstName", "model", ["subexpr", "@mut", [["get", "vendor.businessContact", ["loc", [null, [26, 16], [26, 38]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [28, 26], [28, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [22, 8], [29, 10]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.businessContact", "key", "lastName", "inputId", "businessContact-lastName", "model", ["subexpr", "@mut", [["get", "vendor.businessContact", ["loc", [null, [37, 16], [37, 38]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [39, 26], [39, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [33, 8], [40, 10]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.businessContact", "key", "email", "type", "email", "model", ["subexpr", "@mut", [["get", "vendor.businessContact", ["loc", [null, [50, 16], [50, 38]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "inputId", "businessContact-email", "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [53, 26], [53, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [46, 8], [54, 10]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.businessContact", "key", "phone", "model", ["subexpr", "@mut", [["get", "vendor.businessContact", ["loc", [null, [61, 16], [61, 38]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [63, 26], [63, 42]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", "businessContact-phone"], ["loc", [null, [58, 8], [65, 10]]], 0, 0], ["inline", "t", ["vp-edit-vendor.shipping"], [], ["loc", [null, [72, 6], [72, 37]]], 0, 0], ["block", "vp-edit-vendor.address", [], ["id", "shippingAddress", "address", ["subexpr", "@mut", [["get", "vendor.shippingAddress", ["loc", [null, [77, 14], [77, 36]]], 0, 0, 0, 0]], [], [], 0, 0], "hasBeenSubmitted", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [78, 23], [78, 39]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [75, 4], [83, 31]]]], ["inline", "t", ["vp-edit-vendor.shippingOptions"], [], ["loc", [null, [87, 8], [87, 46]]], 0, 0], ["inline", "vp-select", [], ["options", ["subexpr", "options-for", ["shippingOption"], [], ["loc", [null, [93, 20], [93, 50]]], 0, 0], "tRoot", "models.vendor", "key", "shippingAccount", "model", ["subexpr", "@mut", [["get", "vendor", ["loc", [null, [96, 18], [96, 24]]], 0, 0, 0, 0]], [], [], 0, 0], "default", "VENDOR", "showBlankDefault", false, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [99, 28], [99, 44]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [92, 10], [100, 12]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor", "key", "shippingSla", "model", ["subexpr", "@mut", [["get", "vendor", ["loc", [null, [109, 18], [109, 24]]], 0, 0, 0, 0]], [], [], 0, 0], "type", "number", "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [111, 28], [111, 44]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [106, 10], [112, 12]]], 0, 0], ["block", "if", [["subexpr", "eq", [["get", "vendor.shippingAccount", ["loc", [null, [116, 16], [116, 38]]], 0, 0, 0, 0], "GROUPON"], [], ["loc", [null, [116, 12], [116, 49]]], 0, 0]], [], 1, null, ["loc", [null, [116, 6], [136, 13]]]], ["block", "vp-edit-vendor.address", [], ["id", "businessAddress", "address", ["subexpr", "@mut", [["get", "vendor.businessAddress", ["loc", [null, [142, 12], [142, 34]]], 0, 0, 0, 0]], [], [], 0, 0], "hasBeenSubmitted", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [143, 21], [143, 37]]], 0, 0, 0, 0]], [], [], 0, 0]], 2, null, ["loc", [null, [140, 2], [154, 29]]]], ["inline", "t", ["vp-edit-vendor.returnToVendor"], [], ["loc", [null, [158, 6], [158, 43]]], 0, 0], ["inline", "mx-switch", [], ["model", ["subexpr", "@mut", [["get", "vendor", ["loc", [null, [164, 16], [164, 22]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "returnToVendorSupported", "large", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [167, 26], [167, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [163, 8], [168, 10]]], 0, 0], ["block", "if", [["get", "vendor.returnToVendorSupported", ["loc", [null, [172, 10], [172, 40]]], 0, 0, 0, 0]], [], 3, null, ["loc", [null, [172, 4], [216, 11]]]], ["inline", "t", ["vp-edit-vendor.paymentInformation"], [], ["loc", [null, [221, 6], [221, 47]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.paymentInfo", "key", "financialContactEmail", "model", ["subexpr", "@mut", [["get", "vendor.paymentInfo", ["loc", [null, [229, 16], [229, 34]]], 0, 0, 0, 0]], [], [], 0, 0], "type", "email", "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [232, 26], [232, 42]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", "paymentInfo-financialContactEmail"], ["loc", [null, [226, 8], [234, 10]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.bankInfo", "key", "makeChecksPayableTo", "inputId", "bankInfo-makeChecksPayableTo", "model", ["subexpr", "@mut", [["get", "vendor.bankInfo", ["loc", [null, [242, 16], [242, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [244, 26], [244, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [238, 8], [245, 10]]], 0, 0], ["inline", "vp-select", [], ["options", ["subexpr", "options-for", ["country"], [], ["loc", [null, [252, 18], [252, 41]]], 0, 0], "tRoot", "models.vendor.bankInfo", "inputId", "bankInfo-country", "key", "country", "model", ["subexpr", "@mut", [["get", "vendor.bankInfo", ["loc", [null, [256, 16], [256, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [258, 26], [258, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [251, 8], [259, 10]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.bankInfo", "key", "beneficiaryBankName", "inputId", "bankInfo-beneficiaryBankName", "model", ["subexpr", "@mut", [["get", "vendor.bankInfo", ["loc", [null, [267, 16], [267, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [269, 26], [269, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [263, 8], [270, 10]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.bankInfo", "key", "beneficiaryBankAccountNumber", "inputId", "bankInfo-beneficiaryBankAccountNumber", "model", ["subexpr", "@mut", [["get", "vendor.bankInfo", ["loc", [null, [280, 16], [280, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [282, 26], [282, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [276, 8], [283, 10]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.bankInfo", "key", "beneficiaryBankRoutingNumber", "model", ["subexpr", "@mut", [["get", "vendor.bankInfo", ["loc", [null, [292, 16], [292, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "inputId", "bankInfo-beneficiaryBankRoutingNumber", "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [295, 26], [295, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [289, 8], [296, 10]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.bankInfo", "key", "taxId", "model", ["subexpr", "@mut", [["get", "vendor.bankInfo", ["loc", [null, [303, 16], [303, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", "bankInfo-taxId", "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [306, 26], [306, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [300, 8], [307, 10]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.paymentInfo", "key", "discountAllowance", "model", ["subexpr", "@mut", [["get", "vendor.paymentInfo", ["loc", [null, [316, 16], [316, 34]]], 0, 0, 0, 0]], [], [], 0, 0], "type", ["subexpr", "@mut", [["get", "number", ["loc", [null, [317, 15], [317, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [319, 26], [319, 42]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", "paymentInfo-discountAllowance"], ["loc", [null, [313, 8], [321, 10]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor.paymentInfo", "key", "freightAllowance", "model", ["subexpr", "@mut", [["get", "vendor.paymentInfo", ["loc", [null, [328, 16], [328, 34]]], 0, 0, 0, 0]], [], [], 0, 0], "type", ["subexpr", "@mut", [["get", "number", ["loc", [null, [329, 15], [329, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [331, 26], [331, 42]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", "paymentInfo-freightAllowance"], ["loc", [null, [325, 8], [333, 10]]], 0, 0], ["inline", "vp-select", [], ["options", ["subexpr", "options-for", ["paymentTerm"], [], ["loc", [null, [340, 18], [340, 45]]], 0, 0], "tRoot", "models.vendor.paymentInfo", "key", "paymentTerm", "model", ["subexpr", "@mut", [["get", "vendor.paymentInfo", ["loc", [null, [343, 16], [343, 34]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [345, 26], [345, 42]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", "paymentInfo-paymentTerm"], ["loc", [null, [339, 8], [347, 10]]], 0, 0], ["inline", "t", ["vp-edit-vendor.admin"], [], ["loc", [null, [354, 6], [354, 34]]], 0, 0], ["inline", "vp-select", [], ["options", ["subexpr", "options-for", ["vendorStatus"], [], ["loc", [null, [360, 18], [360, 46]]], 0, 0], "tRoot", "models.vendor", "key", "state", "model", ["subexpr", "@mut", [["get", "vendor", ["loc", [null, [363, 16], [363, 22]]], 0, 0, 0, 0]], [], [], 0, 0], "default", "active", "showBlankDefault", false, "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [367, 26], [367, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [359, 8], [368, 10]]], 0, 0], ["inline", "vp-select", [], ["options", ["subexpr", "options-for", ["fulfillmentPlatform"], [], ["loc", [null, [375, 18], [375, 53]]], 0, 0], "tRoot", "models.vendor", "key", "fulfillmentPlatform", "model", ["subexpr", "@mut", [["get", "vendor", ["loc", [null, [378, 16], [378, 22]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [380, 26], [380, 42]]], 0, 0, 0, 0]], [], [], 0, 0], "showBlankDefault", false], ["loc", [null, [374, 8], [382, 10]]], 0, 0], ["inline", "vp-field", [], ["tRoot", "models.vendor", "key", "legacyM3Uuid", "model", ["subexpr", "@mut", [["get", "vendor", ["loc", [null, [391, 16], [391, 22]]], 0, 0, 0, 0]], [], [], 0, 0], "immediateErrors", ["subexpr", "@mut", [["get", "hasBeenSubmitted", ["loc", [null, [392, 26], [392, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [388, 8], [393, 10]]], 0, 0], ["block", "mx-submit", [], ["inputId", "save-vendor"], 4, null, ["loc", [null, [398, 2], [400, 16]]]], ["content", "yield", ["loc", [null, [403, 0], [403, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  })());
});
define('goods-gateway/components/vp-feature-form/component', ['exports', 'ember', 'goods-gateway/utils/aggregate-validation-errors', 'goods-gateway/config/environment', 'goods-gateway/mixins/daterange'], function (exports, _ember, _goodsGatewayUtilsAggregateValidationErrors, _goodsGatewayConfigEnvironment, _goodsGatewayMixinsDaterange) {
  exports['default'] = _ember['default'].Component.extend(_goodsGatewayMixinsDaterange['default'], {
    // args
    feature: null,
    everFeatured: null,

    // attributes
    classNames: ['vp-feature-form'],

    // dependencies
    i18n: _ember['default'].inject.service(),

    // helpers
    model: _ember['default'].computed.alias('feature'),
    isStartDateDisabled: _ember['default'].computed.not('feature.isScheduled'),
    isEndDateDisabled: _ember['default'].computed.or('feature.isEnded', 'feature.isFailed'),
    defaultDisable: _ember['default'].computed.not('feature.isScheduled'),
    isConfirmButtonPresent: _ember['default'].computed.or('feature.isActive', 'feature.isScheduled'),

    didReceiveAttrs: function didReceiveAttrs() {
      this.set('feature.needEditorialReview', this.get('hasNeverBeenFeatured'));
    },

    hasNeverBeenFeatured: _ember['default'].computed.not('everFeatured'),

    disableNeedEditorialReview: _ember['default'].computed.or('hasNeverBeenFeatured', 'defaultDisable'),

    hasValidationMessages: _ember['default'].computed('validationErrors', 'validationWarnings', function () {
      return this.get('validationErrors').concat(this.get('validationWarnings')).length > 0;
    }),

    featureLaunchControlEnabled: _goodsGatewayConfigEnvironment['default'].featureFlags.featureLaunchControl,

    validationErrors: _ember['default'].computed('feature.errors.startDate', 'feature.errors.endDate', function () {
      var _this = this;

      return (0, _goodsGatewayUtilsAggregateValidationErrors['default'])(this.get('feature')).reduce(function (errors, nextError) {
        return errors.concat(nextError.messages.map(function (message) {
          return {
            property: _this.get('i18n').t('feature.' + nextError.property),
            error: message
          };
        }));
      }, []);
    }),

    hasErrors: _ember['default'].computed.notEmpty('validationErrors'),

    validationWarnings: _ember['default'].computed('feature.warnings', function () {
      var _this2 = this;

      var i18n = this.get('i18n');
      return this.get('feature.warnings').map(function (warning) {
        var translatedData = _this2._translateData(warning.data);
        return i18n.t('vp-feature-form.' + warning.key, translatedData);
      });
    }),

    _translateData: function _translateData(data) {
      var dateFormat = this.get('dateFormat');
      var result = {};
      var targetDate = data.targetDate;
      if (targetDate && moment.isMoment(targetDate)) {
        result.targetDate = moment(targetDate).subtract(1, "days").format(dateFormat);
      }
      return result;
    },

    actions: {
      submit: function submit() {
        this.sendAction('submit');
      }
    }
  });
});
define("goods-gateway/components/vp-feature-form/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 29,
                  "column": 10
                },
                "end": {
                  "line": 35,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/components/vp-feature-form/template.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("p");
              dom.setAttribute(el1, "class", "js-validation-error");
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["inline", "t", ["vp-new-feature.errorMessage"], ["fieldName", ["subexpr", "@mut", [["get", "validationError.property", ["loc", [null, [32, 26], [32, 50]]], 0, 0, 0, 0]], [], [], 0, 0], "error", ["subexpr", "@mut", [["get", "validationError.error", ["loc", [null, [33, 22], [33, 43]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [31, 14], [33, 45]]], 0, 0]],
            locals: ["validationError"],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 36,
                  "column": 10
                },
                "end": {
                  "line": 40,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/components/vp-feature-form/template.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("p");
              dom.setAttribute(el1, "class", "js-validation-warning");
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["content", "validationWarning", ["loc", [null, [38, 14], [38, 35]]], 0, 0, 0, 0]],
            locals: ["validationWarning"],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 28,
                "column": 8
              },
              "end": {
                "line": 41,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-feature-form/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "each", [["get", "validationErrors", ["loc", [null, [29, 18], [29, 34]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [29, 10], [35, 19]]]], ["block", "each", [["get", "validationWarnings", ["loc", [null, [36, 18], [36, 36]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [36, 10], [40, 19]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 26,
              "column": 4
            },
            "end": {
              "line": 43,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-feature-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["block", "mx-alert", [], ["type", ["subexpr", "if", [["get", "hasErrors", ["loc", [null, [28, 29], [28, 38]]], 0, 0, 0, 0], "error", "notify"], [], ["loc", [null, [28, 25], [28, 56]]], 0, 0]], 0, null, ["loc", [null, [28, 8], [41, 21]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 46,
              "column": 2
            },
            "end": {
              "line": 57,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-feature-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "vp-checkbox", [], ["model", ["subexpr", "@mut", [["get", "feature", ["loc", [null, [50, 16], [50, 23]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "applyStartDateToProduct", "tRoot", "feature", "disabled", ["subexpr", "@mut", [["get", "defaultDisable", ["loc", [null, [53, 19], [53, 33]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [49, 8], [54, 10]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 96,
                "column": 8
              },
              "end": {
                "line": 98,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-feature-form/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["feature.confirm"], [], ["loc", [null, [97, 10], [97, 33]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-feature-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column submit-button");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["block", "mx-submit", [], ["disabled", ["subexpr", "@mut", [["get", "feature.isInvalid", ["loc", [null, [96, 30], [96, 47]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [96, 8], [98, 22]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 103,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-feature-form/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column--1of4 start-date");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("label");
        dom.setAttribute(el4, "for", "start-date");
        dom.setAttribute(el4, "class", "date-label");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column--1of4 end-date");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("label");
        dom.setAttribute(el4, "for", "end-date");
        dom.setAttribute(el4, "class", "date-label");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("label");
        dom.setAttribute(el4, "for", "imageNotes");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("label");
        dom.setAttribute(el4, "for", "salesPoints");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column--1of4");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(element1, [1]);
        var element3 = dom.childAt(element1, [3]);
        var element4 = dom.childAt(element0, [5, 1]);
        var element5 = dom.childAt(element0, [7, 1]);
        var element6 = dom.childAt(element0, [9]);
        var morphs = new Array(13);
        morphs[0] = dom.createElementMorph(element0);
        morphs[1] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);
        morphs[2] = dom.createMorphAt(element2, 3, 3);
        morphs[3] = dom.createMorphAt(dom.childAt(element3, [1]), 0, 0);
        morphs[4] = dom.createMorphAt(element3, 3, 3);
        morphs[5] = dom.createMorphAt(element1, 5, 5);
        morphs[6] = dom.createMorphAt(element0, 3, 3);
        morphs[7] = dom.createMorphAt(dom.childAt(element4, [1]), 0, 0);
        morphs[8] = dom.createMorphAt(element4, 3, 3);
        morphs[9] = dom.createMorphAt(dom.childAt(element5, [1]), 0, 0);
        morphs[10] = dom.createMorphAt(element5, 3, 3);
        morphs[11] = dom.createMorphAt(dom.childAt(element6, [1]), 1, 1);
        morphs[12] = dom.createMorphAt(element6, 3, 3);
        return morphs;
      },
      statements: [["element", "action", ["submit"], ["on", "submit"], ["loc", [null, [1, 6], [1, 37]]], 0, 0], ["inline", "t", ["feature.startDate"], [], ["loc", [null, [4, 49], [4, 74]]], 0, 0], ["inline", "pikaday-input", [], ["name", "start-date", "class", "alt-input short-date", "value", ["subexpr", "@mut", [["get", "startDate", ["loc", [null, [8, 14], [8, 23]]], 0, 0, 0, 0]], [], [], 0, 0], "disabled", ["subexpr", "@mut", [["get", "isStartDateDisabled", ["loc", [null, [9, 17], [9, 36]]], 0, 0, 0, 0]], [], [], 0, 0], "minDate", ["subexpr", "@mut", [["get", "minStartDate", ["loc", [null, [10, 16], [10, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "maxDate", ["subexpr", "@mut", [["get", "maxStartDate", ["loc", [null, [11, 16], [11, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "format", ["subexpr", "@mut", [["get", "dateFormat", ["loc", [null, [12, 15], [12, 25]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [5, 6], [12, 27]]], 0, 0], ["inline", "t", ["feature.endDate"], [], ["loc", [null, [16, 47], [16, 70]]], 0, 0], ["inline", "pikaday-input", [], ["name", "end-date", "class", "alt-input short-date", "value", ["subexpr", "@mut", [["get", "endDate", ["loc", [null, [20, 14], [20, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "disabled", ["subexpr", "@mut", [["get", "isEndDateDisabled", ["loc", [null, [21, 17], [21, 34]]], 0, 0, 0, 0]], [], [], 0, 0], "minDate", ["subexpr", "@mut", [["get", "minEndDate", ["loc", [null, [22, 16], [22, 26]]], 0, 0, 0, 0]], [], [], 0, 0], "format", ["subexpr", "@mut", [["get", "dateFormat", ["loc", [null, [23, 15], [23, 25]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [17, 6], [23, 27]]], 0, 0], ["block", "if", [["get", "hasValidationMessages", ["loc", [null, [26, 10], [26, 31]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [26, 4], [43, 11]]]], ["block", "if", [["get", "featureLaunchControlEnabled", ["loc", [null, [46, 8], [46, 35]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [46, 2], [57, 9]]]], ["inline", "t", ["vp-feature-form.imageNotes"], [], ["loc", [null, [61, 30], [61, 64]]], 0, 0], ["inline", "textarea", [], ["id", "imageNotes", "name", "imageNotes", "value", ["subexpr", "@mut", [["get", "feature.imageNotes", ["loc", [null, [65, 14], [65, 32]]], 0, 0, 0, 0]], [], [], 0, 0], "class", "text-input", "required", false, "disabled", ["subexpr", "@mut", [["get", "defaultDisable", ["loc", [null, [68, 17], [68, 31]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [62, 6], [68, 33]]], 0, 0], ["inline", "t", ["vp-feature-form.editorialNotes"], [], ["loc", [null, [74, 31], [74, 69]]], 0, 0], ["inline", "textarea", [], ["id", "salesPoints", "name", "salesPoints", "value", ["subexpr", "@mut", [["get", "feature.salesPoints", ["loc", [null, [78, 14], [78, 33]]], 0, 0, 0, 0]], [], [], 0, 0], "class", "text-input", "required", false, "disabled", ["subexpr", "@mut", [["get", "defaultDisable", ["loc", [null, [81, 17], [81, 31]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [75, 6], [81, 33]]], 0, 0], ["inline", "vp-checkbox", [], ["model", ["subexpr", "@mut", [["get", "feature", ["loc", [null, [88, 14], [88, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "needEditorialReview", "class", "need-editorial-review", "tRoot", "feature", "disabled", ["subexpr", "@mut", [["get", "disableNeedEditorialReview", ["loc", [null, [92, 17], [92, 43]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [87, 6], [92, 45]]], 0, 0], ["block", "if", [["get", "isConfirmButtonPresent", ["loc", [null, [94, 10], [94, 32]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [94, 4], [100, 11]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define('goods-gateway/components/vp-feature-modal/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    open: true,

    actions: {
      close: function close() {
        this.sendAction('close');
      },

      submit: function submit() {
        this.set('open', false);
        this.sendAction('submit');
      }
    }
  });
});
define("goods-gateway/components/vp-feature-modal/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-feature-modal/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-feature-form", [], ["feature", ["subexpr", "@mut", [["get", "feature", ["loc", [null, [3, 12], [3, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "everFeatured", ["subexpr", "@mut", [["get", "feature.product.everFeatured", ["loc", [null, [4, 17], [4, 45]]], 0, 0, 0, 0]], [], [], 0, 0], "submit", "submit"], ["loc", [null, [2, 2], [5, 21]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-feature-modal/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "mx-modal", [], ["title", ["subexpr", "@mut", [["get", "title", ["loc", [null, [1, 18], [1, 23]]], 0, 0, 0, 0]], [], [], 0, 0], "closeable", true, "open", ["subexpr", "@mut", [["get", "open", ["loc", [null, [1, 44], [1, 48]]], 0, 0, 0, 0]], [], [], 0, 0], "close", "close"], 0, null, ["loc", [null, [1, 0], [6, 13]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-feature/component', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {

  var component = _ember['default'].Component.extend({
    // args: feature

    // helpers
    enabled: _ember['default'].computed('feature', function () {
      return !!_goodsGatewayConfigEnvironment['default'].featureFlags[this.get('feature')];
    })
  });

  component.reopenClass({
    positionalParams: ['feature']
  });

  exports['default'] = component;
});
// this is intended to replace the external library, which does not support an async config for feature flags
define("goods-gateway/components/vp-feature/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-feature/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "yield", ["loc", [null, [2, 2], [2, 11]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-feature/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "enabled", ["loc", [null, [1, 6], [1, 13]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [1, 0], [3, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-featured-window/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    tagName: '',
    featuredWindow: _ember['default'].computed('distributionWindows', function () {
      var type = 'featured';
      if (this.get('distributionWindows')) {
        return this.get('distributionWindows').filter(function (w) {
          return w.get('type') === type;
        })[0];
      }
    })
  });
});
define("goods-gateway/components/vp-featured-window/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-featured-window/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "yield", [["get", "featuredWindow", ["loc", [null, [1, 8], [1, 22]]], 0, 0, 0, 0]], [], ["loc", [null, [1, 0], [1, 24]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-field/component', ['exports', 'ember', 'goods-gateway/mixins/field'], function (exports, _ember, _goodsGatewayMixinsField) {
  exports['default'] = _ember['default'].Component.extend(_goodsGatewayMixinsField['default'], {
    // attributes
    classNames: ['input-group'],

    // args
    autocomplete: '',
    autofocus: false,
    disabled: false,
    enabled: true,
    inputId: null,
    key: null,
    maxlength: null,
    model: null,
    placeholder: null,
    required: false,
    showLabel: true,
    tKey: null,
    tRoot: null,
    toggle: false,
    type: 'text',

    isDisabled: _ember['default'].computed('enabled', 'disabled', function () {
      return this.get('disabled') || !this.get('enabled');
    }),

    click: function click() {
      if (this.get('toggle')) {
        this.sendAction('showSearch');
      }
    }
  });
});
define("goods-gateway/components/vp-field/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 17,
              "column": 0
            },
            "end": {
              "line": 21,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-field/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("label");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element0, 'for');
          morphs[1] = dom.createMorphAt(element0, 1, 1);
          return morphs;
        },
        statements: [["attribute", "for", ["get", "inputElementId", ["loc", [null, [18, 15], [18, 29]]], 0, 0, 0, 0], 0, 0, 0, 0], ["content", "label", ["loc", [null, [19, 4], [19, 13]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 23,
              "column": 0
            },
            "end": {
              "line": 25,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-field/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          dom.setAttribute(el1, "class", "validation-error");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["content", "errors.0", ["loc", [null, [24, 30], [24, 44]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-field/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        morphs[3] = dom.createMorphAt(fragment, 6, 6, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "input", [], ["id", ["subexpr", "@mut", [["get", "inputElementId", ["loc", [null, [2, 5], [2, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "name", ["subexpr", "@mut", [["get", "field", ["loc", [null, [3, 7], [3, 12]]], 0, 0, 0, 0]], [], [], 0, 0], "type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [4, 7], [4, 11]]], 0, 0, 0, 0]], [], [], 0, 0], "value", ["subexpr", "@mut", [["get", "value", ["loc", [null, [5, 8], [5, 13]]], 0, 0, 0, 0]], [], [], 0, 0], "step", ["subexpr", "@mut", [["get", "step", ["loc", [null, [6, 7], [6, 11]]], 0, 0, 0, 0]], [], [], 0, 0], "class", ["subexpr", "concat", ["text-input alt-input", " ", ["subexpr", "if", [["get", "state", [], 0, 0, 0, 0], ["subexpr", "-normalize-class", ["state", ["get", "state", [], 0, 0, 0, 0]], [], [], 0, 0]], [], [], 0, 0], " ", ["subexpr", "if", [["get", "isFilled", [], 0, 0, 0, 0], "is-filled"], [], [], 0, 0], " "], [], [], 0, 0], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [9, 11], [9, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "placeholder", ["subexpr", "@mut", [["get", "placeholderText", ["loc", [null, [10, 14], [10, 29]]], 0, 0, 0, 0]], [], [], 0, 0], "disabled", ["subexpr", "@mut", [["get", "isDisabled", ["loc", [null, [11, 11], [11, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "autocomplete", ["subexpr", "@mut", [["get", "autocomplete", ["loc", [null, [12, 15], [12, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "maxlength", ["subexpr", "@mut", [["get", "maxlength", ["loc", [null, [13, 12], [13, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "autofocus", ["subexpr", "@mut", [["get", "autofocus", ["loc", [null, [14, 12], [14, 21]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [1, 0], [15, 2]]], 0, 0], ["block", "if", [["get", "showLabel", ["loc", [null, [17, 6], [17, 15]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [17, 0], [21, 7]]]], ["block", "if", [["get", "showError", ["loc", [null, [23, 6], [23, 15]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [23, 0], [25, 7]]]], ["content", "yield", ["loc", [null, [27, 0], [27, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-find/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // args
    collection: [],
    key: null,
    value: null,

    // attributes
    tagName: 'span',
    classNames: ['vp-find'],

    // helpers
    found: _ember['default'].computed('collection.[]', function () {
      var collection = this.get('collection') || [];
      return collection.findBy(this.get('key'), this.get('value'));
    })
  });
});
define("goods-gateway/components/vp-find/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-find/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "yield", [["get", "found", ["loc", [null, [1, 8], [1, 13]]], 0, 0, 0, 0]], [], ["loc", [null, [1, 0], [1, 15]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-flashes/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // dependencies
    flashMessages: _ember['default'].inject.service('flashMessages'),

    // attributes
    classNames: ['vp-flashes'],

    // helpers
    flashes: _ember['default'].computed('flashMessages.queue.[]', function () {
      return this.get('flashMessages.queue').map(function (flash) {
        return _ember['default'].ObjectProxy.create({
          content: flash,
          type: flash.get('type').replace(/^alert-/, '')
        });
      });
    }),

    actions: {
      dismiss: function dismiss(flash) {
        var queuedFlash = this.get('flashMessages.queue').find(function (flashInQueue) {
          return flashInQueue === flash.get('content');
        });
        queuedFlash.destroyMessage();
      }
    }
  });
});
define("goods-gateway/components/vp-flashes/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 6,
                    "column": 6
                  },
                  "end": {
                    "line": 10,
                    "column": 6
                  }
                },
                "moduleName": "goods-gateway/components/vp-flashes/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("        ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("p");
                dom.setAttribute(el1, "class", "request-id");
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n        ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
                return morphs;
              },
              statements: [["inline", "t", ["errors.requestIdTemplate"], ["requestId", ["subexpr", "@mut", [["get", "flash.requestId", ["loc", [null, [8, 51], [8, 66]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [8, 10], [8, 68]]], 0, 0]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 3,
                  "column": 4
                },
                "end": {
                  "line": 11,
                  "column": 4
                }
              },
              "moduleName": "goods-gateway/components/vp-flashes/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n\n");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createUnsafeMorphAt(fragment, 1, 1, contextualElement);
              morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["content", "flash.message", ["loc", [null, [4, 6], [4, 25]]], 0, 0, 0, 0], ["block", "if", [["get", "flash.requestId", ["loc", [null, [6, 12], [6, 27]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [6, 6], [10, 13]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            },
            "moduleName": "goods-gateway/components/vp-flashes/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "mx-alert", [], ["flash", ["subexpr", "@mut", [["get", "flash", ["loc", [null, [3, 22], [3, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "dismiss", "dismiss"], 0, null, ["loc", [null, [3, 4], [11, 17]]]]],
          locals: ["flash"],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 15,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-flashes/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          dom.insertBoundary(fragment, 0);
          return morphs;
        },
        statements: [["block", "each", [["get", "flashes", ["loc", [null, [2, 10], [2, 17]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [2, 2], [12, 11]]]], ["content", "yield", ["loc", [null, [14, 2], [14, 11]]], 0, 0, 0, 0]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-flashes/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "flashes.length", ["loc", [null, [1, 6], [1, 20]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [1, 0], [15, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-fulfillment-option-form/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    authorization: _ember['default'].inject.service('authorization'),
    tagName: 'row',
    editableByBuyer: _ember['default'].computed('editable', function () {
      return this.get('editable') && this.get('authorization').can('write_default');
    })
  });
});
define("goods-gateway/components/vp-fulfillment-option-form/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 32,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-fulfillment-option-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "align-right");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "align-right");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["contract.lumpSumCoOp"], [], ["loc", [null, [34, 10], [34, 38]]], 0, 0], ["inline", "t", ["contract.coOpPercentage"], [], ["loc", [null, [38, 10], [38, 41]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-fulfillment-option-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("td");
          dom.setAttribute(el1, "class", "lump-sum-coop align-right");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "vp-money-field", [], ["inputId", "lumpSumCoOp", "model", ["subexpr", "@mut", [["get", "fulfillmentOption", ["loc", [null, [77, 16], [77, 33]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "lumpSumCoOp.amount", "showLabel", false], ["loc", [null, [75, 8], [80, 10]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 83,
                "column": 6
              },
              "end": {
                "line": 90,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-fulfillment-option-form/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "lump-sum-coop align-right");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "format-currency", [["get", "fulfillmentOption.lumpSumCoOp.amount", ["loc", [null, [86, 12], [86, 48]]], 0, 0, 0, 0], ["get", "fulfillmentOption.lumpSumCoOp.currencyCode", ["loc", [null, [87, 12], [87, 54]]], 0, 0, 0, 0]], [], ["loc", [null, [85, 10], [88, 12]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-fulfillment-option-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "vp-can", ["read_default"], [], 0, null, ["loc", [null, [83, 6], [90, 17]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-fulfillment-option-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("td");
          dom.setAttribute(el1, "class", "coop-percentage align-right");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "vp-field", [], ["inputId", "coOpPercentage", "model", ["subexpr", "@mut", [["get", "fulfillmentOption", ["loc", [null, [97, 16], [97, 33]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "coOpPercentage", "showLabel", false], ["loc", [null, [95, 8], [100, 10]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 103,
                "column": 6
              },
              "end": {
                "line": 107,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-fulfillment-option-form/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "coop-percentage align-right");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "percentage", [["subexpr", "decimal-percentage", [["get", "fulfillmentOption.coOpPercentage", ["loc", [null, [105, 43], [105, 75]]], 0, 0, 0, 0]], [], ["loc", [null, [105, 23], [105, 76]]], 0, 0]], ["decimals", 2], ["loc", [null, [105, 10], [105, 89]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 102,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-fulfillment-option-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "vp-can", ["read_default"], [], 0, null, ["loc", [null, [103, 6], [107, 17]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 112,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-fulfillment-option-form/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("table");
        dom.setAttribute(el1, "class", "table-lined");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("thead");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("tr");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        dom.setAttribute(el4, "class", "align-right");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        dom.setAttribute(el4, "class", "align-right");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("tbody");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("tr");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("td");
        dom.setAttribute(el4, "class", "country");
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("td");
        dom.setAttribute(el4, "class", "currency");
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("td");
        dom.setAttribute(el4, "class", "payment-terms");
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("td");
        dom.setAttribute(el4, "class", "fulfillment-method");
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("td");
        dom.setAttribute(el4, "class", "shipping-sla");
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("td");
        dom.setAttribute(el4, "class", "discount-allowance-percentage align-right");
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("td");
        dom.setAttribute(el4, "class", "freight-allowance-percentage align-right");
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1, 1]);
        var element2 = dom.childAt(element0, [3, 1]);
        var morphs = new Array(17);
        morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element1, [5]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element1, [7]), 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element1, [9]), 1, 1);
        morphs[5] = dom.createMorphAt(dom.childAt(element1, [11]), 1, 1);
        morphs[6] = dom.createMorphAt(dom.childAt(element1, [13]), 1, 1);
        morphs[7] = dom.createMorphAt(element1, 15, 15);
        morphs[8] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
        morphs[9] = dom.createMorphAt(dom.childAt(element2, [3]), 1, 1);
        morphs[10] = dom.createMorphAt(dom.childAt(element2, [5]), 1, 1);
        morphs[11] = dom.createMorphAt(dom.childAt(element2, [7]), 1, 1);
        morphs[12] = dom.createMorphAt(dom.childAt(element2, [9]), 1, 1);
        morphs[13] = dom.createMorphAt(dom.childAt(element2, [11]), 1, 1);
        morphs[14] = dom.createMorphAt(dom.childAt(element2, [13]), 1, 1);
        morphs[15] = dom.createMorphAt(element2, 15, 15);
        morphs[16] = dom.createMorphAt(element2, 17, 17);
        return morphs;
      },
      statements: [["inline", "t", ["contract.country"], [], ["loc", [null, [5, 8], [5, 32]]], 0, 0], ["inline", "t", ["contract.currency"], [], ["loc", [null, [9, 8], [9, 33]]], 0, 0], ["inline", "t", ["contract.paymentTerms"], [], ["loc", [null, [13, 8], [13, 37]]], 0, 0], ["inline", "t", ["contract.fulfillmentMethod"], [], ["loc", [null, [17, 8], [17, 42]]], 0, 0], ["inline", "t", ["contract.shippingSla"], [], ["loc", [null, [21, 8], [21, 36]]], 0, 0], ["inline", "t", ["contract.discountAllowance"], [], ["loc", [null, [25, 8], [25, 42]]], 0, 0], ["inline", "t", ["contract.freightAllowance"], [], ["loc", [null, [29, 8], [29, 41]]], 0, 0], ["block", "vp-can", ["read_default"], [], 0, null, ["loc", [null, [32, 6], [40, 17]]]], ["inline", "t", ["contract.defaultCountry"], [], ["loc", [null, [46, 6], [46, 37]]], 0, 0], ["inline", "t", ["contract.defaultCurrency"], [], ["loc", [null, [50, 6], [50, 38]]], 0, 0], ["content", "fulfillmentOption.paymentTerms", ["loc", [null, [54, 6], [54, 40]]], 0, 0, 0, 0], ["content", "fulfillmentOption.fulfillmentMethod", ["loc", [null, [58, 6], [58, 45]]], 0, 0, 0, 0], ["inline", "t", ["contract.shippingSlaInDays"], ["value", ["subexpr", "@mut", [["get", "fulfillmentOption.shippingSla", ["loc", [null, [62, 45], [62, 74]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [62, 6], [62, 76]]], 0, 0], ["inline", "percentage", [["subexpr", "decimal-percentage", [["get", "fulfillmentOption.discountAllowance", ["loc", [null, [66, 39], [66, 74]]], 0, 0, 0, 0]], [], ["loc", [null, [66, 19], [66, 75]]], 0, 0]], ["decimals", 2], ["loc", [null, [66, 6], [66, 88]]], 0, 0], ["inline", "percentage", [["subexpr", "decimal-percentage", [["get", "fulfillmentOption.freightAllowance", ["loc", [null, [70, 39], [70, 73]]], 0, 0, 0, 0]], [], ["loc", [null, [70, 19], [70, 74]]], 0, 0]], ["decimals", 2], ["loc", [null, [70, 6], [70, 87]]], 0, 0], ["block", "if", [["get", "editableByBuyer", ["loc", [null, [73, 10], [73, 25]]], 0, 0, 0, 0]], [], 1, 2, ["loc", [null, [73, 4], [91, 11]]]], ["block", "if", [["get", "editableByBuyer", ["loc", [null, [93, 10], [93, 25]]], 0, 0, 0, 0]], [], 3, 4, ["loc", [null, [93, 4], [108, 11]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  })());
});
define('goods-gateway/components/vp-group/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // args
    array: [],
    groupSize: 1,

    // helpers
    groups: _ember['default'].computed('array.[]', function () {
      var groups = [];
      var array = this.get('array');
      var groupSize = this.get('groupSize');
      for (var i = 0; i < array.length; i += groupSize) {
        var group = array.slice(i, i + groupSize);
        groups.pushObject(group);
      }
      return groups;
    })
  });
});
define("goods-gateway/components/vp-group/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-group/template.hbs"
        },
        isEmpty: false,
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "yield", [["get", "group", ["loc", [null, [2, 10], [2, 15]]], 0, 0, 0, 0], ["get", "index", ["loc", [null, [2, 16], [2, 21]]], 0, 0, 0, 0]], [], ["loc", [null, [2, 2], [2, 23]]], 0, 0]],
        locals: ["group", "index"],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-group/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "each", [["get", "groups", ["loc", [null, [1, 8], [1, 14]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [1, 0], [3, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-image/component', ['exports', 'ember'], function (exports, _ember) {

  // https://github.groupondev.com/gitosis-mirror/image-service-config/blob/master/config.yml#L477-L479
  var ALLOWED_SIZES = ['16x16', '30x30', '440x300', '100x100', '200x200', '200x300', '125x75', '72x72', '220x134', '300x182', '460x279', '580x252', '50x50', '50x100', '900x600', '954x610', '186x165', '600x320', '312x110', '624x220', '450x300', '190x127', '320x212', '108x72', '620x183', '700x424', '700x420', '620x376', '217x131', '191x115', '1400x840', '2100x1260', '2800x1680', '4200x2520', '1200x627', '300x100'];

  var DEFAULT_DIMENSIONS = '125x75';

  exports['default'] = _ember['default'].Component.extend({
    // args
    image: null,
    dimensions: DEFAULT_DIMENSIONS,

    // attributes
    classNames: ['vp-image', 'image'],

    // lifecycle
    didReceiveAttrs: function didReceiveAttrs() {
      if (!ALLOWED_SIZES.includes(this.get('dimensions'))) {
        throw new Error('Unsupported image dimensions: ' + this.get('dimensions'));
      }
    },

    // helpers
    processedImage: _ember['default'].computed('image.imageServiceUri', function () {
      var dimensionPostfix = '/v1/t' + this.get('dimensions');
      var image = this.get('image');
      var imageServiceURI = image.get('imageServiceUri');
      var uri = imageServiceURI ? '//' + imageServiceURI + dimensionPostfix : null;
      return _ember['default'].ObjectProxy.create({
        content: image,
        uri: uri
      });
    })
  });
});
define("goods-gateway/components/vp-image/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-image/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("img");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element0, 'src');
          return morphs;
        },
        statements: [["attribute", "src", ["concat", [["get", "processedImage.uri", ["loc", [null, [2, 14], [2, 32]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-image/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "mx-spinner", ["loc", [null, [4, 2], [4, 16]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-image/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "processedImage.uri", ["loc", [null, [1, 6], [1, 24]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [1, 0], [5, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-inventory-reject-modal/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    i18n: _ember['default'].inject.service('i18n'),

    actions: {
      close: function close() {
        this.sendAction('close');
      },

      confirmReject: function confirmReject() {
        var rejectReason = this.get('rejectionDetails');
        this.sendAction('confirmReject', rejectReason);
        this.sendAction('close');
      }
    }
  });
});
define("goods-gateway/components/vp-inventory-reject-modal/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 4
            },
            "end": {
              "line": 18,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-inventory-reject-modal/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["vp-inventory-reject-modal.cancel"], [], ["loc", [null, [17, 6], [17, 46]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 20,
              "column": 4
            },
            "end": {
              "line": 25,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-inventory-reject-modal/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["vp-inventory-reject-modal.confirm"], [], ["loc", [null, [24, 6], [24, 47]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-inventory-reject-modal/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "class", "reject-modal-dialog");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "button-row align-right");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [3]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
        morphs[1] = dom.createMorphAt(element1, 1, 1);
        morphs[2] = dom.createMorphAt(element1, 3, 3);
        return morphs;
      },
      statements: [["inline", "textarea", [], ["class", "text-input", "value", ["subexpr", "@mut", [["get", "rejectionDetails", ["loc", [null, [5, 12], [5, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "id", "rejection-details", "placeholder", ["subexpr", "t", ["vp-inventory-reject-modal.reasonPrompt"], [], ["loc", [null, [7, 18], [7, 62]]], 0, 0]], ["loc", [null, [3, 4], [8, 6]]], 0, 0], ["block", "mx-button", [], ["id", "cancel-reject-modal-dialog", "action", "close", "secondary", true], 0, null, ["loc", [null, [12, 4], [18, 18]]]], ["block", "mx-button", [], ["id", "confirm-reject-modal-dialog", "action", "confirmReject"], 1, null, ["loc", [null, [20, 4], [25, 18]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-inventory-row/component', ['exports', 'ember', 'goods-gateway/utils/money-converter'], function (exports, _ember, _goodsGatewayUtilsMoneyConverter) {
  exports['default'] = _ember['default'].Component.extend({
    authorization: _ember['default'].inject.service('authorization'),
    flashMessages: _ember['default'].inject.service(),
    money: _ember['default'].inject.service('money'),
    i18n: _ember['default'].inject.service(),

    tagName: 'tr',
    classNames: ['item'],
    classNameBindings: ['hasSellPriceBeenUpdated:sell-price-updated', 'hasSellPriceError:sell-price-error', 'isSellPriceOutdated:sell-price-outdated'],

    sellPrice: _ember['default'].computed.alias('item.offers.firstObject.sellPrice.amount'),
    sellPriceCurrencyCode: _ember['default'].computed.alias('item.offers.firstObject.sellPrice.currencyCode'),
    hasSellPriceError: _ember['default'].computed.alias('item.offers.firstObject.sellPrice.hasError'),
    hasSellPriceBeenUpdated: _ember['default'].computed.alias('item.offers.firstObject.sellPrice.hasBeenUpdated'),
    isSellPriceOutdated: _ember['default'].computed.alias('item.offers.firstObject.sellPrice.outdated'),
    isStickyPrice: _ember['default'].computed.alias('item.offers.firstObject.isStickyPrice'),
    isApprovalStatusPending: _ember['default'].computed.equal('item.approvalStatus', 'pending'),
    isToolTipDisabled: _ember['default'].computed.and('isApprovalStatusPending', 'authorization.isExternal'),
    _displaySellPrice: null,
    displaySellPrice: _ember['default'].computed('sellPrice', {
      get: function get() {
        var money = this.get('money');
        var sellPrice = this.get('sellPrice');
        var sellPriceCurrencyCode = this.get('sellPriceCurrencyCode');
        return money.toFormattedAmount(sellPrice, sellPriceCurrencyCode);
      },
      set: function set(key, value) {
        return this.set('_displaySellPrice', value);
      }
    }),

    grossRevenue: _ember['default'].computed('displaySellPrice', 'sellPrice', function () {
      var itemCost = this.get('item.offers.firstObject.itemCost.amount');
      var discountAllowancePercentage = this.get('item.offers.firstObject.discountAllowance');
      var freightAllowancePercentage = this.get('item.offers.firstObject.fulfillmentOptions.firstObject.freightAllowance');
      var effectiveShippingCost = this.get('item.offers.firstObject.fulfillmentOptions.firstObject.effectiveShippingCost.amount');
      var totalCost = itemCost * (1 - 0.01 * (discountAllowancePercentage + freightAllowancePercentage)) + effectiveShippingCost;

      var enteredSellPrice = this.get('displaySellPrice');

      if (_goodsGatewayUtilsMoneyConverter['default'].isValidPriceWithCurrencyCode(enteredSellPrice)) {
        return this.get('sellPrice') - totalCost;
      }
      if (_goodsGatewayUtilsMoneyConverter['default'].isValidPrice(enteredSellPrice)) {
        var enteredSellPriceInMinor = _goodsGatewayUtilsMoneyConverter['default'].convertStringToMinor(enteredSellPrice.toString());
        return enteredSellPriceInMinor - totalCost;
      }
      return '';
    }),

    grossRevenuePercentage: _ember['default'].computed('displaySellPrice', 'grossRevenue', function () {
      var enteredSellPrice = this.get('displaySellPrice');
      if (_goodsGatewayUtilsMoneyConverter['default'].isValidPrice(enteredSellPrice)) {
        var grInMajor = _goodsGatewayUtilsMoneyConverter['default'].convertMinorToMajor(this.get('grossRevenue'));
        return grInMajor / enteredSellPrice;
      }
      return this.get('grossRevenue') / this.get('sellPrice');
    }),

    actions: {
      applySellPriceToAll: function applySellPriceToAll() {
        if (!this.get('hasSellPriceError')) {
          this.set('item.isChecked', false);
          this.sendAction('applySellPriceToAllItems', this.get('sellPrice'));
        }
      },
      focusInSellPrice: function focusInSellPrice() {
        this.set('hasSellPriceError', false);
        this.set('hasSellPriceBeenUpdated', false);
        this.set('isSellPriceOutdated', false);
        var displaySellPrice = this.get('displaySellPrice');
        var sellPriceCurrencyCode = this.get('sellPriceCurrencyCode');
        this.set('displaySellPrice', _goodsGatewayUtilsMoneyConverter['default'].convertStringToMajor(displaySellPrice, sellPriceCurrencyCode));
      },
      updateSellPrice: function updateSellPrice() {
        var flashMessages = this.get('flashMessages');
        var money = this.get('money');
        var i18n = this.get('i18n');
        this.set('hasSellPriceError', false);
        this.set('hasSellPriceBeenUpdated', false);
        var sellPriceCurrencyCode = this.get('sellPriceCurrencyCode');
        var oldSellPrice = this.get('sellPrice');
        var displaySellPrice = this.get('displaySellPrice');
        var newSellPrice = _goodsGatewayUtilsMoneyConverter['default'].convertStringToMinor(displaySellPrice, sellPriceCurrencyCode);
        if (isNaN(newSellPrice) || displaySellPrice === "") {
          this.set('hasSellPriceError', true);
          flashMessages.add({
            message: i18n.t('inventory.index.sellPriceFormattingError'),
            type: 'alert-error'
          });
        } else if (newSellPrice === oldSellPrice) {
          this.set('displaySellPrice', money.toFormattedAmount(oldSellPrice, sellPriceCurrencyCode));
        } else {
          this.set('displaySellPrice', money.toFormattedAmount(newSellPrice, sellPriceCurrencyCode));
          this.sendAction('saveItemSellPrice', this.get('item'), newSellPrice);
        }
      }
    }
  });
});
define("goods-gateway/components/vp-inventory-row/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("td");
          dom.setAttribute(el1, "class", "checkbox-column");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          dom.setAttribute(el2, "class", "checkbox-label");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("span");
          dom.setAttribute(el3, "class", "checkbox");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "input", [], ["type", "checkbox", "checked", ["subexpr", "@mut", [["get", "item.isChecked", ["loc", [null, [4, 38], [4, 52]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [4, 6], [4, 54]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 2
            },
            "end": {
              "line": 13,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-image", [], ["image", ["subexpr", "@mut", [["get", "item.images.firstObject", ["loc", [null, [12, 21], [12, 44]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [12, 4], [12, 46]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 20,
                  "column": 8
                },
                "end": {
                  "line": 22,
                  "column": 8
                }
              },
              "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "content.title", ["loc", [null, [21, 10], [21, 27]]], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 22,
                  "column": 8
                },
                "end": {
                  "line": 24,
                  "column": 8
                }
              },
              "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["inventory.index.defaultTitle"], [], ["loc", [null, [23, 10], [23, 46]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 19,
                "column": 6
              },
              "end": {
                "line": 25,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "content.title", ["loc", [null, [20, 14], [20, 27]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [20, 8], [24, 15]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 18,
              "column": 4
            },
            "end": {
              "line": 26,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "link-to", ["product.edit", ["get", "item.productId", ["loc", [null, [19, 32], [19, 46]]], 0, 0, 0, 0], ["subexpr", "query-params", [], ["itemId", ["get", "item.id", ["loc", [null, [19, 68], [19, 75]]], 0, 0, 0, 0]], ["loc", [null, [19, 47], [19, 76]]], 0, 0]], ["class", "edit-button"], 0, null, ["loc", [null, [19, 6], [25, 18]]]]],
        locals: ["content"],
        templates: [child0]
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 43,
              "column": 2
            },
            "end": {
              "line": 51,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "auto-approval-status");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "auto-approval-status");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
          return morphs;
        },
        statements: [["inline", "vp-listing", [], ["status", ["subexpr", "@mut", [["get", "item.autoApprovalStatus", ["loc", [null, [45, 26], [45, 49]]], 0, 0, 0, 0]], [], [], 0, 0], "autoRejectionReasons", ["subexpr", "@mut", [["get", "item.autoRejectionReasons", ["loc", [null, [45, 71], [45, 96]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [45, 6], [45, 98]]], 0, 0], ["inline", "vp-listing", [], ["status", ["subexpr", "@mut", [["get", "item.manualApprovalStatus", ["loc", [null, [49, 26], [49, 51]]], 0, 0, 0, 0]], [], [], 0, 0], "manualRejectionReason", ["subexpr", "@mut", [["get", "item.manualRejectionReason", ["loc", [null, [49, 74], [49, 100]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [49, 6], [49, 102]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-listing", [], ["status", ["subexpr", "@mut", [["get", "item.approvalStatus", ["loc", [null, [52, 24], [52, 43]]], 0, 0, 0, 0]], [], [], 0, 0], "disableTooltip", ["subexpr", "@mut", [["get", "isToolTipDisabled", ["loc", [null, [52, 59], [52, 76]]], 0, 0, 0, 0]], [], [], 0, 0], "autoRejectionReasons", ["subexpr", "@mut", [["get", "item.autoRejectionReasons", ["loc", [null, [52, 98], [52, 123]]], 0, 0, 0, 0]], [], [], 0, 0], "manualRejectionReason", ["subexpr", "@mut", [["get", "item.manualRejectionReason", ["loc", [null, [52, 146], [52, 172]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [52, 4], [52, 174]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child5 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 76,
              "column": 0
            },
            "end": {
              "line": 84,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("td");
          dom.setAttribute(el1, "class", "freight-cost number");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["inventory.index.freightCost"], ["freightCost", ["subexpr", "format-currency", [["get", "item.offers.firstObject.fulfillmentOptions.firstObject.effectiveShippingCost.amount", ["loc", [null, [80, 8], [80, 91]]], 0, 0, 0, 0], ["get", "item.offers.firstObject.fulfillmentOptions.firstObject.effectiveShippingCost.currencyCode", ["loc", [null, [81, 8], [81, 97]]], 0, 0, 0, 0]], [], ["loc", [null, [79, 18], [81, 98]]], 0, 0]], ["loc", [null, [78, 4], [82, 6]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child6 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 88,
                "column": 4
              },
              "end": {
                "line": 95,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "input", [], ["maxlength", 10, "value", ["subexpr", "@mut", [["get", "displaySellPrice", ["loc", [null, [90, 14], [90, 30]]], 0, 0, 0, 0]], [], [], 0, 0], "focus-in", ["subexpr", "action", ["focusInSellPrice"], [], ["loc", [null, [91, 17], [91, 44]]], 0, 0], "focus-out", ["subexpr", "action", ["updateSellPrice"], [], ["loc", [null, [92, 18], [92, 44]]], 0, 0], "class", "text-input"], ["loc", [null, [89, 6], [94, 8]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 95,
                "column": 4
              },
              "end": {
                "line": 97,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["content", "displaySellPrice", ["loc", [null, [96, 12], [96, 32]]], 0, 0, 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 101,
                "column": 4
              },
              "end": {
                "line": 107,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n\n      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var element2 = dom.childAt(fragment, [3]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element1, 'class');
            morphs[1] = dom.createAttrMorph(element2, 'class');
            morphs[2] = dom.createElementMorph(element2);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["mx-icon-lock mx-icon-16 ", ["subexpr", "unless", [["get", "isStickyPrice", ["loc", [null, [102, 52], [102, 65]]], 0, 0, 0, 0], "transparent"], [], ["loc", [null, [102, 43], [102, 81]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "class", ["concat", ["mx-icon-rake mx-icon-16 ", ["subexpr", "unless", [["get", "item.isChecked", ["loc", [null, [105, 52], [105, 66]]], 0, 0, 0, 0], "transparent"], [], ["loc", [null, [105, 43], [105, 82]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["applySellPriceToAll"], [], ["loc", [null, [105, 84], [105, 116]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child3 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 111,
                "column": 4
              },
              "end": {
                "line": 114,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("br");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            morphs[1] = dom.createMorphAt(fragment, 4, 4, contextualElement);
            return morphs;
          },
          statements: [["inline", "format-currency", [["get", "grossRevenue", ["loc", [null, [112, 24], [112, 36]]], 0, 0, 0, 0], ["get", "sellPriceCurrencyCode", ["loc", [null, [112, 37], [112, 58]]], 0, 0, 0, 0]], [], ["loc", [null, [112, 6], [112, 60]]], 0, 0], ["inline", "percentage", [["get", "grossRevenuePercentage", ["loc", [null, [113, 19], [113, 41]]], 0, 0, 0, 0]], ["decimals", 2], ["loc", [null, [113, 6], [113, 54]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 86,
              "column": 0
            },
            "end": {
              "line": 116,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("td");
          dom.setAttribute(el1, "class", "sell-price number");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("td");
          dom.setAttribute(el1, "class", "price-actions");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("td");
          dom.setAttribute(el1, "class", "gross-revenue number");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(fragment, [5]), 1, 1);
          return morphs;
        },
        statements: [["block", "vp-can", ["write_item_sell_price"], [], 0, 1, ["loc", [null, [88, 4], [97, 15]]]], ["block", "vp-can", ["write_default"], [], 2, null, ["loc", [null, [101, 4], [107, 15]]]], ["block", "if", [["get", "sellPrice", ["loc", [null, [111, 10], [111, 19]]], 0, 0, 0, 0]], [], 3, null, ["loc", [null, [111, 4], [114, 11]]]]],
        locals: [],
        templates: [child0, child1, child2, child3]
      };
    })();
    var child7 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 119,
              "column": 2
            },
            "end": {
              "line": 123,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "class", "deal-link");
          dom.setAttribute(el1, "target", "_blank");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("span");
          dom.setAttribute(el2, "class", "mx-icon-link mx-icon-16");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element0, 'href');
          return morphs;
        },
        statements: [["attribute", "href", ["get", "item.buyUrl", ["loc", [null, [120, 48], [120, 59]]], 0, 0, 0, 0], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 125,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-inventory-row/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        dom.setAttribute(el1, "class", "item-image");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "item-title");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "item-brand");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "category");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        dom.setAttribute(el1, "class", "item-sku");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        dom.setAttribute(el1, "class", "listing");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        dom.setAttribute(el1, "class", "item-quantity-on-hand number");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        dom.setAttribute(el1, "class", "msrp number");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        dom.setAttribute(el1, "class", "item-cost number");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element3 = dom.childAt(fragment, [4]);
        var morphs = new Array(13);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element3, [1]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element3, [3]), 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element3, [5]), 1, 1);
        morphs[5] = dom.createMorphAt(dom.childAt(fragment, [6]), 1, 1);
        morphs[6] = dom.createMorphAt(dom.childAt(fragment, [8]), 1, 1);
        morphs[7] = dom.createMorphAt(dom.childAt(fragment, [10]), 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(fragment, [12]), 1, 1);
        morphs[9] = dom.createMorphAt(dom.childAt(fragment, [14]), 1, 1);
        morphs[10] = dom.createMorphAt(fragment, 16, 16, contextualElement);
        morphs[11] = dom.createMorphAt(fragment, 18, 18, contextualElement);
        morphs[12] = dom.createMorphAt(dom.childAt(fragment, [20]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["subexpr", "can", ["write_default"], [], ["loc", [null, [1, 6], [1, 27]]], 0, 0]], [], 0, null, ["loc", [null, [1, 0], [8, 7]]]], ["block", "if", [["get", "item.images.firstObject.imageServiceUri", ["loc", [null, [11, 8], [11, 47]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [11, 2], [13, 9]]]], ["block", "vp-localized-content", [], ["contents", ["subexpr", "@mut", [["get", "item.localizedContents", ["loc", [null, [18, 37], [18, 59]]], 0, 0, 0, 0]], [], [], 0, 0]], 2, null, ["loc", [null, [18, 4], [26, 29]]]], ["content", "item.brand.name", ["loc", [null, [30, 4], [30, 25]]], 0, 0, 0, 0], ["inline", "vp-concatenated-categories", [], ["item", ["subexpr", "@mut", [["get", "item", ["loc", [null, [34, 38], [34, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [34, 4], [34, 44]]], 0, 0], ["content", "item.vendorSku", ["loc", [null, [39, 2], [39, 22]]], 0, 0, 0, 0], ["block", "vp-can", ["read_default"], [], 3, 4, ["loc", [null, [43, 2], [53, 13]]]], ["content", "item.offers.firstObject.quantityOnHand", ["loc", [null, [57, 2], [57, 44]]], 0, 0, 0, 0], ["inline", "t", ["inventory.index.msrp"], ["msrp", ["subexpr", "format-currency", [["get", "item.regionalizedContents.firstObject.msrp.amount", ["loc", [null, [63, 4], [63, 53]]], 0, 0, 0, 0], ["get", "item.regionalizedContents.firstObject.msrp.currencyCode", ["loc", [null, [64, 4], [64, 59]]], 0, 0, 0, 0]], [], ["loc", [null, [62, 9], [64, 60]]], 0, 0]], ["loc", [null, [61, 2], [65, 4]]], 0, 0], ["inline", "t", ["inventory.index.unitPrice"], ["cost", ["subexpr", "format-currency", [["get", "item.offers.firstObject.itemCost.amount", ["loc", [null, [71, 6], [71, 45]]], 0, 0, 0, 0], ["get", "item.offers.firstObject.itemCost.currencyCode", ["loc", [null, [72, 6], [72, 51]]], 0, 0, 0, 0]], [], ["loc", [null, [70, 9], [72, 52]]], 0, 0]], ["loc", [null, [69, 2], [73, 4]]], 0, 0], ["block", "if", [["get", "showFreightColumn", ["loc", [null, [76, 6], [76, 23]]], 0, 0, 0, 0]], [], 5, null, ["loc", [null, [76, 0], [84, 7]]]], ["block", "if", [["subexpr", "can", ["read_default"], [], ["loc", [null, [86, 6], [86, 26]]], 0, 0]], [], 6, null, ["loc", [null, [86, 0], [116, 7]]]], ["block", "if", [["get", "item.buyUrl", ["loc", [null, [119, 8], [119, 19]]], 0, 0, 0, 0]], [], 7, null, ["loc", [null, [119, 2], [123, 9]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6, child7]
    };
  })());
});
define('goods-gateway/components/vp-inventory-table/component', ['exports', 'ember', 'goods-gateway/helpers/is-ship-on-vendor'], function (exports, _ember, _goodsGatewayHelpersIsShipOnVendor) {
  exports['default'] = _ember['default'].Component.extend({
    authorization: _ember['default'].inject.service(),

    // attributes
    tagName: 'section',
    classNames: ['row'],

    // helpers
    allItemsSelected: _ember['default'].computed('items.@each.isChecked', {
      get: function get() {
        return this.get('items').isEvery('isChecked', true);
      },
      set: function set(_key, value) {
        this.get('items').setEach('isChecked', value);
        return value;
      }
    }),

    isShipOnVendor: _ember['default'].computed('items.firstObject.offers.firstObject.fulfillmentOptions.firstObject.fulfillmentMethod', function () {
      var fulfillmentMethod = this.get('items.firstObject.offers.firstObject.fulfillmentOptions.firstObject.fulfillmentMethod');
      return _goodsGatewayHelpersIsShipOnVendor['default'].compute([fulfillmentMethod]);
    }),

    noItemsSelected: _ember['default'].computed.not('_anyItemsSelected'),

    showFreightColumn: _ember['default'].computed('isShipOnVendor', 'authorization.userInfo.permissions', function () {
      return this.get('isShipOnVendor') || this.get('authorization').can('read_default');
    }),

    _anyItemsSelected: _ember['default'].computed('items.@each.isChecked', function () {
      return this.get('items').isAny('isChecked', true);
    }),

    _deselectItemsCallback: function _deselectItemsCallback(items) {
      return function () {
        items.setEach('isChecked', false);
      };
    },

    _selectedItems: _ember['default'].computed.filterBy('items', 'isChecked'),

    actions: {
      applySellPriceToAllItems: function applySellPriceToAllItems(newSellPrice) {
        this.sendAction('applySellPrice', this.get('_selectedItems'), newSellPrice);
      },

      approveItems: function approveItems() {
        var items = this.get('_selectedItems');
        this.sendAction('approve', items, this._deselectItemsCallback(items));
      },

      autoPriceItems: function autoPriceItems() {
        this.sendAction('autoPrice', this.get('_selectedItems'));
      },

      closeRejectionModal: function closeRejectionModal() {
        this.set('isShowingRejectModal', false);
      },

      confirmReject: function confirmReject(rejectReason) {
        var items = this.get('_selectedItems');
        this.sendAction('reject', items, rejectReason, this._deselectItemsCallback(items));
      },

      goToPage: function goToPage(params) {
        this.sendAction('goToPage', params);
      },

      saveItemSellPrice: function saveItemSellPrice(item, newSellPrice) {
        this.sendAction('saveItemSellPrice', item, newSellPrice);
      },

      showRejectModal: function showRejectModal() {
        this.set('isShowingRejectModal', true);
      }
    }
  });
});
define("goods-gateway/components/vp-inventory-table/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 5,
                "column": 8
              },
              "end": {
                "line": 35,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-inventory-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "checkbox-column");
            var el3 = dom.createTextNode("\n              ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("label");
            dom.setAttribute(el3, "class", "checkbox-label");
            var el4 = dom.createTextNode("\n                ");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n                ");
            dom.appendChild(el3, el4);
            var el4 = dom.createElement("span");
            dom.setAttribute(el4, "class", "checkbox");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n              ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "actions");
            dom.setAttribute(el2, "colspan", "12");
            var el3 = dom.createTextNode("\n              ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("button");
            dom.setAttribute(el3, "id", "reject-items");
            var el4 = dom.createTextNode("\n                ");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n              ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n              ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("button");
            dom.setAttribute(el3, "id", "approve-items");
            var el4 = dom.createTextNode("\n                ");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n              ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n              ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("button");
            dom.setAttribute(el3, "id", "auto-price-items");
            var el4 = dom.createTextNode("\n                ");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n              ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var element1 = dom.childAt(element0, [3]);
            var element2 = dom.childAt(element1, [1]);
            var element3 = dom.childAt(element1, [3]);
            var element4 = dom.childAt(element1, [5]);
            var morphs = new Array(13);
            morphs[0] = dom.createMorphAt(dom.childAt(element0, [1, 1]), 1, 1);
            morphs[1] = dom.createAttrMorph(element2, 'disabled');
            morphs[2] = dom.createAttrMorph(element2, 'class');
            morphs[3] = dom.createElementMorph(element2);
            morphs[4] = dom.createMorphAt(element2, 1, 1);
            morphs[5] = dom.createAttrMorph(element3, 'disabled');
            morphs[6] = dom.createAttrMorph(element3, 'class');
            morphs[7] = dom.createElementMorph(element3);
            morphs[8] = dom.createMorphAt(element3, 1, 1);
            morphs[9] = dom.createAttrMorph(element4, 'disabled');
            morphs[10] = dom.createAttrMorph(element4, 'class');
            morphs[11] = dom.createElementMorph(element4);
            morphs[12] = dom.createMorphAt(element4, 1, 1);
            return morphs;
          },
          statements: [["inline", "input", [], ["id", "select-all", "type", "checkbox", "checked", ["subexpr", "@mut", [["get", "allItemsSelected", ["loc", [null, [9, 64], [9, 80]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [9, 16], [9, 82]]], 0, 0], ["attribute", "disabled", ["get", "noItemsSelected", ["loc", [null, [16, 27], [16, 42]]], 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "class", ["concat", ["button ", ["subexpr", "if", [["get", "noItemsSelected", ["loc", [null, [17, 35], [17, 50]]], 0, 0, 0, 0], "is-disabled"], [], ["loc", [null, [17, 30], [17, 66]]], 0, 0], " cautious reject reject-button"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["showRejectModal"], [], ["loc", [null, [18, 16], [18, 44]]], 0, 0], ["inline", "t", ["inventory.index.rejectButton"], [], ["loc", [null, [19, 16], [19, 52]]], 0, 0], ["attribute", "disabled", ["get", "noItemsSelected", ["loc", [null, [22, 27], [22, 42]]], 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "class", ["concat", ["button button-secondary ", ["subexpr", "if", [["get", "noItemsSelected", ["loc", [null, [23, 52], [23, 67]]], 0, 0, 0, 0], "is-disabled"], [], ["loc", [null, [23, 47], [23, 83]]], 0, 0], " approve-button"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["approveItems"], [], ["loc", [null, [24, 16], [24, 41]]], 0, 0], ["inline", "t", ["inventory.index.approveButton"], [], ["loc", [null, [25, 16], [25, 53]]], 0, 0], ["attribute", "disabled", ["get", "noItemsSelected", ["loc", [null, [28, 27], [28, 42]]], 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "class", ["concat", ["button button-secondary ", ["subexpr", "if", [["get", "noItemsSelected", ["loc", [null, [29, 52], [29, 67]]], 0, 0, 0, 0], "is-disabled"], [], ["loc", [null, [29, 47], [29, 83]]], 0, 0], " auto-price-button"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["autoPriceItems"], [], ["loc", [null, [30, 16], [30, 43]]], 0, 0], ["inline", "t", ["inventory.index.autoPriceButton"], [], ["loc", [null, [31, 16], [31, 55]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 38,
                "column": 10
              },
              "end": {
                "line": 42,
                "column": 10
              }
            },
            "moduleName": "goods-gateway/components/vp-inventory-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment(" checkbox ");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 72,
                "column": 10
              },
              "end": {
                "line": 76,
                "column": 10
              }
            },
            "moduleName": "goods-gateway/components/vp-inventory-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            dom.setAttribute(el1, "class", "number");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["inventory.index.freightCostHeader"], [], ["loc", [null, [74, 14], [74, 55]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child3 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 78,
                "column": 10
              },
              "end": {
                "line": 88,
                "column": 10
              }
            },
            "moduleName": "goods-gateway/components/vp-inventory-table/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            dom.setAttribute(el1, "id", "sell-price-header");
            dom.setAttribute(el1, "class", "number sell-price");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            dom.setAttribute(el1, "class", "price-actions");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment(" price actions ");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            dom.setAttribute(el1, "class", "number");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            morphs[1] = dom.createMorphAt(dom.childAt(fragment, [5]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["inventory.index.sellPrice"], [], ["loc", [null, [80, 14], [80, 47]]], 0, 0], ["inline", "t", ["inventory.index.grossRevenue"], [], ["loc", [null, [86, 14], [86, 50]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child4 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 97,
                "column": 8
              },
              "end": {
                "line": 99,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-inventory-table/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "vp-inventory-row", [], ["id", ["subexpr", "@mut", [["get", "item.id", ["loc", [null, [98, 32], [98, 39]]], 0, 0, 0, 0]], [], [], 0, 0], "item", ["subexpr", "@mut", [["get", "item", ["loc", [null, [98, 45], [98, 49]]], 0, 0, 0, 0]], [], [], 0, 0], "saveItemSellPrice", "saveItemSellPrice", "applySellPriceToAllItems", "applySellPriceToAllItems", "showFreightColumn", ["subexpr", "@mut", [["get", "showFreightColumn", ["loc", [null, [98, 158], [98, 175]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [98, 10], [98, 177]]], 0, 0]],
          locals: ["item"],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 108,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-inventory-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("table");
          dom.setAttribute(el1, "id", "items-list");
          dom.setAttribute(el1, "class", "table-lined search-results");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("thead");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("tr");
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "id", "image-header");
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment(" image ");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "class", "item-title");
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "id", "item-sku-header");
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "class", "number");
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "class", "number");
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "class", "number");
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment(" links ");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("tbody");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column align-items-right");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element5 = dom.childAt(fragment, [1]);
          var element6 = dom.childAt(element5, [1]);
          var element7 = dom.childAt(element6, [3]);
          var morphs = new Array(12);
          morphs[0] = dom.createMorphAt(element6, 1, 1);
          morphs[1] = dom.createMorphAt(element7, 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(element7, [5]), 1, 1);
          morphs[3] = dom.createMorphAt(dom.childAt(element7, [7]), 1, 1);
          morphs[4] = dom.createMorphAt(dom.childAt(element7, [9]), 1, 1);
          morphs[5] = dom.createMorphAt(dom.childAt(element7, [11]), 1, 1);
          morphs[6] = dom.createMorphAt(dom.childAt(element7, [13]), 1, 1);
          morphs[7] = dom.createMorphAt(dom.childAt(element7, [15]), 1, 1);
          morphs[8] = dom.createMorphAt(element7, 17, 17);
          morphs[9] = dom.createMorphAt(element7, 19, 19);
          morphs[10] = dom.createMorphAt(dom.childAt(element5, [3]), 1, 1);
          morphs[11] = dom.createMorphAt(dom.childAt(fragment, [3, 1]), 1, 1);
          return morphs;
        },
        statements: [["block", "if", [["subexpr", "can", ["write_default"], [], ["loc", [null, [5, 14], [5, 35]]], 0, 0]], [], 0, null, ["loc", [null, [5, 8], [35, 15]]]], ["block", "if", [["subexpr", "can", ["write_default"], [], ["loc", [null, [38, 16], [38, 37]]], 0, 0]], [], 1, null, ["loc", [null, [38, 10], [42, 17]]]], ["inline", "t", ["inventory.index.title"], [], ["loc", [null, [49, 12], [49, 41]]], 0, 0], ["inline", "t", ["inventory.index.sku"], [], ["loc", [null, [53, 12], [53, 39]]], 0, 0], ["inline", "t", ["inventory.index.status"], [], ["loc", [null, [57, 12], [57, 42]]], 0, 0], ["inline", "t", ["inventory.index.quantityOnHand"], [], ["loc", [null, [61, 12], [61, 50]]], 0, 0], ["inline", "t", ["inventory.index.msrpHeader"], [], ["loc", [null, [65, 12], [65, 46]]], 0, 0], ["inline", "t", ["inventory.index.unitPriceHeader"], [], ["loc", [null, [69, 12], [69, 51]]], 0, 0], ["block", "if", [["get", "showFreightColumn", ["loc", [null, [72, 16], [72, 33]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [72, 10], [76, 17]]]], ["block", "if", [["subexpr", "can", ["read_default"], [], ["loc", [null, [78, 16], [78, 36]]], 0, 0]], [], 3, null, ["loc", [null, [78, 10], [88, 17]]]], ["block", "each", [["get", "items", ["loc", [null, [97, 16], [97, 21]]], 0, 0, 0, 0]], [], 4, null, ["loc", [null, [97, 8], [99, 17]]]], ["inline", "mx-paginator", [], ["action", "goToPage", "meta", ["subexpr", "@mut", [["get", "items.meta", ["loc", [null, [105, 46], [105, 56]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [105, 8], [105, 58]]], 0, 0]],
        locals: [],
        templates: [child0, child1, child2, child3, child4]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 108,
              "column": 2
            },
            "end": {
              "line": 112,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-inventory-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["inventory.index.noResults"], [], ["loc", [null, [110, 6], [110, 39]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 115,
              "column": 0
            },
            "end": {
              "line": 120,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-inventory-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-inventory-reject-modal", [], ["confirmReject", "confirmReject", "close", "closeRejectionModal"], ["loc", [null, [116, 2], [119, 4]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 121,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-inventory-table/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 1, 1);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "items", ["loc", [null, [2, 8], [2, 13]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [2, 2], [112, 9]]]], ["block", "mx-modal", [], ["open", ["subexpr", "@mut", [["get", "isShowingRejectModal", ["loc", [null, [115, 17], [115, 37]]], 0, 0, 0, 0]], [], [], 0, 0], "title", ["subexpr", "t", ["vp-inventory-reject-modal.title"], [], ["loc", [null, [115, 44], [115, 81]]], 0, 0]], 2, null, ["loc", [null, [115, 0], [120, 13]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define('goods-gateway/components/vp-item-editor/attribute/component', ['exports', 'ember', 'ember-simple-uuid', 'goods-gateway/config/environment'], function (exports, _ember, _emberSimpleUuid, _goodsGatewayConfigEnvironment) {

  var DEFAULT_LOCALE = 'en_US';

  var component = _ember['default'].Component.extend({
    // args
    attributeOption: null,
    attributeDelegate: null,

    // lifecycle
    init: function init() {
      this._super.apply(this, arguments);
      this.set('inputId', (0, _emberSimpleUuid['default'])());
    },

    didReceiveAttrs: function didReceiveAttrs() {
      this._super.apply(this, arguments);

      var nameId = this.get('attributeOption.value');
      var valueId = this.get('attributeDelegate').get(nameId);

      if (valueId) {
        this.set('selectedValue', valueId);
      }

      var customValue = this.get('attributeDelegate').getLocalizedContentValue(nameId, DEFAULT_LOCALE);
      if (customValue) {
        this.set('customValue', customValue);
      }
    },

    // helpers
    customValue: '',
    selectedValue: '',

    showCustomField: _ember['default'].computed('attributeOption.canBeCustom', 'attributeOption.options.length', 'selectedValue', function () {
      var canBeCustom = this.get('attributeOption.canBeCustom');
      var hasOnlyOneOption = this.get('hasOnlyOneOption');
      var isPresent = _ember['default'].isPresent(this.get('selectedValue'));
      if (_goodsGatewayConfigEnvironment['default'].featureFlags.customAttributes) {
        return canBeCustom && (hasOnlyOneOption || isPresent);
      }
      return canBeCustom && hasOnlyOneOption;
    }),

    shouldShowSelector: _ember['default'].computed('attributeOption.canBeCustom', 'hasOnlyOneOption', function () {
      return !this.get('attributeOption.canBeCustom') || !this.get('hasOnlyOneOption');
    }),

    hasOnlyOneOption: _ember['default'].computed('attributeOption.options.length', function () {
      return this.get('attributeOption.options.length') === 1;
    }),

    // dynamically set/unset the attrValueId along with custom value when there's only one option
    _processSingleOptionCustomValue: function _processSingleOptionCustomValue() {
      var customValue = this.get('customValue');

      if (_ember['default'].isPresent(customValue)) {
        var valueId = this.get('attributeOption.options.firstObject.value');
        this._setSelectionValueId(valueId);

        var attributeNameId = this.get('attributeOption.value');
        this.get('attributeDelegate').setLocalizedContent(attributeNameId, DEFAULT_LOCALE, customValue);
      } else {
        this._setSelectionValueId(null);
      }
    },

    _observeCustomValue: _ember['default'].observer('customValue', function () {
      var attributeNameId = this.get('attributeOption.value');
      var customValue = this.get('customValue');

      if (this.get('hasOnlyOneOption')) {
        return this._processSingleOptionCustomValue();
      } else {
        if (_goodsGatewayConfigEnvironment['default'].featureFlags.customAttributes) {
          if (_ember['default'].isPresent(customValue)) {
            this.get('attributeDelegate').setLocalizedContent(attributeNameId, DEFAULT_LOCALE, customValue);
          } else {
            this.get('attributeDelegate').removeLocalizedContent(attributeNameId, DEFAULT_LOCALE);
          }
        } else {
          this.get('attributeDelegate').setLocalizedContent(attributeNameId, DEFAULT_LOCALE, customValue);
        }
      }
    }),

    _observeSelection: _ember['default'].observer('selectedValue', function () {
      this._setSelectionValueId(this.get('selectedValue'));
    }),

    _setSelectionValueId: function _setSelectionValueId(valueId) {
      var attributeNameId = this.get('attributeOption.value');
      var delegate = this.get('attributeDelegate');
      delegate.set(attributeNameId, valueId);
    }
  });

  exports['default'] = component;
});
define("goods-gateway/components/vp-item-editor/attribute/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-item-editor/attribute/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-select", [], ["options", ["subexpr", "@mut", [["get", "attributeOption.options", ["loc", [null, [3, 12], [3, 35]]], 0, 0, 0, 0]], [], [], 0, 0], "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [4, 10], [4, 14]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "selectedValue", "t", ["subexpr", "@mut", [["get", "attributeOption.label", ["loc", [null, [6, 6], [6, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", ["subexpr", "@mut", [["get", "attributeOption.value", ["loc", [null, [7, 12], [7, 33]]], 0, 0, 0, 0]], [], [], 0, 0], "softRequired", ["subexpr", "@mut", [["get", "attributeOption.isRequired", ["loc", [null, [8, 17], [8, 43]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [2, 2], [9, 4]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 0
            },
            "end": {
              "line": 19,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-item-editor/attribute/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-field", [], ["model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [14, 10], [14, 14]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "customValue", "inputId", ["subexpr", "@mut", [["get", "inputId", ["loc", [null, [16, 12], [16, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "t", ["subexpr", "t", ["vp-item-editor.customValue"], ["name", ["get", "attributeOption.label", ["loc", [null, [17, 43], [17, 64]]], 0, 0, 0, 0]], ["loc", [null, [17, 6], [17, 65]]], 0, 0]], ["loc", [null, [13, 2], [18, 4]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-item-editor/attribute/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "shouldShowSelector", ["loc", [null, [1, 6], [1, 24]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [1, 0], [10, 7]]]], ["block", "if", [["get", "showCustomField", ["loc", [null, [12, 6], [12, 21]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [12, 0], [19, 7]]]], ["content", "yield", ["loc", [null, [21, 0], [21, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-item-editor/attributes/component', ['exports', 'ember', 'goods-gateway/models/attribute-delegate', 'goods-gateway/constants/groupon-variant-categories'], function (exports, _ember, _goodsGatewayModelsAttributeDelegate, _goodsGatewayConstantsGrouponVariantCategories) {

  var attributeDelegate = _goodsGatewayModelsAttributeDelegate['default'].create({});

  var isPublicFacing = function isPublicFacing(variantCategory) {
    return !_goodsGatewayConstantsGrouponVariantCategories.GROUPON_VARIANT_CATEGORIES.includes(variantCategory.get('id'));
  };

  exports['default'] = _ember['default'].Component.extend({
    // args
    selectedItems: [],

    // helpers
    uniqueSetAttributes: _ember['default'].computed.filterBy('_attributeOptions', 'canBeVariation'),
    otherAttributes: _ember['default'].computed.filterBy('_attributeOptions', 'canBeVariation', false),

    attributeDelegate: _ember['default'].computed('selectedItems.[]', function () {
      var items = this.get('selectedItems');
      attributeDelegate.set('constituents', items);
      return attributeDelegate;
    }),

    _attributeOptions: _ember['default'].computed('selectedItems.firstObject.category.id', function () {
      var category = this.get('selectedItems.firstObject.category');
      return category.get('variantCategories').reduce(function (attributeOptions, MRTA) {
        if (!isPublicFacing(MRTA)) {
          return attributeOptions;
        }

        var MRTAOptions = MRTA.get('values').map(function (value) {
          return {
            label: value.get('localizedContents.firstObject.name'), // purple
            value: value.get('id')
          };
        });

        attributeOptions.pushObject({
          label: MRTA.get('localizedContents.firstObject.name'),
          value: MRTA.get('id'),
          options: MRTAOptions,
          isRequired: MRTA.get('required'),
          canBeCustom: MRTA.get('canBeCustom'),
          canBeVariation: MRTA.get('canBeVariation')
        });

        return attributeOptions;
      }, []);
    })
  });
});
define("goods-gateway/components/vp-item-editor/attributes/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 6,
                "column": 2
              },
              "end": {
                "line": 10,
                "column": 2
              }
            },
            "moduleName": "goods-gateway/components/vp-item-editor/attributes/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("p");
            dom.setAttribute(el1, "class", "error");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["vp-item-editor.invalidSet"], [], ["loc", [null, [8, 6], [8, 39]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 14,
                  "column": 6
                },
                "end": {
                  "line": 21,
                  "column": 6
                }
              },
              "moduleName": "goods-gateway/components/vp-item-editor/attributes/template.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "md-column--1of3");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["inline", "vp-item-editor.attribute", [], ["attributeOption", ["subexpr", "@mut", [["get", "attributeOption", ["loc", [null, [17, 28], [17, 43]]], 0, 0, 0, 0]], [], [], 0, 0], "attributeDelegate", ["subexpr", "@mut", [["get", "attributeDelegate", ["loc", [null, [18, 30], [18, 47]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [16, 10], [19, 12]]], 0, 0]],
            locals: ["attributeOption"],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 12,
                "column": 2
              },
              "end": {
                "line": 23,
                "column": 2
              }
            },
            "moduleName": "goods-gateway/components/vp-item-editor/attributes/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "row");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["block", "each", [["get", "group", ["loc", [null, [14, 14], [14, 19]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [14, 6], [21, 15]]]]],
          locals: ["group"],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 24,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-item-editor/attributes/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h5");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["inline", "t", ["vp-item-editor.distinguishing"], [], ["loc", [null, [3, 4], [3, 41]]], 0, 0], ["block", "if", [["get", "attributeDelegate.errors.attributeUniqueness.length", ["loc", [null, [6, 8], [6, 59]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [6, 2], [10, 9]]]], ["block", "vp-group", [], ["array", ["subexpr", "@mut", [["get", "uniqueSetAttributes", ["loc", [null, [12, 20], [12, 39]]], 0, 0, 0, 0]], [], [], 0, 0], "groupSize", 3], 1, null, ["loc", [null, [12, 2], [23, 15]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 33,
                  "column": 6
                },
                "end": {
                  "line": 40,
                  "column": 6
                }
              },
              "moduleName": "goods-gateway/components/vp-item-editor/attributes/template.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "md-column--1of3");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["inline", "vp-item-editor.attribute", [], ["attributeOption", ["subexpr", "@mut", [["get", "attributeOption", ["loc", [null, [36, 28], [36, 43]]], 0, 0, 0, 0]], [], [], 0, 0], "attributeDelegate", ["subexpr", "@mut", [["get", "attributeDelegate", ["loc", [null, [37, 30], [37, 47]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [35, 10], [38, 12]]], 0, 0]],
            locals: ["attributeOption"],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 31,
                "column": 2
              },
              "end": {
                "line": 42,
                "column": 2
              }
            },
            "moduleName": "goods-gateway/components/vp-item-editor/attributes/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "row");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["block", "each", [["get", "group", ["loc", [null, [33, 14], [33, 19]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [33, 6], [40, 15]]]]],
          locals: ["group"],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 26,
              "column": 0
            },
            "end": {
              "line": 43,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-item-editor/attributes/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h5");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["inline", "t", ["vp-item-editor.supplementary"], [], ["loc", [null, [28, 4], [28, 40]]], 0, 0], ["block", "vp-group", [], ["array", ["subexpr", "@mut", [["get", "otherAttributes", ["loc", [null, [31, 20], [31, 35]]], 0, 0, 0, 0]], [], [], 0, 0], "groupSize", 3], 0, null, ["loc", [null, [31, 2], [42, 15]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-item-editor/attributes/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "uniqueSetAttributes.length", ["loc", [null, [1, 6], [1, 32]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [1, 0], [24, 7]]]], ["block", "if", [["get", "otherAttributes.length", ["loc", [null, [26, 6], [26, 28]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [26, 0], [43, 7]]]], ["content", "yield", ["loc", [null, [45, 0], [45, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-item-editor/component', ['exports', 'ember', 'goods-gateway/constants/country-codes', 'goods-gateway/models/delegate', 'goods-gateway/constants/universal-id-types', 'goods-gateway/constants/units'], function (exports, _ember, _goodsGatewayConstantsCountryCodes, _goodsGatewayModelsDelegate, _goodsGatewayConstantsUniversalIdTypes, _goodsGatewayConstantsUnits) {

  var fulfillmentDelegate = _goodsGatewayModelsDelegate['default'].create({});
  var itemDelegate = _goodsGatewayModelsDelegate['default'].create({});
  var offerDelegate = _goodsGatewayModelsDelegate['default'].create({});
  var regionalizedContentDelegate = _goodsGatewayModelsDelegate['default'].create({});
  var sizeDelegate = _goodsGatewayModelsDelegate['default'].create({});
  var weightDelegate = _goodsGatewayModelsDelegate['default'].create({});

  exports['default'] = _ember['default'].Component.extend({
    // dependencies
    i18n: _ember['default'].inject.service('i18n'),
    authorization: _ember['default'].inject.service('authorization'),

    // args
    selectedItems: [],

    // lifecycle
    init: function init() {
      this._initSelectOptions();
      this._super.apply(this, arguments);
    },

    // helpers
    isSingleItem: _ember['default'].computed.equal('selectedItems.length', 1),

    itemDelegate: _ember['default'].computed('selectedItems.[]', function () {
      var items = this.get('selectedItems');
      itemDelegate.set('constituents', items);
      return itemDelegate;
    }),

    fulfillmentDelegate: _ember['default'].computed('offerDelegate.constituents.[]', function () {
      var selectedFulfillments = this.get('offerDelegate.constituents').map(function (offer) {
        // TODO select based on user input
        return offer.get('fulfillmentOptions.firstObject');
      });
      fulfillmentDelegate.set('constituents', selectedFulfillments);
      return fulfillmentDelegate;
    }),

    offerDelegate: _ember['default'].computed('selectedItems.[]', function () {
      var selectedOffers = this.get('selectedItems').map(function (item) {
        // TODO select these based on user input
        return item.get('offers.firstObject');
      });
      offerDelegate.set('constituents', selectedOffers);
      return offerDelegate;
    }),

    regionalizedContentDelegate: _ember['default'].computed('selectedItems.[]', function () {
      var selectedRegionalizedContents = this.get('selectedItems').map(function (item) {
        // TODO select these based on country-code
        return item.get('regionalizedContents.firstObject');
      });
      regionalizedContentDelegate.set('constituents', selectedRegionalizedContents);
      return regionalizedContentDelegate;
    }),

    sizeDelegate: _ember['default'].computed('itemDelegate.constituents.[]', function () {
      var measurementObjects = this.get('selectedItems').reduce(function (objects, item) {
        objects.pushObject(item.get('height'));
        objects.pushObject(item.get('length'));
        objects.pushObject(item.get('width'));
        objects.pushObject(item.get('packageHeight'));
        objects.pushObject(item.get('packageLength'));
        objects.pushObject(item.get('packageWidth'));
        return objects;
      }, []);
      sizeDelegate.set('constituents', measurementObjects);
      return sizeDelegate;
    }),

    weightDelegate: _ember['default'].computed('itemDelegate.constituents.[]', function () {
      var measurementObjects = this.get('selectedItems').reduce(function (objects, item) {
        objects.pushObject(item.get('weight'));
        objects.pushObject(item.get('packageWeight'));
        return objects;
      }, []);
      weightDelegate.set('constituents', measurementObjects);
      return weightDelegate;
    }),

    _initSelectOptions: function _initSelectOptions() {
      var _this = this;

      var i18n = this.get('i18n');

      this.set('countryOptions', _goodsGatewayConstantsCountryCodes['default'].map(function (code) {
        return {
          label: _this.get('i18n').t('countries.' + code),
          value: code
        };
      }));

      this.set('sizeOptions', _goodsGatewayConstantsUnits.SIZES.map(function (size) {
        return {
          label: _this.get('i18n').t('units.size.' + size),
          value: size
        };
      }));

      this.set('universalIdTypes', _goodsGatewayConstantsUniversalIdTypes['default'].map(function (universalId) {
        return {
          label: i18n.t('constants.universalIdTypes.' + universalId),
          value: universalId
        };
      }));

      this.set('weightOptions', _goodsGatewayConstantsUnits.WEIGHTS.map(function (weight) {
        return {
          label: _this.get('i18n').t('units.weight.' + weight),
          value: weight
        };
      }));
    },

    actions: {
      apply: function apply() {
        this.sendAction('apply');
      }
    }
  });
});
define("goods-gateway/components/vp-item-editor/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-item-editor/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h2");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["vp-product-items.editItemDetails"], [], ["loc", [null, [3, 4], [3, 44]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-item-editor/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h2");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["vp-product-items.bulkVariationEdit"], [], ["loc", [null, [7, 4], [7, 46]]], 0, 0], ["inline", "t", ["vp-product-items.detailsDescription"], [], ["loc", [null, [10, 4], [10, 47]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 19,
              "column": 2
            },
            "end": {
              "line": 63,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-item-editor/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(element0, [5]), 1, 1);
          morphs[3] = dom.createMorphAt(dom.childAt(element0, [7]), 1, 1);
          return morphs;
        },
        statements: [["inline", "vp-field", [], ["softRequired", true, "model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [24, 16], [24, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "vendorSku", "tRoot", "vp-product-items.item", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [27, 27], [27, 39]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [22, 8], [28, 10]]], 0, 0], ["inline", "vp-field", [], ["model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [33, 16], [33, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "modelNumber", "tRoot", "vp-product-items.item", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [36, 27], [36, 39]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [32, 8], [37, 10]]], 0, 0], ["inline", "vp-select", [], ["options", ["subexpr", "@mut", [["get", "universalIdTypes", ["loc", [null, [42, 18], [42, 34]]], 0, 0, 0, 0]], [], [], 0, 0], "model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [43, 16], [43, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "universalId.type", "inputId", "universalIdType", "tRoot", "vp-product-items.item", "softRequired", true, "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [48, 27], [48, 39]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [41, 8], [49, 10]]], 0, 0], ["inline", "vp-field", [], ["softRequired", true, "model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [55, 16], [55, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "universalId.value", "inputId", "universalId", "tRoot", "vp-product-items.item", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [59, 27], [59, 39]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [53, 8], [60, 10]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 336,
              "column": 0
            },
            "end": {
              "line": 338,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-item-editor/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["vp-item-editor.ok"], [], ["loc", [null, [337, 2], [337, 27]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 339,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-item-editor/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "id", "identifiers");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        dom.setAttribute(el2, "class", "instruction");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "id", "offer");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        dom.setAttribute(el2, "class", "instruction");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "id", "attributes");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        dom.setAttribute(el2, "class", "instruction");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "id", "logistics");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        dom.setAttribute(el2, "class", "instruction");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("h5");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("h5");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [2]);
        var element2 = dom.childAt(fragment, [4]);
        var element3 = dom.childAt(element2, [3]);
        var element4 = dom.childAt(fragment, [6]);
        var element5 = dom.childAt(fragment, [8]);
        var element6 = dom.childAt(element5, [3]);
        var element7 = dom.childAt(element5, [5]);
        var element8 = dom.childAt(element5, [7]);
        var element9 = dom.childAt(element8, [1]);
        var element10 = dom.childAt(element9, [3]);
        var element11 = dom.childAt(element8, [3]);
        var element12 = dom.childAt(element11, [3]);
        var morphs = new Array(31);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
        morphs[2] = dom.createMorphAt(element1, 3, 3);
        morphs[3] = dom.createMorphAt(dom.childAt(element1, [5, 1]), 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
        morphs[5] = dom.createMorphAt(dom.childAt(element3, [1]), 1, 1);
        morphs[6] = dom.createMorphAt(dom.childAt(element3, [3]), 1, 1);
        morphs[7] = dom.createMorphAt(dom.childAt(element3, [5]), 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(element3, [7]), 1, 1);
        morphs[9] = dom.createMorphAt(dom.childAt(element3, [9]), 1, 1);
        morphs[10] = dom.createMorphAt(dom.childAt(element4, [1]), 1, 1);
        morphs[11] = dom.createMorphAt(element4, 3, 3);
        morphs[12] = dom.createMorphAt(dom.childAt(element5, [1]), 1, 1);
        morphs[13] = dom.createMorphAt(dom.childAt(element6, [1]), 1, 1);
        morphs[14] = dom.createMorphAt(dom.childAt(element6, [3]), 1, 1);
        morphs[15] = dom.createMorphAt(dom.childAt(element6, [5]), 1, 1);
        morphs[16] = dom.createMorphAt(dom.childAt(element7, [1]), 1, 1);
        morphs[17] = dom.createMorphAt(dom.childAt(element7, [3]), 1, 1);
        morphs[18] = dom.createMorphAt(dom.childAt(element7, [5]), 1, 1);
        morphs[19] = dom.createMorphAt(dom.childAt(element9, [1, 1, 1]), 1, 1);
        morphs[20] = dom.createMorphAt(dom.childAt(element10, [1]), 1, 1);
        morphs[21] = dom.createMorphAt(dom.childAt(element10, [3]), 1, 1);
        morphs[22] = dom.createMorphAt(dom.childAt(element10, [5]), 1, 1);
        morphs[23] = dom.createMorphAt(dom.childAt(element10, [7]), 1, 1);
        morphs[24] = dom.createMorphAt(dom.childAt(element11, [1, 1]), 1, 1);
        morphs[25] = dom.createMorphAt(dom.childAt(element12, [1]), 1, 1);
        morphs[26] = dom.createMorphAt(dom.childAt(element12, [3]), 1, 1);
        morphs[27] = dom.createMorphAt(dom.childAt(element12, [5]), 1, 1);
        morphs[28] = dom.createMorphAt(dom.childAt(element12, [7]), 1, 1);
        morphs[29] = dom.createMorphAt(fragment, 10, 10, contextualElement);
        morphs[30] = dom.createMorphAt(fragment, 12, 12, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "isSingleItem", ["loc", [null, [1, 6], [1, 18]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [1, 0], [12, 7]]]], ["inline", "t", ["vp-product-items.identifiers"], [], ["loc", [null, [16, 4], [16, 40]]], 0, 0], ["block", "if", [["get", "isSingleItem", ["loc", [null, [19, 8], [19, 20]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [19, 2], [63, 9]]]], ["inline", "vp-checkbox", [], ["model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [68, 14], [68, 26]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "isBundle", "tRoot", "vp-product-items.item"], ["loc", [null, [67, 6], [71, 8]]], 0, 0], ["inline", "t", ["vp-product-items.offer"], [], ["loc", [null, [78, 4], [78, 34]]], 0, 0], ["inline", "vp-money-field", [], ["softRequired", true, "model", ["subexpr", "@mut", [["get", "offerDelegate", ["loc", [null, [85, 14], [85, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "itemCost.amount", "inputId", "itemCost", "enabled", ["subexpr", "can", ["write_item_cost"], ["allowExternal", true], ["loc", [null, [88, 16], [88, 58]]], 0, 0], "tRoot", "vp-product-items.item.offers", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [90, 25], [90, 37]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [83, 6], [91, 8]]], 0, 0], ["inline", "vp-money-field", [], ["softRequired", true, "model", ["subexpr", "@mut", [["get", "fulfillmentDelegate", ["loc", [null, [97, 14], [97, 33]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "shippingCost.amount", "inputId", "shippingCost", "enabled", ["subexpr", "can", ["write_item_shipping_cost"], ["allowExternal", true], ["loc", [null, [100, 16], [100, 67]]], 0, 0], "tRoot", "vp-product-items.item.offers.fulfillmentOptions", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [102, 25], [102, 37]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [95, 6], [103, 8]]], 0, 0], ["inline", "vp-field", [], ["type", "number", "model", ["subexpr", "@mut", [["get", "offerDelegate", ["loc", [null, [109, 14], [109, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "quantityOnHand", "enabled", ["subexpr", "can", ["write_item_quantity_on_hand"], ["allowExternal", true], ["loc", [null, [111, 16], [111, 70]]], 0, 0], "tRoot", "vp-product-items.item.offers", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [113, 25], [113, 37]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [107, 6], [114, 8]]], 0, 0], ["inline", "vp-money-field", [], ["model", ["subexpr", "@mut", [["get", "regionalizedContentDelegate", ["loc", [null, [119, 14], [119, 41]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "map.amount", "inputId", "map", "tRoot", "vp-product-items.item.regionalizedContents", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [123, 25], [123, 37]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [118, 6], [124, 8]]], 0, 0], ["inline", "vp-money-field", [], ["softRequired", true, "model", ["subexpr", "@mut", [["get", "regionalizedContentDelegate", ["loc", [null, [130, 14], [130, 41]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "msrp.amount", "inputId", "msrp", "tRoot", "vp-product-items.item.regionalizedContents", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [134, 25], [134, 37]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [128, 6], [135, 8]]], 0, 0], ["inline", "t", ["vp-product-items.attributes"], [], ["loc", [null, [142, 4], [142, 39]]], 0, 0], ["inline", "vp-item-editor.attributes", [], ["selectedItems", ["subexpr", "@mut", [["get", "selectedItems", ["loc", [null, [146, 18], [146, 31]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [145, 2], [147, 4]]], 0, 0], ["inline", "t", ["vp-product-items.logistics"], [], ["loc", [null, [152, 4], [152, 38]]], 0, 0], ["inline", "vp-field", [], ["model", ["subexpr", "@mut", [["get", "fulfillmentDelegate", ["loc", [null, [158, 14], [158, 33]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "warehouseId", "tRoot", "vp-product-items.item.offers", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [161, 25], [161, 37]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [157, 6], [162, 8]]], 0, 0], ["inline", "vp-checkbox", [], ["model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [167, 14], [167, 26]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "isLtl", "tRoot", "vp-product-items.item"], ["loc", [null, [166, 6], [170, 8]]], 0, 0], ["inline", "vp-checkbox", [], ["model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [175, 14], [175, 26]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "isHazmat", "tRoot", "vp-product-items.item"], ["loc", [null, [174, 6], [178, 8]]], 0, 0], ["inline", "vp-select", [], ["softRequired", true, "options", ["subexpr", "@mut", [["get", "countryOptions", ["loc", [null, [186, 16], [186, 30]]], 0, 0, 0, 0]], [], [], 0, 0], "model", ["subexpr", "@mut", [["get", "offerDelegate", ["loc", [null, [187, 14], [187, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "originCountry", "tRoot", "vp-product-items.item", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [190, 25], [190, 37]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [184, 6], [191, 8]]], 0, 0], ["inline", "vp-select", [], ["softRequired", true, "options", ["subexpr", "@mut", [["get", "sizeOptions", ["loc", [null, [197, 16], [197, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", "sizeUnit", "model", ["subexpr", "@mut", [["get", "sizeDelegate", ["loc", [null, [199, 14], [199, 26]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "unit", "tRoot", "vp-product-items", "tKey", "sizeUnit", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [203, 25], [203, 37]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [195, 6], [204, 8]]], 0, 0], ["inline", "vp-select", [], ["softRequired", true, "options", ["subexpr", "@mut", [["get", "weightOptions", ["loc", [null, [210, 16], [210, 29]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", "weightUnit", "model", ["subexpr", "@mut", [["get", "weightDelegate", ["loc", [null, [212, 14], [212, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "unit", "tRoot", "vp-product-items", "tKey", "weightUnit", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [216, 25], [216, 37]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [208, 6], [217, 8]]], 0, 0], ["inline", "t", ["vp-product-items.productMeasurements"], [], ["loc", [null, [226, 12], [226, 56]]], 0, 0], ["inline", "vp-field", [], ["softRequired", true, "model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [235, 18], [235, 30]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "length.value", "inputId", "length", "tRoot", "vp-product-items.item", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [239, 29], [239, 41]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [233, 10], [240, 12]]], 0, 0], ["inline", "vp-field", [], ["softRequired", true, "model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [246, 18], [246, 30]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "width.value", "inputId", "width", "tRoot", "vp-product-items.item", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [250, 29], [250, 41]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [244, 10], [251, 12]]], 0, 0], ["inline", "vp-field", [], ["softRequired", true, "model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [257, 18], [257, 30]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "height.value", "inputId", "height", "tRoot", "vp-product-items.item", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [261, 29], [261, 41]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [255, 10], [262, 12]]], 0, 0], ["inline", "vp-field", [], ["softRequired", true, "model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [268, 18], [268, 30]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "weight.value", "inputId", "weight", "tRoot", "vp-product-items.item", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [272, 29], [272, 41]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [266, 10], [273, 12]]], 0, 0], ["inline", "t", ["vp-product-items.packageMeasurements"], [], ["loc", [null, [281, 10], [281, 54]]], 0, 0], ["inline", "vp-field", [], ["softRequired", true, "model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [289, 18], [289, 30]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "packageLength.value", "inputId", "packageLength", "tRoot", "vp-product-items.item", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [293, 29], [293, 41]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [287, 10], [294, 12]]], 0, 0], ["inline", "vp-field", [], ["softRequired", true, "model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [300, 18], [300, 30]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "packageWidth.value", "inputId", "packageWidth", "tRoot", "vp-product-items.item", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [304, 29], [304, 41]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [298, 10], [305, 12]]], 0, 0], ["inline", "vp-field", [], ["softRequired", true, "model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [311, 18], [311, 30]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "packageHeight.value", "inputId", "packageHeight", "tRoot", "vp-product-items.item", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [315, 29], [315, 41]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [309, 10], [316, 12]]], 0, 0], ["inline", "vp-field", [], ["softRequired", true, "model", ["subexpr", "@mut", [["get", "itemDelegate", ["loc", [null, [322, 18], [322, 30]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "packageWeight.value", "inputId", "packageWeight", "tRoot", "vp-product-items.item", "checkBlankValues", ["subexpr", "@mut", [["get", "isSingleItem", ["loc", [null, [326, 29], [326, 41]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [320, 10], [327, 12]]], 0, 0], ["content", "yield", ["loc", [null, [334, 0], [334, 9]]], 0, 0, 0, 0], ["block", "mx-button", [], ["id", "apply-template", "action", "apply"], 3, null, ["loc", [null, [336, 0], [338, 14]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define('goods-gateway/components/vp-item-validity/component', ['exports', 'ember', 'goods-gateway/utils/aggregate-validation-errors'], function (exports, _ember, _goodsGatewayUtilsAggregateValidationErrors) {
  exports['default'] = _ember['default'].Component.extend({
    // dependencies
    i18n: _ember['default'].inject.service('i18n'),

    // args
    item: null,

    // attributes
    classNames: ['vp-item-validity'],
    classNameBindings: ['isValid:ok:error'],

    // helpers
    isValid: _ember['default'].computed.equal('errors.length', 0),

    errors: _ember['default'].computed('item.validators.@each.isValid', 'item.hasInvalidChildren', function () {
      var _this = this;

      var errors = this._addErrors([], this.get('item'), 'item');

      this.get('item.offers').forEach(function (offer) {
        _this._addErrors(errors, offer, 'item.offers');
        offer.get('fulfillmentOptions').forEach(function (option) {
          _this._addErrors(errors, option, 'item.offers.fulfillmentOptions');
        });
      });

      this.get('item.regionalizedContents').forEach(function (content) {
        _this._addErrors(errors, content, 'item.regionalizedContents');
      });

      return errors;
    }),

    _addErrors: function _addErrors(errors, object, tKey) {
      var _this2 = this;

      (0, _goodsGatewayUtilsAggregateValidationErrors['default'])(object).forEach(function (error) {
        errors.addObject({
          property: _this2.get('i18n').t('vp-product-items.' + tKey + '.' + error.property),
          message: error.messages.get('firstObject')
        });
      });
      return errors;
    }
  });
});
define("goods-gateway/components/vp-item-validity/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 4,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-item-validity/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "mx-icon-accept");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-item-validity/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "mx-icon-exclamation");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 4
            },
            "end": {
              "line": 15,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-item-validity/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          dom.setAttribute(el1, "class", "error");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["vp-item-validity.errorMessage"], ["property", ["subexpr", "@mut", [["get", "error.property", ["loc", [null, [13, 53], [13, 67]]], 0, 0, 0, 0]], [], [], 0, 0], "message", ["subexpr", "@mut", [["get", "error.message", ["loc", [null, [13, 76], [13, 89]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [13, 8], [13, 91]]], 0, 0]],
        locals: ["error"],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-item-validity/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "tooltip");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("ul");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2, 1]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "isValid", ["loc", [null, [1, 6], [1, 13]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [1, 0], [7, 7]]]], ["block", "each", [["get", "errors", ["loc", [null, [11, 12], [11, 18]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [11, 4], [15, 13]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define('goods-gateway/components/vp-layout/component', ['exports', 'ember'], function (exports, _ember) {

  var mobileWidth = 600;
  var inMobileView = function inMobileView() {
    return _ember['default'].$('body').outerWidth() <= mobileWidth;
  };

  exports['default'] = _ember['default'].Component.extend({
    // lifecycle
    init: function init() {
      var listener = _ember['default'].run.bind(this, this._setMargin);
      this.get('_resizeListeners').pushObject(listener);
      _ember['default'].$(window).on('resize', listener);
      this._super.apply(this, arguments);
    },

    didInsertElement: function didInsertElement() {
      this._setMargin();
    },

    willDestroyElement: function willDestroyElement() {
      this.get('_resizeListeners').forEach(function (listener) {
        _ember['default'].$(window).off('resize', null, listener);
      });
    },

    // attributes
    classNames: ['vp-layout'],

    // helpers
    showExtendedNavigation: false,

    _mainContent: function _mainContent() {
      return this.$().find('#main-content');
    },

    _navigation: function _navigation() {
      return this.$().find('#navigation');
    },

    _setMargin: function _setMargin() {
      if (inMobileView()) {
        var height = this._navigation().outerHeight();
        this._mainContent().css({
          'margin-top': height,
          'margin-left': 0
        });
      } else {
        var width = this._navigation().outerWidth();
        this._mainContent().css({
          'margin-top': 0,
          'margin-left': width
        });
      }
    },

    _resizeListeners: []
  });
});
define("goods-gateway/components/vp-layout/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 15,
              "column": 8
            },
            "end": {
              "line": 17,
              "column": 8
            }
          },
          "moduleName": "goods-gateway/components/vp-layout/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["vp-layout.termsOfUse"], [], ["loc", [null, [16, 10], [16, 38]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-layout/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "page-content");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "main-content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("main");
        dom.setAttribute(el3, "class", "row main");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("footer");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("a");
        dom.setAttribute(el5, "href", "https://www.groupon.com/privacy");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [3]);
        var element2 = dom.childAt(element1, [3]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(element0, 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [3]), 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element2, [5, 1]), 1, 1);
        return morphs;
      },
      statements: [["inline", "vp-navigation", [], ["showExtendedNavigation", ["subexpr", "@mut", [["get", "showExtendedNavigation", ["loc", [null, [2, 41], [2, 63]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [2, 2], [2, 66]]], 0, 0], ["content", "yield", ["loc", [null, [6, 6], [6, 15]]], 0, 0, 0, 0], ["inline", "t", ["app.footer.copyright"], [], ["loc", [null, [11, 8], [11, 36]]], 0, 0], ["block", "link-to", ["docs.terms-of-use"], [], 0, null, ["loc", [null, [15, 8], [17, 20]]]], ["inline", "t", ["vp-layout.privacyPolicy"], [], ["loc", [null, [22, 10], [22, 41]]], 0, 0]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-link-field/component', ['exports', 'goods-gateway/constants/regexes', 'goods-gateway/components/vp-field/component'], function (exports, _goodsGatewayConstantsRegexes, _goodsGatewayComponentsVpFieldComponent) {
  exports['default'] = _goodsGatewayComponentsVpFieldComponent['default'].extend({
    focusOut: function focusOut() {
      this._super.apply(this, arguments);

      var value = this.get('value');
      if (value && !value.match(_goodsGatewayConstantsRegexes.URL_PREFIX_REGEX)) {
        this.set('value', 'http://' + value);
      }
    },
    layoutName: 'components/vp-field'
  });
});
define('goods-gateway/components/vp-listing/component', ['exports', 'ember'], function (exports, _ember) {

  var colorMapping = {
    active: 'green',
    approved: 'green',
    content_approved: 'green',
    content_rejected: 'red',
    contracted: 'green',
    failed: 'red',
    market_data_pending: 'yellow',
    'new': 'yellow',
    pending: 'yellow',
    pending_review: 'yellow',
    rejected: 'red'
  };

  exports['default'] = _ember['default'].Component.extend({
    // dependencies
    i18n: _ember['default'].inject.service('i18n'),

    // attributes
    classNames: ['vp-listing'],

    // helpers
    bubbleColor: _ember['default'].computed('status', function () {
      return colorMapping[this.get('status')];
    }),

    // there can only be 1 reason for manual rejections
    // there can be multiple reasons for auto approval rejections
    rejectionReasons: _ember['default'].computed('autoRejectionReasons', 'manualRejectionReason', 'notes', function () {
      var autoRejectionReasons = this.get('autoRejectionReasons');
      var i18n = this.get('i18n');
      var reasons = (autoRejectionReasons || []).map(function (reason) {
        return i18n.t('vp-listing-status.autoApproval.rejectReasons.' + reason);
      });
      reasons.push(this.get('manualRejectionReason'));
      reasons.push(this.get('notes'));
      return reasons.filter(Boolean);
    }),

    displayTooltip: _ember['default'].computed('disableTooltip', 'rejectionReasons', function () {
      var isEnabled = _ember['default'].isEmpty(this.get('disableTooltip')) || !this.get('disableTooltip');
      // tooltip should only be displayed if there are reject reasons
      var hasRejectionReasons = this.get('rejectionReasons').length;
      return isEnabled && hasRejectionReasons;
    })

  });
});
define("goods-gateway/components/vp-listing/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 8,
                "column": 6
              },
              "end": {
                "line": 12,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-listing/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("li");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["error ", ["get", "status", ["loc", [null, [9, 27], [9, 33]]], 0, 0, 0, 0], "-notes"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["content", "reason", ["loc", [null, [10, 10], [10, 20]]], 0, 0, 0, 0]],
          locals: ["reason"],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 15,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-listing/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("ul");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element1, 'class');
          morphs[1] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["tooltip ", ["get", "status", ["loc", [null, [6, 24], [6, 30]]], 0, 0, 0, 0], "-tooltip"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "each", [["get", "rejectionReasons", ["loc", [null, [8, 14], [8, 30]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [8, 6], [12, 15]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-listing/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [0]);
        var morphs = new Array(3);
        morphs[0] = dom.createAttrMorph(element2, 'class');
        morphs[1] = dom.createMorphAt(element2, 1, 1);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["mx-dot ", ["get", "bubbleColor", ["loc", [null, [1, 21], [1, 32]]], 0, 0, 0, 0], " state ", ["get", "status", ["loc", [null, [1, 43], [1, 49]]], 0, 0, 0, 0], " approvalStatus"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", [["subexpr", "concat", ["vp-listing-status.", ["get", "status", ["loc", [null, [2, 35], [2, 41]]], 0, 0, 0, 0]], [], ["loc", [null, [2, 6], [2, 42]]], 0, 0]], [], ["loc", [null, [2, 2], [2, 44]]], 0, 0], ["block", "if", [["get", "displayTooltip", ["loc", [null, [5, 6], [5, 20]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [5, 0], [15, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-loading-spinner/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    classNames: ['vp-loading-spinner']
  });
});
define("goods-gateway/components/vp-loading-spinner/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-loading-spinner/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("img");
        dom.setAttribute(el1, "class", "spinner");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(1);
        morphs[0] = dom.createAttrMorph(element0, 'src');
        return morphs;
      },
      statements: [["attribute", "src", ["subexpr", "asset", ["images/mx-loading.gif"], [], ["loc", [null, [null, null], [1, 42]]], 0, 0], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-localized-content/component', ['exports', 'ember', 'goods-gateway/utils/content-for-locale'], function (exports, _ember, _goodsGatewayUtilsContentForLocale) {
  exports['default'] = _ember['default'].Component.extend({
    tagName: '',
    i18n: _ember['default'].inject.service(),
    content: _ember['default'].computed('contents', function () {
      var locale = this.get('i18n.locale');
      return (0, _goodsGatewayUtilsContentForLocale['default'])(locale, this.get('contents'));
    })
  });
});
define("goods-gateway/components/vp-localized-content/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-localized-content/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "yield", [["get", "content", ["loc", [null, [1, 8], [1, 15]]], 0, 0, 0, 0]], [], ["loc", [null, [1, 0], [1, 17]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-login-background/component', ['exports', 'ember'], function (exports, _ember) {

  var IMAGE_RATIO = 1.5;

  exports['default'] = _ember['default'].Component.extend({
    // attributes
    classNames: ['vp-login-background'],
    classNameBindings: ['_wider:wider:taller'],

    // lifecycles
    init: function init() {
      var listener = _ember['default'].run.bind(this, this._handleResize);
      this.get('_imageListeners').pushObject(listener);
      _ember['default'].$(window).on('resize', listener);

      this._handleResize();
      this._super.apply(this, arguments);
    },

    willDestroyElement: function willDestroyElement() {
      this.get('_imageListeners').forEach(function (listener) {
        _ember['default'].$(window).off('resize', null, listener);
      });
    },

    // helpers
    _handleResize: function _handleResize() {
      var height = _ember['default'].$(document).height();
      var width = _ember['default'].$(document).width();
      var ratio = width / height;
      var wider = ratio > IMAGE_RATIO;
      this.set('_wider', wider);
    },

    _imageListeners: [],

    _wider: false
  });
});
define("goods-gateway/components/vp-login-background/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-login-background/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("img");
        dom.setAttribute(el1, "alt", "business");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createAttrMorph(element0, 'src');
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        return morphs;
      },
      statements: [["attribute", "src", ["subexpr", "asset", ["images/apothecary.jpg"], [], ["loc", [null, [null, null], [2, 39]]], 0, 0], 0, 0, 0, 0], ["content", "yield", ["loc", [null, [6, 0], [6, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-money-field/component', ['exports', 'ember', 'goods-gateway/constants/currencies'], function (exports, _ember, _goodsGatewayConstantsCurrencies) {
  exports['default'] = _ember['default'].Component.extend({
    // args
    checkBlankValues: true,
    currencyCode: 'USD',
    disabled: false,
    enabled: true,
    errorKey: _ember['default'].computed.alias('key'),
    explicitErrors: null,
    immediateErrors: false,
    inputId: null,
    key: null,
    model: null,
    required: false,
    showLabel: true,
    softRequired: false,
    step: 'any',
    tKey: _ember['default'].computed.alias('key'),
    tRoot: null,
    validityModel: _ember['default'].computed.alias('model'),

    // lifecycle
    init: function init() {
      _ember['default'].defineProperty(this, 'majorAmount', _ember['default'].computed('model.' + this.get('key'), {
        get: function get() {
          var modelReference = this.get('model');
          var fieldPath = this.get('key');
          var amount = modelReference.get(fieldPath);

          if (_ember['default'].isBlank(amount)) {
            return;
          }
          var currencyPref = _goodsGatewayConstantsCurrencies['default'].findBy('label', this.get('currencyCode'));
          return (amount / 100).toFixed(currencyPref.precision);
        },

        set: function set(_key, value) {
          var minorUnits = value === '' ? '' : parseInt(value * 100);
          var modelReference = this.get('model');
          var fieldPath = this.get('key');

          modelReference.set(fieldPath, minorUnits);
          return minorUnits;
        }
      }));
      this._super.apply(this, arguments);
    },

    didReceiveAttrs: function didReceiveAttrs() {
      var inputId = this.get('inputId') || this.get('key');
      this.set('inputElementId', inputId);
    }
  });
});
define("goods-gateway/components/vp-money-field/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-money-field/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-field", [], ["key", "majorAmount", "explicitErrors", ["subexpr", "@mut", [["get", "explicitErrors", ["loc", [null, [3, 17], [3, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "validityModel", ["subexpr", "@mut", [["get", "validityModel", ["loc", [null, [4, 16], [4, 29]]], 0, 0, 0, 0]], [], [], 0, 0], "errorKey", ["subexpr", "@mut", [["get", "errorKey", ["loc", [null, [5, 11], [5, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [6, 8], [6, 12]]], 0, 0, 0, 0]], [], [], 0, 0], "tRoot", ["subexpr", "@mut", [["get", "tRoot", ["loc", [null, [7, 8], [7, 13]]], 0, 0, 0, 0]], [], [], 0, 0], "tKey", ["subexpr", "@mut", [["get", "tKey", ["loc", [null, [8, 7], [8, 11]]], 0, 0, 0, 0]], [], [], 0, 0], "type", "number", "step", "any", "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [11, 11], [11, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", ["subexpr", "@mut", [["get", "inputElementId", ["loc", [null, [12, 10], [12, 24]]], 0, 0, 0, 0]], [], [], 0, 0], "showLabel", ["subexpr", "@mut", [["get", "showLabel", ["loc", [null, [13, 12], [13, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "softRequired", ["subexpr", "@mut", [["get", "softRequired", ["loc", [null, [14, 15], [14, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "disabled", ["subexpr", "@mut", [["get", "disabled", ["loc", [null, [15, 11], [15, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "enabled", ["subexpr", "@mut", [["get", "enabled", ["loc", [null, [16, 10], [16, 17]]], 0, 0, 0, 0]], [], [], 0, 0], "checkBlankValues", ["subexpr", "@mut", [["get", "checkBlankValues", ["loc", [null, [17, 19], [17, 35]]], 0, 0, 0, 0]], [], [], 0, 0], "immediateErrors", ["subexpr", "@mut", [["get", "immediateErrors", ["loc", [null, [18, 18], [18, 33]]], 0, 0, 0, 0]], [], [], 0, 0], "maxlength", 15], ["loc", [null, [1, 0], [20, 2]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-navigation/component', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  exports['default'] = _ember['default'].Component.extend({
    authorization: _ember['default'].inject.service(),
    config: _goodsGatewayConfigEnvironment['default'],
    session: _ember['default'].inject.service(),

    // args
    showExtendedNavigation: false,

    // attributes
    classNames: ['vp-navigation'],
    classNameBindings: ['showExtendedNavigation:expand'],
    elementId: 'navigation',
    tagName: 'nav',

    // events
    mouseEnter: function mouseEnter() {
      this.set('showExtendedNavigation', true);
    },

    mouseLeave: function mouseLeave() {
      this.set('showExtendedNavigation', false);
    },

    // helpers
    externalLinks: _goodsGatewayConfigEnvironment['default'].externalLinks,
    contractNavigation: _goodsGatewayConfigEnvironment['default'].featureFlags.contractNavigation,
    contractStatsNavigation: _goodsGatewayConfigEnvironment['default'].featureFlags.contractStatsNavigation,

    environment: _goodsGatewayConfigEnvironment['default'].environment,

    displayBulkProductUploadLink: _ember['default'].computed('authorization.isAuthenticated', function () {
      return this.get('authorization.isExternal') || this.get('authorization.isAuthenticated') && _goodsGatewayConfigEnvironment['default'].featureFlags.allowInternalUsersToSeeBulk;
    }),

    toggleExpand: function toggleExpand() {
      this.toggleProperty('showExtendedNavigation');
    },

    actions: {
      logout: function logout() {
        this.get('session').invalidate();
      }
    }
  });
});
define("goods-gateway/components/vp-navigation/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 5,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "class", "logo mx-icon-32 mx-icon-mpetus");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h2");
          dom.setAttribute(el1, "class", "environment");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "environment", ["loc", [null, [10, 4], [10, 19]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 8
              },
              "end": {
                "line": 29,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["vp-navigation.inventory"], [], ["loc", [null, [28, 10], [28, 41]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 33,
                "column": 8
              },
              "end": {
                "line": 35,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["vp-navigation.products"], [], ["loc", [null, [34, 10], [34, 40]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 39,
                "column": 8
              },
              "end": {
                "line": 41,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["vp-navigation.newProduct"], [], ["loc", [null, [40, 10], [40, 42]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child3 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 46,
                  "column": 10
                },
                "end": {
                  "line": 48,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["vp-navigation.bulk"], [], ["loc", [null, [47, 12], [47, 38]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 44,
                "column": 6
              },
              "end": {
                "line": 50,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("li");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["block", "link-to", ["product.upload"], [], 0, null, ["loc", [null, [46, 10], [48, 22]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child4 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 60,
                  "column": 10
                },
                "end": {
                  "line": 62,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["vp-navigation.pricing"], [], ["loc", [null, [61, 12], [61, 41]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 53,
                "column": 4
              },
              "end": {
                "line": 65,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("h2");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n\n      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("ul");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("li");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("        ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3, 1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["vp-navigation.merchandise"], [], ["loc", [null, [55, 8], [55, 41]]], 0, 0], ["block", "link-to", ["price_suggestion"], [], 0, null, ["loc", [null, [60, 10], [62, 22]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child5 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 75,
                    "column": 12
                  },
                  "end": {
                    "line": 77,
                    "column": 12
                  }
                },
                "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("              ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "t", ["vp-navigation.search"], [], ["loc", [null, [76, 14], [76, 42]]], 0, 0]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 73,
                  "column": 8
                },
                "end": {
                  "line": 79,
                  "column": 8
                }
              },
              "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("li");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("          ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["block", "link-to", ["deal"], [], 0, null, ["loc", [null, [75, 12], [77, 24]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 81,
                  "column": 10
                },
                "end": {
                  "line": 83,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["vp-navigation.contracts"], [], ["loc", [null, [82, 12], [82, 43]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 87,
                  "column": 10
                },
                "end": {
                  "line": 89,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["vp-navigation.features"], [], ["loc", [null, [88, 12], [88, 42]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 67,
                "column": 4
              },
              "end": {
                "line": 92,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("h2");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n\n      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("ul");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("li");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("        ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("li");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("        ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [3]);
            var morphs = new Array(4);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
            morphs[3] = dom.createMorphAt(dom.childAt(element0, [5]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["vp-navigation.deals"], [], ["loc", [null, [69, 8], [69, 35]]], 0, 0], ["block", "vp-can", ["read_default"], [], 0, null, ["loc", [null, [73, 8], [79, 19]]]], ["block", "link-to", ["contract"], ["id", "nav-to-contracts"], 1, null, ["loc", [null, [81, 10], [83, 22]]]], ["block", "link-to", ["feature"], ["id", "nav-to-features"], 2, null, ["loc", [null, [87, 10], [89, 22]]]]],
          locals: [],
          templates: [child0, child1, child2]
        };
      })();
      var child6 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 118,
                "column": 8
              },
              "end": {
                "line": 120,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["vp-navigation.approvalStats"], [], ["loc", [null, [119, 10], [119, 45]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child7 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 126,
                    "column": 12
                  },
                  "end": {
                    "line": 128,
                    "column": 12
                  }
                },
                "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("              ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "t", ["vp-navigation.contracts"], [], ["loc", [null, [127, 14], [127, 45]]], 0, 0]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 124,
                  "column": 8
                },
                "end": {
                  "line": 130,
                  "column": 8
                }
              },
              "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("li");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("          ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["block", "link-to", ["stats.contracts"], ["id", "nav-to-contract-stats"], 0, null, ["loc", [null, [126, 12], [128, 24]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 123,
                "column": 6
              },
              "end": {
                "line": 131,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "contractStatsNavigation", ["loc", [null, [124, 14], [124, 37]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [124, 8], [130, 15]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child8 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 141,
                  "column": 10
                },
                "end": {
                  "line": 143,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["vp-navigation.vendors"], [], ["loc", [null, [142, 12], [142, 41]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 134,
                "column": 4
              },
              "end": {
                "line": 146,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("h2");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n\n      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("ul");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("li");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("        ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3, 1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["vp-navigation.manage"], [], ["loc", [null, [136, 8], [136, 36]]], 0, 0], ["block", "link-to", ["vendor"], [], 0, null, ["loc", [null, [141, 10], [143, 22]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child9 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 160,
                "column": 4
              },
              "end": {
                "line": 162,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["vp-navigation.logout"], [], ["loc", [null, [161, 6], [161, 34]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 20,
              "column": 2
            },
            "end": {
              "line": 163,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h2");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("ul");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("li");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("li");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("li");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h2");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("ul");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("li");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("a");
          dom.setAttribute(el3, "target", "ciWindow");
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("li");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("a");
          dom.setAttribute(el3, "target", "ciWindow");
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h2");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("ul");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("li");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h2");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("ul");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("li");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("a");
          dom.setAttribute(el3, "target", "_blank");
          dom.setAttribute(el3, "href", "https://ggvendorhelpdesk.groupon.com/support/solutions");
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [3]);
          var element2 = dom.childAt(fragment, [11]);
          var element3 = dom.childAt(element2, [1, 1]);
          var element4 = dom.childAt(element2, [3, 1]);
          var element5 = dom.childAt(fragment, [15]);
          var morphs = new Array(19);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
          morphs[3] = dom.createMorphAt(dom.childAt(element1, [5]), 1, 1);
          morphs[4] = dom.createMorphAt(element1, 7, 7);
          morphs[5] = dom.createMorphAt(fragment, 5, 5, contextualElement);
          morphs[6] = dom.createMorphAt(fragment, 7, 7, contextualElement);
          morphs[7] = dom.createMorphAt(dom.childAt(fragment, [9]), 1, 1);
          morphs[8] = dom.createAttrMorph(element3, 'href');
          morphs[9] = dom.createMorphAt(element3, 1, 1);
          morphs[10] = dom.createAttrMorph(element4, 'href');
          morphs[11] = dom.createMorphAt(element4, 1, 1);
          morphs[12] = dom.createMorphAt(dom.childAt(fragment, [13]), 1, 1);
          morphs[13] = dom.createMorphAt(dom.childAt(element5, [1]), 1, 1);
          morphs[14] = dom.createMorphAt(element5, 3, 3);
          morphs[15] = dom.createMorphAt(fragment, 17, 17, contextualElement);
          morphs[16] = dom.createMorphAt(dom.childAt(fragment, [19]), 1, 1);
          morphs[17] = dom.createMorphAt(dom.childAt(fragment, [21, 1, 1]), 1, 1);
          morphs[18] = dom.createMorphAt(fragment, 23, 23, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["inline", "t", ["vp-navigation.catalog"], [], ["loc", [null, [22, 6], [22, 35]]], 0, 0], ["block", "link-to", ["inventory"], ["id", "nav-to-inventory"], 0, null, ["loc", [null, [27, 8], [29, 20]]]], ["block", "link-to", ["product"], ["id", "nav-to-products"], 1, null, ["loc", [null, [33, 8], [35, 20]]]], ["block", "link-to", ["product.new"], [], 2, null, ["loc", [null, [39, 8], [41, 20]]]], ["block", "if", [["get", "displayBulkProductUploadLink", ["loc", [null, [44, 12], [44, 40]]], 0, 0, 0, 0]], [], 3, null, ["loc", [null, [44, 6], [50, 13]]]], ["block", "vp-can", ["read_default"], [], 4, null, ["loc", [null, [53, 4], [65, 15]]]], ["block", "if", [["get", "contractNavigation", ["loc", [null, [67, 10], [67, 28]]], 0, 0, 0, 0]], [], 5, null, ["loc", [null, [67, 4], [92, 11]]]], ["inline", "t", ["vp-navigation.fulfillment"], [], ["loc", [null, [95, 6], [95, 39]]], 0, 0], ["attribute", "href", ["get", "externalLinks.commerceinterface.orders", ["loc", [null, [100, 18], [100, 56]]], 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", ["vp-navigation.orders"], [], ["loc", [null, [101, 10], [101, 38]]], 0, 0], ["attribute", "href", ["get", "externalLinks.commerceinterface.remittance", ["loc", [null, [106, 18], [106, 60]]], 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", ["vp-navigation.remittance"], [], ["loc", [null, [107, 10], [107, 42]]], 0, 0], ["inline", "t", ["vp-navigation.stats"], [], ["loc", [null, [113, 6], [113, 33]]], 0, 0], ["block", "link-to", ["stats.approvals"], ["id", "nav-to-approval-stats"], 6, null, ["loc", [null, [118, 8], [120, 20]]]], ["block", "vp-can", ["read_default"], [], 7, null, ["loc", [null, [123, 6], [131, 17]]]], ["block", "vp-can", ["write_default"], [], 8, null, ["loc", [null, [134, 4], [146, 15]]]], ["inline", "t", ["vp-navigation.help"], [], ["loc", [null, [149, 6], [149, 32]]], 0, 0], ["inline", "t", ["vp-navigation.support"], [], ["loc", [null, [155, 10], [155, 39]]], 0, 0], ["block", "mx-button", [], ["secondary", true, "id", "logout", "action", "logout"], 9, null, ["loc", [null, [160, 4], [162, 18]]]]],
        locals: [],
        templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9]
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 164,
                "column": 4
              },
              "end": {
                "line": 166,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["vp-navigation.login"], [], ["loc", [null, [165, 6], [165, 33]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 163,
              "column": 2
            },
            "end": {
              "line": 167,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "link-to", ["index"], ["id", "login", "class", "button-secondary button"], 0, null, ["loc", [null, [164, 4], [166, 16]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 171,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-navigation/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h1");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("a");
        dom.setAttribute(el1, "href", "");
        dom.setAttribute(el1, "id", "expand-navigation");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        dom.setAttribute(el2, "class", "icon mx-icon-16 mx-icon-menu");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "navigation-links");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element6 = dom.childAt(fragment, [4]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 1, 1);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createElementMorph(element6);
        morphs[3] = dom.createMorphAt(dom.childAt(fragment, [6]), 1, 1);
        morphs[4] = dom.createMorphAt(fragment, 8, 8, contextualElement);
        return morphs;
      },
      statements: [["block", "link-to", ["index"], ["class", "main-link"], 0, null, ["loc", [null, [2, 2], [5, 14]]]], ["block", "unless", [["subexpr", "eq", [["get", "environment", ["loc", [null, [8, 14], [8, 25]]], 0, 0, 0, 0], "production"], [], ["loc", [null, [8, 10], [8, 39]]], 0, 0]], [], 1, null, ["loc", [null, [8, 0], [12, 11]]]], ["element", "action", [["get", "toggleExpand", ["loc", [null, [14, 43], [14, 55]]], 0, 0, 0, 0]], [], ["loc", [null, [14, 34], [14, 57]]], 0, 0], ["block", "if", [["get", "authorization.isAuthenticated", ["loc", [null, [20, 8], [20, 37]]], 0, 0, 0, 0]], [], 2, 3, ["loc", [null, [20, 2], [167, 9]]]], ["content", "yield", ["loc", [null, [170, 0], [170, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define('goods-gateway/components/vp-page-overlay/component', ['exports', 'ember', 'goods-gateway/mixins/escapable'], function (exports, _ember, _goodsGatewayMixinsEscapable) {
  exports['default'] = _ember['default'].Component.extend(_goodsGatewayMixinsEscapable['default'], {
    // args
    isOpen: false,
    smallContent: false,

    // attributes
    classNames: ['vp-page-overlay'],
    classNameBindings: ['isOpen:open'],

    actions: {
      close: function close() {
        this.set('isOpen', false);
      }
    }
  });
});
define("goods-gateway/components/vp-page-overlay/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-page-overlay/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "id", "page-overlay");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "page-overlay-background");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "page-overlay-container");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "id", "page-overlay-content");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("a");
        dom.setAttribute(el5, "href", "#");
        dom.setAttribute(el5, "class", "close page-overlay-close");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("span");
        dom.setAttribute(el6, "class", "icon-accept mx-icon-close");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(element0, [3, 1]);
        var element3 = dom.childAt(element2, [1]);
        var element4 = dom.childAt(element3, [1]);
        var morphs = new Array(4);
        morphs[0] = dom.createElementMorph(element1);
        morphs[1] = dom.createAttrMorph(element2, 'class');
        morphs[2] = dom.createElementMorph(element4);
        morphs[3] = dom.createMorphAt(element3, 3, 3);
        return morphs;
      },
      statements: [["element", "action", ["close"], ["on", "click"], ["loc", [null, [2, 36], [2, 65]]], 0, 0], ["attribute", "class", ["concat", ["row overlay-content ", ["subexpr", "if", [["get", "smallContent", ["loc", [null, [6, 67], [6, 79]]], 0, 0, 0, 0], "small-content"], [], ["loc", [null, [6, 62], [6, 97]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["close"], [], ["loc", [null, [8, 53], [8, 71]]], 0, 0], ["content", "yield", ["loc", [null, [12, 8], [12, 17]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-paginator/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    classNames: ['vp-paginator', 'md-column'],

    // helpers
    hasPrevPage: _ember['default'].computed('currentPage', 'totalPages', function () {
      return this.get('currentPage') > 1;
    }),
    hasNextPage: _ember['default'].computed('currentPage', 'totalPages', function () {
      return this.get('currentPage') < this.get('totalPages');
    }),
    hasPage: _ember['default'].computed.gt('totalPages', 0),

    actions: {
      nextPage: function nextPage() {
        this.sendAction('action', this.get('currentPage') + 1);
      },
      prevPage: function prevPage() {
        this.sendAction('action', this.get('currentPage') - 1);
      }
    },
    paginationDetails: _ember['default'].computed('currentPage', 'totalPages', function () {
      var totalPageNumber = Math.ceil(this.get('totalPages'));
      return this.get('i18n').t('app.paginationDetails', { current: this.get('currentPage'), total: totalPageNumber });
    })
  });
});
define("goods-gateway/components/vp-paginator/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 2
            },
            "end": {
              "line": 6,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-paginator/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "id", "prev-page");
          dom.setAttribute(el1, "class", "button-secondary pagination-button icon-prev");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createElementMorph(element1);
          return morphs;
        },
        statements: [["element", "action", ["prevPage"], [], ["loc", [null, [4, 77], [4, 98]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 2
            },
            "end": {
              "line": 12,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-paginator/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "id", "pagination-details");
          dom.setAttribute(el1, "class", "md-column align-center");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "paginationDetails", ["loc", [null, [10, 6], [10, 27]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 14,
              "column": 2
            },
            "end": {
              "line": 17,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-paginator/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "id", "next-page");
          dom.setAttribute(el1, "class", "button-secondary pagination-button icon-next");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createElementMorph(element0);
          return morphs;
        },
        statements: [["element", "action", ["nextPage"], [], ["loc", [null, [15, 77], [15, 98]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-paginator/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row clear-padding");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column clear-padding");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column clear-padding align-right");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [0]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
        morphs[1] = dom.createMorphAt(element2, 3, 3);
        morphs[2] = dom.createMorphAt(dom.childAt(element2, [5]), 1, 1);
        return morphs;
      },
      statements: [["block", "if", [["get", "hasPrevPage", ["loc", [null, [3, 8], [3, 19]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [3, 2], [6, 9]]]], ["block", "if", [["get", "hasPage", ["loc", [null, [8, 8], [8, 15]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [8, 2], [12, 9]]]], ["block", "if", [["get", "hasNextPage", ["loc", [null, [14, 8], [14, 19]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [14, 2], [17, 9]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define('goods-gateway/components/vp-pricing-activity-row/component', ['exports', 'ember', 'goods-gateway/constants/reject-reasons', 'goods-gateway/constants/override-reasons'], function (exports, _ember, _goodsGatewayConstantsRejectReasons, _goodsGatewayConstantsOverrideReasons) {
  exports['default'] = _ember['default'].Component.extend({
    classNames: ['row'],
    i18n: _ember['default'].inject.service(),
    money: _ember['default'].inject.service(),

    rejectReason: _ember['default'].computed('activityItem.rejectReason', function () {
      var rejectReasons = _goodsGatewayConstantsRejectReasons.INACTIVE_REASONS.concat(_goodsGatewayConstantsRejectReasons.ACTIVE_REASONS);
      return rejectReasons.findBy('value', this.get('activityItem.rejectReason'));
    }),

    overrideReason: _ember['default'].computed('activityItem.overrideReason', function () {
      var overrideReason = _goodsGatewayConstantsOverrideReasons['default'].findBy('value', this.get('activityItem.overrideReason'));
      if (overrideReason) {
        return this.get('i18n').t(overrideReason.label);
      }
      return '';
    }),

    approvalBand: _ember['default'].computed('activityItem.approvalBand', function () {
      var approvalBand = this.get('activityItem.approvalBand');
      if (!approvalBand) {
        return '';
      }

      var lowerBound = this.get('activityItem.approvalBand.lowerBound');
      var upperBound = this.get('activityItem.approvalBand.upperBound');
      var money = this.get('money');
      return this.get('i18n').t('pricingActivity.bandInfo', {
        lowerBound: money.toFormattedAmount(lowerBound.get('amount'), lowerBound.get('currencyCode')),
        upperBound: money.toFormattedAmount(upperBound.get('amount'), upperBound.get('currencyCode'))
      });
    }),

    dealOption: _ember['default'].computed('deal.products', 'activityItem', function () {
      if (!this.get('deal.products')) {
        return;
      }
      return this.get('deal.products').findBy('inventoryProductId', this.get('activityItem.inventoryProductId'));
    })
  });
});
define("goods-gateway/components/vp-pricing-activity-row/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 9,
              "column": 2
            },
            "end": {
              "line": 11,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-activity-row/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "target", "_blank");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element3, 'id');
          morphs[1] = dom.createAttrMorph(element3, 'href');
          morphs[2] = dom.createMorphAt(element3, 0, 0);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", [["get", "deal.id", ["loc", [null, [10, 13], [10, 20]]], 0, 0, 0, 0], "-deal-link"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "href", ["concat", [["subexpr", "permalink", [["get", "deal.slug", ["loc", [null, [10, 68], [10, 77]]], 0, 0, 0, 0]], [], ["loc", [null, [10, 56], [10, 79]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["content", "content.title", ["loc", [null, [10, 81], [10, 98]]], 0, 0, 0, 0]],
        locals: ["content"],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 14,
              "column": 2
            },
            "end": {
              "line": 16,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-activity-row/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "content.title", ["loc", [null, [15, 4], [15, 21]]], 0, 0, 0, 0]],
        locals: ["content"],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 19,
              "column": 2
            },
            "end": {
              "line": 23,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-activity-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["inline", "format-money", [["subexpr", "money-converter", [["get", "activityItem.lowestCompetitorPrice.amount", ["loc", [null, [21, 6], [21, 47]]], 0, 0, 0, 0], ["get", "activityItem.lowestCompetitorPrice.currencyCode", ["loc", [null, [22, 6], [22, 53]]], 0, 0, 0, 0]], [], ["loc", [null, [20, 22], [22, 54]]], 0, 0]], [], ["loc", [null, [20, 7], [22, 56]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 24,
              "column": 2
            },
            "end": {
              "line": 28,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-activity-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["inline", "format-money", [["subexpr", "money-converter", [["get", "activityItem.lowestCompetitorShippingPrice.amount", ["loc", [null, [26, 6], [26, 55]]], 0, 0, 0, 0], ["get", "activityItem.lowestCompetitorShippingPrice.currencyCode", ["loc", [null, [27, 6], [27, 61]]], 0, 0, 0, 0]], [], ["loc", [null, [25, 22], [27, 62]]], 0, 0]], [], ["loc", [null, [25, 7], [27, 64]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 105
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-activity-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["content", "approvalBand", ["loc", [null, [36, 89], [36, 105]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child5 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 38,
              "column": 0
            },
            "end": {
              "line": 46,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-activity-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column fixed-column-width");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column fixed-column-width centered");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("p");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("p");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var element2 = dom.childAt(fragment, [3]);
          var morphs = new Array(7);
          morphs[0] = dom.createAttrMorph(element1, 'id');
          morphs[1] = dom.createAttrMorph(element1, 'data-label');
          morphs[2] = dom.createMorphAt(element1, 1, 1);
          morphs[3] = dom.createAttrMorph(element2, 'id');
          morphs[4] = dom.createAttrMorph(element2, 'data-label');
          morphs[5] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);
          morphs[6] = dom.createMorphAt(dom.childAt(element2, [3]), 0, 0);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", [["get", "activityItem.id", ["loc", [null, [39, 50], [39, 65]]], 0, 0, 0, 0], "-override-reason"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["pricingActivity.overrideReason"], [], ["loc", [null, [39, 97], [39, 135]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["content", "overrideReason", ["loc", [null, [40, 4], [40, 22]]], 0, 0, 0, 0], ["attribute", "id", ["concat", [["get", "activityItem.id", ["loc", [null, [42, 59], [42, 74]]], 0, 0, 0, 0], "-sync-status"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["pricingActivity.syncStatus"], [], ["loc", [null, [42, 102], [42, 136]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", ["pricingActivity.goodsCentralStatus"], ["status", ["subexpr", "@mut", [["get", "activityItem.imStatus", ["loc", [null, [43, 55], [43, 76]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [43, 7], [43, 78]]], 0, 0], ["inline", "t", ["pricingActivity.dealEstateStatus"], ["status", ["subexpr", "@mut", [["get", "activityItem.dmapiStatus", ["loc", [null, [44, 53], [44, 77]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [44, 7], [44, 79]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child6 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 46,
              "column": 0
            },
            "end": {
              "line": 50,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-activity-row/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column fixed-column-width");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element0, 'id');
          morphs[1] = dom.createAttrMorph(element0, 'data-label');
          morphs[2] = dom.createMorphAt(element0, 1, 1);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", [["get", "activityItem.id", ["loc", [null, [47, 50], [47, 65]]], 0, 0, 0, 0], "-reject-reason"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["pricingActivity.rejectReason"], [], ["loc", [null, [47, 95], [47, 131]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", [["get", "rejectReason.label", ["loc", [null, [48, 8], [48, 26]]], 0, 0, 0, 0]], [], ["loc", [null, [48, 4], [48, 28]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-pricing-activity-row/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column fixed-column-width");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("strong");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column fixed-column-width");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column fixed-column-width");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column fixed-column-width");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column numeric");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column fixed-column-width numeric");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column fixed-column-width numeric");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element4 = dom.childAt(fragment, [0]);
        var element5 = dom.childAt(fragment, [2]);
        var element6 = dom.childAt(fragment, [4]);
        var element7 = dom.childAt(fragment, [6]);
        var element8 = dom.childAt(fragment, [8]);
        var element9 = dom.childAt(fragment, [10]);
        var element10 = dom.childAt(fragment, [12]);
        var morphs = new Array(24);
        morphs[0] = dom.createAttrMorph(element4, 'id');
        morphs[1] = dom.createAttrMorph(element4, 'data-label');
        morphs[2] = dom.createMorphAt(dom.childAt(element4, [1]), 0, 0);
        morphs[3] = dom.createMorphAt(dom.childAt(element4, [3]), 0, 0);
        morphs[4] = dom.createAttrMorph(element5, 'id');
        morphs[5] = dom.createAttrMorph(element5, 'data-label');
        morphs[6] = dom.createMorphAt(element5, 1, 1);
        morphs[7] = dom.createAttrMorph(element6, 'id');
        morphs[8] = dom.createAttrMorph(element6, 'data-label');
        morphs[9] = dom.createMorphAt(element6, 1, 1);
        morphs[10] = dom.createAttrMorph(element7, 'id');
        morphs[11] = dom.createAttrMorph(element7, 'data-label');
        morphs[12] = dom.createMorphAt(element7, 1, 1);
        morphs[13] = dom.createAttrMorph(element8, 'id');
        morphs[14] = dom.createAttrMorph(element8, 'data-label');
        morphs[15] = dom.createMorphAt(element8, 1, 1);
        morphs[16] = dom.createMorphAt(element8, 2, 2);
        morphs[17] = dom.createAttrMorph(element9, 'id');
        morphs[18] = dom.createAttrMorph(element9, 'data-label');
        morphs[19] = dom.createMorphAt(element9, 1, 1);
        morphs[20] = dom.createAttrMorph(element10, 'id');
        morphs[21] = dom.createAttrMorph(element10, 'data-label');
        morphs[22] = dom.createMorphAt(element10, 1, 1);
        morphs[23] = dom.createMorphAt(fragment, 14, 14, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["attribute", "id", ["concat", [["get", "activityItem.id", ["loc", [null, [1, 48], [1, 63]]], 0, 0, 0, 0], "-reviewed-by"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["pricingActivity.reviewedBy"], [], ["loc", [null, [1, 91], [1, 125]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["content", "activityItem.reviewedBy", ["loc", [null, [2, 10], [2, 37]]], 0, 0, 0, 0], ["inline", "moment-format", [["get", "activityItem.reviewedAt", ["loc", [null, [3, 21], [3, 44]]], 0, 0, 0, 0], "lll"], [], ["loc", [null, [3, 5], [3, 52]]], 0, 0], ["attribute", "id", ["concat", [["get", "activityItem.id", ["loc", [null, [5, 48], [5, 63]]], 0, 0, 0, 0], "-action"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["pricingActivity.action"], [], ["loc", [null, [5, 86], [5, 116]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["content", "activityItem.status", ["loc", [null, [6, 2], [6, 25]]], 0, 0, 0, 0], ["attribute", "id", ["concat", [["get", "activityItem.id", ["loc", [null, [8, 48], [8, 63]]], 0, 0, 0, 0], "-deal"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["pricingActivity.dealTitle"], [], ["loc", [null, [8, 84], [8, 117]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "vp-localized-content", [], ["contents", ["subexpr", "@mut", [["get", "deal.creativeContents", ["loc", [null, [9, 35], [9, 56]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [9, 2], [11, 27]]]], ["attribute", "id", ["concat", [["get", "activityItem.id", ["loc", [null, [13, 48], [13, 63]]], 0, 0, 0, 0], "-option"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["pricingActivity.optionTitle"], [], ["loc", [null, [13, 86], [13, 121]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "vp-localized-content", [], ["contents", ["subexpr", "@mut", [["get", "dealOption.creativeContents", ["loc", [null, [14, 35], [14, 62]]], 0, 0, 0, 0]], [], [], 0, 0]], 1, null, ["loc", [null, [14, 2], [16, 27]]]], ["attribute", "id", ["concat", [["get", "activityItem.id", ["loc", [null, [18, 37], [18, 52]]], 0, 0, 0, 0], "-lowest-comp"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["pricingActivity.lowestCompPlusShipping"], [], ["loc", [null, [18, 80], [18, 126]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "if", [["get", "activityItem.lowestCompetitorPrice", ["loc", [null, [19, 8], [19, 42]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [19, 2], [23, 9]]]], ["block", "if", [["get", "activityItem.lowestCompetitorShippingPrice", ["loc", [null, [24, 8], [24, 50]]], 0, 0, 0, 0]], [], 3, null, ["loc", [null, [24, 2], [28, 9]]]], ["attribute", "id", ["concat", [["get", "activityItem.id", ["loc", [null, [30, 56], [30, 71]]], 0, 0, 0, 0], "-price"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["pricingActivity.acceptedPrice"], [], ["loc", [null, [30, 93], [30, 130]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "format-money", [["subexpr", "money-converter", [["get", "activityItem.newSellPrice.amount", ["loc", [null, [32, 2], [32, 34]]], 0, 0, 0, 0], ["get", "activityItem.newSellPrice.currencyCode", ["loc", [null, [33, 2], [33, 40]]], 0, 0, 0, 0]], [], ["loc", [null, [31, 17], [33, 41]]], 0, 0]], [], ["loc", [null, [31, 2], [33, 43]]], 0, 0], ["attribute", "id", ["concat", [["get", "activityItem.id", ["loc", [null, [35, 56], [35, 71]]], 0, 0, 0, 0], "-band"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["pricingActivity.bandInfo"], [], ["loc", [null, [35, 92], [35, 124]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "link-to", ["pricing_activity", ["subexpr", "query-params", [], ["deal", ["get", "deal.id", ["loc", [null, [36, 51], [36, 58]]], 0, 0, 0, 0], "reviewer", ""], ["loc", [null, [36, 32], [36, 71]]], 0, 0]], ["target", "_blank"], 4, null, ["loc", [null, [36, 2], [36, 117]]]], ["block", "if", [["get", "showAccepted", ["loc", [null, [38, 6], [38, 18]]], 0, 0, 0, 0]], [], 5, 6, ["loc", [null, [38, 0], [50, 7]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6]
    };
  })());
});
define('goods-gateway/components/vp-pricing-activity-table/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    classNames: ['vp-pricing-activity-table']
  });
});
define("goods-gateway/components/vp-pricing-activity-table/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 4
            },
            "end": {
              "line": 13,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-activity-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column fixed-column-width");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column fixed-column-width");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column fixed-column-width");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column fixed-column-width");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 0, 0);
          morphs[2] = dom.createMorphAt(dom.childAt(fragment, [5]), 0, 0);
          morphs[3] = dom.createMorphAt(dom.childAt(fragment, [7]), 0, 0);
          return morphs;
        },
        statements: [["inline", "t", ["pricingActivity.acceptedPrice"], [], ["loc", [null, [9, 48], [9, 85]]], 0, 0], ["inline", "t", ["pricingActivity.currentBand"], [], ["loc", [null, [10, 48], [10, 83]]], 0, 0], ["inline", "t", ["pricingActivity.overrideReason"], [], ["loc", [null, [11, 48], [11, 86]]], 0, 0], ["inline", "t", ["pricingActivity.syncStatus"], [], ["loc", [null, [12, 48], [12, 82]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 13,
              "column": 4
            },
            "end": {
              "line": 17,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-activity-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column fixed-column-width");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column fixed-column-width");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column fixed-column-width");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 0, 0);
          morphs[2] = dom.createMorphAt(dom.childAt(fragment, [5]), 0, 0);
          return morphs;
        },
        statements: [["inline", "t", ["pricingActivity.rejectedPrice"], [], ["loc", [null, [14, 48], [14, 85]]], 0, 0], ["inline", "t", ["pricingActivity.currentBand"], [], ["loc", [null, [15, 48], [15, 83]]], 0, 0], ["inline", "t", ["pricingActivity.rejectReason"], [], ["loc", [null, [16, 48], [16, 84]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 20,
              "column": 2
            },
            "end": {
              "line": 27,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-activity-table/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-pricing-activity-row", [], ["id", ["subexpr", "@mut", [["get", "activityItem.activity.id", ["loc", [null, [22, 9], [22, 33]]], 0, 0, 0, 0]], [], [], 0, 0], "deal", ["subexpr", "@mut", [["get", "activityItem.deal", ["loc", [null, [23, 11], [23, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "activityItem", ["subexpr", "@mut", [["get", "activityItem.activity", ["loc", [null, [24, 19], [24, 40]]], 0, 0, 0, 0]], [], [], 0, 0], "showAccepted", ["subexpr", "@mut", [["get", "activity.showAccepted", ["loc", [null, [25, 19], [25, 40]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [21, 4], [26, 6]]], 0, 0]],
        locals: ["activityItem"],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-activity-table/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["inline", "t", ["pricingActivity.noActivityFound"], ["activity", ["subexpr", "@mut", [["get", "activity.activity", ["loc", [null, [28, 54], [28, 71]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [28, 7], [28, 73]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-pricing-activity-table/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "responsive-table");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row header-row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column fixed-column-width");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column fixed-column-width");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column fixed-column-width");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column fixed-column-width");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column fixed-column-width");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1]);
        var morphs = new Array(7);
        morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 0, 0);
        morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(element1, [5]), 0, 0);
        morphs[3] = dom.createMorphAt(dom.childAt(element1, [7]), 0, 0);
        morphs[4] = dom.createMorphAt(dom.childAt(element1, [9]), 0, 0);
        morphs[5] = dom.createMorphAt(element1, 11, 11);
        morphs[6] = dom.createMorphAt(element0, 3, 3);
        return morphs;
      },
      statements: [["inline", "t", ["pricingActivity.reviewedInfo"], [], ["loc", [null, [3, 46], [3, 82]]], 0, 0], ["inline", "t", ["pricingActivity.action"], [], ["loc", [null, [4, 46], [4, 76]]], 0, 0], ["inline", "t", ["pricingActivity.dealTitle"], [], ["loc", [null, [5, 46], [5, 79]]], 0, 0], ["inline", "t", ["pricingActivity.optionTitle"], [], ["loc", [null, [6, 46], [6, 81]]], 0, 0], ["inline", "t", ["pricingActivity.lowestCompPlusShipping"], [], ["loc", [null, [7, 46], [7, 92]]], 0, 0], ["block", "if", [["get", "activity.showAccepted", ["loc", [null, [8, 10], [8, 31]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [8, 4], [17, 11]]]], ["block", "each", [["get", "activity.activityItems", ["loc", [null, [20, 10], [20, 32]]], 0, 0, 0, 0]], [], 2, 3, ["loc", [null, [20, 2], [29, 11]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define('goods-gateway/components/vp-pricing-deal-card/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({});
});
define("goods-gateway/components/vp-pricing-deal-card/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 9,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-deal-card/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element1, 'id');
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", [["get", "marketPricingDeal.id", ["loc", [null, [3, 13], [3, 33]]], 0, 0, 0, 0], "-featured-dates"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", ["priceSuggestion.featuredDates"], ["start", ["subexpr", "moment-format", [["get", "featuredWindow.availableAt", ["loc", [null, [5, 29], [5, 55]]], 0, 0, 0, 0], "ll"], [], ["loc", [null, [5, 14], [5, 61]]], 0, 0], "end", ["subexpr", "moment-format", [["get", "featuredWindow.availableUntil", ["loc", [null, [6, 27], [6, 56]]], 0, 0, 0, 0], "ll"], [], ["loc", [null, [6, 12], [6, 62]]], 0, 0]], ["loc", [null, [4, 6], [7, 8]]], 0, 0]],
        locals: ["featuredWindow"],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 2
            },
            "end": {
              "line": 13,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-deal-card/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          dom.setAttribute(el1, "class", "title");
          var el2 = dom.createElement("span");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1, 0]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element0, 'id');
          morphs[1] = dom.createMorphAt(element0, 0, 0);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", [["get", "marketPricingDeal.id", ["loc", [null, [12, 33], [12, 53]]], 0, 0, 0, 0], "-title"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["content", "content.title", ["loc", [null, [12, 63], [12, 80]]], 0, 0, 0, 0]],
        locals: ["content"],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-pricing-deal-card/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [0]);
        var element3 = dom.childAt(element2, [7]);
        var morphs = new Array(6);
        morphs[0] = dom.createAttrMorph(element2, 'id');
        morphs[1] = dom.createMorphAt(element2, 1, 1);
        morphs[2] = dom.createMorphAt(element2, 3, 3);
        morphs[3] = dom.createMorphAt(element2, 5, 5);
        morphs[4] = dom.createAttrMorph(element3, 'id');
        morphs[5] = dom.createMorphAt(element3, 1, 1);
        return morphs;
      },
      statements: [["attribute", "id", ["concat", ["deal-", ["get", "marketPricingDeal.id", ["loc", [null, [1, 16], [1, 36]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "vp-featured-window", [], ["distributionWindows", ["subexpr", "@mut", [["get", "deal.distributionWindows", ["loc", [null, [2, 44], [2, 68]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [2, 2], [9, 25]]]], ["inline", "vp-deal-paused-indicator", [], ["deal", ["subexpr", "@mut", [["get", "deal", ["loc", [null, [10, 34], [10, 38]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [10, 2], [10, 40]]], 0, 0], ["block", "vp-localized-content", [], ["contents", ["subexpr", "@mut", [["get", "deal.creativeContents", ["loc", [null, [11, 35], [11, 56]]], 0, 0, 0, 0]], [], [], 0, 0]], 1, null, ["loc", [null, [11, 2], [13, 27]]]], ["attribute", "id", ["concat", [["get", "marketPricingDeal.id", ["loc", [null, [14, 11], [14, 31]]], 0, 0, 0, 0], "-category"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["content", "categoryName", ["loc", [null, [15, 4], [15, 20]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-pricing-detail-form/component', ['exports', 'ember', 'goods-gateway/utils/option-lookup', 'goods-gateway/utils/money-converter', 'goods-gateway/constants/band-actions'], function (exports, _ember, _goodsGatewayUtilsOptionLookup, _goodsGatewayUtilsMoneyConverter, _goodsGatewayConstantsBandActions) {
  exports['default'] = _ember['default'].Component.extend({
    tagName: 'section',
    classNames: ['vp-pricing-detail-form', 'sm-column--3of4', 'right-panel'],

    //dependencies
    authorization: _ember['default'].inject.service(),

    didReceiveAttrs: function didReceiveAttrs() {
      this._super.apply(this, arguments);
      this.set('optionLookup', _goodsGatewayUtilsOptionLookup['default'].create({
        marketPricingOptions: this.get('marketPricingDeal.options'),
        dealOptions: this.get('itemMasterDeal.deal_options')
      }));
    },
    bandAction: function bandAction() {
      return this.get('marketPricingDeal.bandActionCheckbox.bandActionCheckbox') ? _goodsGatewayConstantsBandActions['default'].UPDATE : _goodsGatewayConstantsBandActions['default'].DELETE;
    },
    anyOptionsSelected: _ember['default'].computed.notEmpty('selectedOptions'),
    noOptionsSelected: _ember['default'].computed.not('anyOptionsSelected'),
    acceptButtonDisabled: _ember['default'].computed('noOptionsSelected', 'invalidOverridePrice', function () {
      return !this.get('authorization').can('write_item_sell_price') || this.get('noOptionsSelected') || this.get('invalidOverridePrice');
    }),

    invalidOverridePrice: _ember['default'].computed('overriddenPrices', function () {
      var currentPrices = this.get('currentPrices');
      return this.get('overriddenPrices').any(function (overriddenPrice) {
        var currentPrice = currentPrices[overriddenPrice.get('inventoryProductId')];
        var overriddenPriceText = overriddenPrice.get('overriddenPrice');
        var sellPriceMinorAmount = currentPrice.get('unitPrice.valueUnscaled');
        var overriddenPriceMinorAmount = _goodsGatewayUtilsMoneyConverter['default'].convertMajorToMinor(overriddenPriceText, currentPrice.get('unitPrice.currencyCode'));
        return !_goodsGatewayUtilsMoneyConverter['default'].isValidPrice(overriddenPriceText) || sellPriceMinorAmount === overriddenPriceMinorAmount;
      });
    }),

    selectedOptions: _ember['default'].computed.filterBy('sortedMarketPricingOptions', 'isChecked', true),
    overriddenPrices: _ember['default'].computed('selectedOptions', 'marketPricingDeal.options.@each.overriddenPrice', function () {
      return this.get('selectedOptions').filter(function (option) {
        return option.get('overriddenPrice') !== undefined;
      });
    }),

    allSelected: _ember['default'].computed('marketPricingDeal.options.@each.isChecked', {
      get: function get() {
        var marketPricingDealOptions = this.get('marketPricingDeal.options');
        return marketPricingDealOptions.isEvery('isChecked', true);
      },
      set: function set(_key, value) {
        var marketPricingDealOptions = this.get('marketPricingDeal.options');
        marketPricingDealOptions.setEach('isChecked', value);
        return value;
      }
    }),

    sortedMarketPricingOptions: _ember['default'].computed.sort('marketPricingDeal.options', function (a, b) {
      var currentPrices = this.get('currentPrices');
      if (!currentPrices) {
        return 0;
      }

      var priceA = currentPrices[a.get('inventoryProductId')];
      var priceB = currentPrices[b.get('inventoryProductId')];
      var sellPriceA = priceA.get('unitPrice.valueUnscaled');
      var sellPriceB = priceB.get('unitPrice.valueUnscaled');

      if (sellPriceA === sellPriceB) {
        var lookup = this.get('optionLookup');
        var itemMasterDealOptionA = lookup.itemMasterOptionByInstanceGin(a.get('inventoryProductId'));
        var itemMasterDealOptionB = lookup.itemMasterOptionByInstanceGin(b.get('inventoryProductId'));
        var costA = itemMasterDealOptionA.get('inventory_item_instance.cost');
        var costB = itemMasterDealOptionB.get('inventory_item_instance.cost');

        if (costA === costB) {
          var lowestCompPriceA = a.get('context.lowestCompetitorPrice.amount') || -1;
          var lowestCompPriceB = b.get('context.lowestCompetitorPrice.amount') || -1;

          return lowestCompPriceA - lowestCompPriceB;
        }

        return costA - costB;
      }

      return sellPriceA - sellPriceB;
    }),

    validationWarnings: _ember['default'].computed('marketPricingDeal.options.@each.validationWarnings', function () {
      return this.get('selectedOptions').map(function (option) {
        return option.get('validationWarnings');
      }).reduce(function (a, b) {
        return a.concat(b);
      }, []).compact().uniq();
    }),

    _anyOptionsOverridden: function _anyOptionsOverridden() {
      return this.get('overriddenPrices').length > 0;
    },

    _overridePriceOnCostGroup: function _overridePriceOnCostGroup(costGroup, amount) {
      var _this = this;

      costGroup.forEach(function (dealOptionInCostGroup) {
        var marketPricingOptionToUpdate = _this.get('optionLookup').marketPricingOptionByInventoryProductId(dealOptionInCostGroup.get('inventory_item_instance.gin'));

        if (marketPricingOptionToUpdate) {
          _this._overridePriceOnMarketPricingOption(marketPricingOptionToUpdate, amount);
        }
      });
    },

    _overridePriceOnMarketPricingOption: function _overridePriceOnMarketPricingOption(marketPricingOption, amount) {
      if (marketPricingOption.get('proposedSellPrice.amount') !== amount) {
        marketPricingOption.set('overriddenPrice', amount);
      } else {
        marketPricingOption.set('overriddenPrice', undefined);
      }
      marketPricingOption.set('isChecked', true);
    },

    _convertMarketPricingOptionPriceToMajor: function _convertMarketPricingOptionPriceToMajor(marketPricingOption) {
      if (marketPricingOption.get('overriddenPrice')) {
        return marketPricingOption.get('overriddenPrice');
      } else {
        return _goodsGatewayUtilsMoneyConverter['default'].convertMinorToMajor(marketPricingOption.get('proposedSellPrice.amount'), marketPricingOption.get('proposedSellPrice.currencyCode'));
      }
    },

    actions: {
      acceptPriceSuggestions: function acceptPriceSuggestions() {
        if (this._anyOptionsOverridden()) {
          this.set('isShowingOverrideModal', true);
        } else {
          this.sendAction('accept', this.get('selectedOptions'), this.bandAction(), '');
        }
      },

      confirmOverride: function confirmOverride(overrideReason) {
        this.set('isShowingOverrideModal', false);
        if (this.get('anyOptionsSelected')) {
          this.sendAction('accept', this.get('selectedOptions'), this.bandAction(), overrideReason);
        }
      },

      cancelOverride: function cancelOverride() {
        this.set('isShowingOverrideModal', false);
      },

      showRejectModal: function showRejectModal() {
        if (this.get('anyOptionsSelected')) {
          this.set('isShowingRejectModal', true);
        }
      },

      confirmReject: function confirmReject(rejectReason) {
        this.set('isShowingRejectModal', false);
        this.sendAction('reject', this.get('selectedOptions'), rejectReason);
      },

      cancelReject: function cancelReject() {
        this.set('isShowingRejectModal', false);
      },

      applyToCostGroup: function applyToCostGroup(marketPricingOption) {
        var dealOption = this.get('optionLookup').itemMasterOptionByInstanceGin(marketPricingOption.get('inventoryProductId'));

        var costGroup = this.get('itemMasterDeal.deal_options').filter(function (deal) {
          return deal.get('inventory_item_instance.cost') === dealOption.get('inventory_item_instance.cost');
        });
        this._overridePriceOnCostGroup(costGroup, this._convertMarketPricingOptionPriceToMajor(marketPricingOption));
      }
    }
  });
});
define("goods-gateway/components/vp-pricing-detail-form/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 8
            },
            "end": {
              "line": 7,
              "column": 8
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-detail-form/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "target", "_blank");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element0, 'id');
          morphs[1] = dom.createAttrMorph(element0, 'href');
          morphs[2] = dom.createMorphAt(element0, 0, 0);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", [["get", "deal.id", ["loc", [null, [6, 19], [6, 26]]], 0, 0, 0, 0], "-deal-link"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "href", ["concat", [["subexpr", "permalink", [["get", "deal.slug", ["loc", [null, [6, 74], [6, 83]]], 0, 0, 0, 0]], [], ["loc", [null, [6, 62], [6, 85]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["content", "content.title", ["loc", [null, [6, 87], [6, 104]]], 0, 0, 0, 0]],
        locals: ["content"],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 6
            },
            "end": {
              "line": 13,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-detail-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "class", "mx-icon-close");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-detail-form/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-pricing-option-card", [], ["id", ["subexpr", "@mut", [["get", "option.inventoryProductId", ["loc", [null, [53, 13], [53, 38]]], 0, 0, 0, 0]], [], [], 0, 0], "currentPriceId", ["subexpr", "@mut", [["get", "option.inventoryProductId", ["loc", [null, [54, 25], [54, 50]]], 0, 0, 0, 0]], [], [], 0, 0], "dealProducts", ["subexpr", "@mut", [["get", "deal.products", ["loc", [null, [55, 23], [55, 36]]], 0, 0, 0, 0]], [], [], 0, 0], "marketPricingOption", ["subexpr", "@mut", [["get", "option", ["loc", [null, [56, 30], [56, 36]]], 0, 0, 0, 0]], [], [], 0, 0], "currentPrices", ["subexpr", "@mut", [["get", "currentPrices", ["loc", [null, [57, 24], [57, 37]]], 0, 0, 0, 0]], [], [], 0, 0], "itemMasterDeal", ["subexpr", "@mut", [["get", "itemMasterDeal", ["loc", [null, [58, 25], [58, 39]]], 0, 0, 0, 0]], [], [], 0, 0], "applyToCostGroup", "applyToCostGroup"], ["loc", [null, [52, 8], [59, 47]]], 0, 0]],
        locals: ["option"],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 76,
              "column": 2
            },
            "end": {
              "line": 81,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-detail-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-pricing-reject-modal", [], ["cancelReject", "cancelReject", "confirmReject", "confirmReject"], ["loc", [null, [77, 4], [80, 6]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 92,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-detail-form/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-pricing-override-modal", [], ["cancelOverride", "cancelOverride", "confirmOverride", "confirmOverride", "overriddenPrices", ["subexpr", "@mut", [["get", "overriddenPrices", ["loc", [null, [87, 23], [87, 39]]], 0, 0, 0, 0]], [], [], 0, 0], "products", ["subexpr", "@mut", [["get", "deal.products", ["loc", [null, [88, 15], [88, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "currentPrices", ["subexpr", "@mut", [["get", "currentPrices", ["loc", [null, [89, 20], [89, 33]]], 0, 0, 0, 0]], [], [], 0, 0], "itemMasterDeal", ["subexpr", "@mut", [["get", "itemMasterDeal", ["loc", [null, [90, 21], [90, 35]]], 0, 0, 0, 0]], [], [], 0, 0], "validationWarnings", ["subexpr", "@mut", [["get", "validationWarnings", ["loc", [null, [91, 25], [91, 43]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [84, 4], [91, 45]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 94,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-pricing-detail-form/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "price-details");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row clear-padding");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column clear-padding");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("h2");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row clear-padding");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row clear-padding");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("h5");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "links row clear-padding");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("a");
        dom.setAttribute(el4, "target", "_blank");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      |\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("a");
        dom.setAttribute(el4, "target", "_blank");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row clear-padding");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "responsive-table striped");
        dom.setAttribute(el3, "id", "price-detail-table");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row header-row");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column checkbox-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("label");
        dom.setAttribute(el6, "class", "checkbox-label");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("span");
        dom.setAttribute(el7, "class", "checkbox");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column md-column--1of5");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row button-row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column--2of3 align-right");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "id", "reject-pricing-suggestions");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "id", "accept-pricing-suggestions");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var element2 = dom.childAt(element1, [1]);
        var element3 = dom.childAt(element2, [1, 1]);
        var element4 = dom.childAt(element1, [3]);
        var element5 = dom.childAt(element4, [1]);
        var element6 = dom.childAt(element4, [3]);
        var element7 = dom.childAt(element6, [1]);
        var element8 = dom.childAt(element6, [3]);
        var element9 = dom.childAt(element1, [5, 1]);
        var element10 = dom.childAt(element9, [1]);
        var element11 = dom.childAt(element1, [7]);
        var element12 = dom.childAt(element11, [3]);
        var element13 = dom.childAt(element12, [1]);
        var element14 = dom.childAt(element12, [3]);
        var morphs = new Array(33);
        morphs[0] = dom.createAttrMorph(element3, 'id');
        morphs[1] = dom.createMorphAt(element3, 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element2, [3]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element5, [1]), 0, 0);
        morphs[4] = dom.createMorphAt(element5, 3, 3);
        morphs[5] = dom.createAttrMorph(element7, 'id');
        morphs[6] = dom.createAttrMorph(element7, 'href');
        morphs[7] = dom.createMorphAt(element7, 1, 1);
        morphs[8] = dom.createAttrMorph(element8, 'id');
        morphs[9] = dom.createAttrMorph(element8, 'href');
        morphs[10] = dom.createMorphAt(element8, 1, 1);
        morphs[11] = dom.createMorphAt(dom.childAt(element10, [1, 1]), 1, 1);
        morphs[12] = dom.createMorphAt(dom.childAt(element10, [3]), 0, 0);
        morphs[13] = dom.createMorphAt(dom.childAt(element10, [5]), 0, 0);
        morphs[14] = dom.createMorphAt(dom.childAt(element10, [7]), 0, 0);
        morphs[15] = dom.createMorphAt(dom.childAt(element10, [9]), 0, 0);
        morphs[16] = dom.createMorphAt(dom.childAt(element10, [11]), 0, 0);
        morphs[17] = dom.createMorphAt(dom.childAt(element10, [13]), 0, 0);
        morphs[18] = dom.createMorphAt(dom.childAt(element10, [15]), 0, 0);
        morphs[19] = dom.createMorphAt(dom.childAt(element10, [17]), 0, 0);
        morphs[20] = dom.createMorphAt(dom.childAt(element10, [19]), 0, 0);
        morphs[21] = dom.createMorphAt(element9, 3, 3);
        morphs[22] = dom.createMorphAt(dom.childAt(element11, [1]), 1, 1);
        morphs[23] = dom.createAttrMorph(element13, 'disabled');
        morphs[24] = dom.createAttrMorph(element13, 'class');
        morphs[25] = dom.createElementMorph(element13);
        morphs[26] = dom.createMorphAt(element13, 1, 1);
        morphs[27] = dom.createAttrMorph(element14, 'disabled');
        morphs[28] = dom.createAttrMorph(element14, 'class');
        morphs[29] = dom.createElementMorph(element14);
        morphs[30] = dom.createMorphAt(element14, 1, 1);
        morphs[31] = dom.createMorphAt(element1, 9, 9);
        morphs[32] = dom.createMorphAt(element1, 11, 11);
        return morphs;
      },
      statements: [["attribute", "id", ["concat", [["get", "deal.id", ["loc", [null, [4, 16], [4, 23]]], 0, 0, 0, 0], "-deal-title"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "vp-localized-content", [], ["contents", ["subexpr", "@mut", [["get", "deal.creativeContents", ["loc", [null, [5, 41], [5, 62]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [5, 8], [7, 33]]]], ["block", "link-to", ["price_suggestion"], [], 1, null, ["loc", [null, [11, 6], [13, 18]]]], ["inline", "t", ["priceSuggestionDetail.description"], [], ["loc", [null, [18, 10], [18, 51]]], 0, 0], ["inline", "vp-deal-paused-indicator", [], ["deal", ["subexpr", "@mut", [["get", "deal", ["loc", [null, [19, 38], [19, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [19, 6], [19, 44]]], 0, 0], ["attribute", "id", ["concat", [["get", "deal.id", ["loc", [null, [22, 15], [22, 22]]], 0, 0, 0, 0], "-deal-estate-link"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "href", ["concat", [["subexpr", "deal-estate-link", [["get", "deal.id", ["loc", [null, [22, 84], [22, 91]]], 0, 0, 0, 0]], [], ["loc", [null, [22, 65], [22, 93]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", ["priceSuggestionDetail.dealEstateLink"], [], ["loc", [null, [23, 8], [23, 52]]], 0, 0], ["attribute", "id", ["concat", [["get", "deal.id", ["loc", [null, [26, 15], [26, 22]]], 0, 0, 0, 0], "-gc-link"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "href", ["concat", [["subexpr", "gc-link", [["get", "deal.id", ["loc", [null, [26, 66], [26, 73]]], 0, 0, 0, 0]], [], ["loc", [null, [26, 56], [26, 75]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", ["priceSuggestionDetail.gcLink"], [], ["loc", [null, [27, 8], [27, 44]]], 0, 0], ["inline", "input", [], ["id", "select-all-pricing-suggestions", "type", "checkbox", "checked", ["subexpr", "@mut", [["get", "allSelected", ["loc", [null, [36, 80], [36, 91]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [36, 12], [36, 93]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.title"], [], ["loc", [null, [40, 47], [40, 82]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.msrp"], [], ["loc", [null, [41, 31], [41, 65]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.cost"], [], ["loc", [null, [42, 31], [42, 65]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.freightCost"], [], ["loc", [null, [43, 31], [43, 72]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.sellPrice"], [], ["loc", [null, [44, 31], [44, 70]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.unitGR"], [], ["loc", [null, [45, 31], [45, 67]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.proposedSellPrice"], [], ["loc", [null, [46, 31], [46, 78]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.proposedUnitGR"], [], ["loc", [null, [47, 31], [47, 75]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.lowestCompetitorLink"], [], ["loc", [null, [48, 31], [48, 81]]], 0, 0], ["block", "each", [["get", "sortedMarketPricingOptions", ["loc", [null, [51, 14], [51, 40]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [51, 6], [60, 15]]]], ["inline", "vp-checkbox", [], ["model", ["subexpr", "@mut", [["get", "marketPricingDeal.bandActionCheckbox", ["loc", [null, [65, 26], [65, 62]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "bandActionCheckbox", "tRoot", "priceSuggestionDetail"], ["loc", [null, [65, 6], [65, 119]]], 0, 0], ["attribute", "disabled", ["get", "noOptionsSelected", ["loc", [null, [68, 57], [68, 74]]], 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "class", ["concat", ["button button-secondary reject icon-circle-alert ", ["subexpr", "if", [["get", "noOptionsSelected", ["loc", [null, [68, 138], [68, 155]]], 0, 0, 0, 0], "is-disabled"], [], ["loc", [null, [68, 133], [68, 171]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["showRejectModal"], [], ["loc", [null, [68, 173], [68, 201]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.reject"], [], ["loc", [null, [69, 8], [69, 44]]], 0, 0], ["attribute", "disabled", ["get", "acceptButtonDisabled", ["loc", [null, [71, 57], [71, 77]]], 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "class", ["concat", ["button button-primary accept icon-check-circle ", ["subexpr", "if", [["get", "acceptButtonDisabled", ["loc", [null, [71, 139], [71, 159]]], 0, 0, 0, 0], "is-disabled"], [], ["loc", [null, [71, 134], [71, 175]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["acceptPriceSuggestions"], [], ["loc", [null, [71, 177], [71, 212]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.acceptOverride"], [], ["loc", [null, [72, 8], [72, 52]]], 0, 0], ["block", "vp-page-overlay", [], ["isOpen", ["subexpr", "@mut", [["get", "isShowingRejectModal", ["loc", [null, [76, 28], [76, 48]]], 0, 0, 0, 0]], [], [], 0, 0]], 3, null, ["loc", [null, [76, 2], [81, 22]]]], ["block", "vp-page-overlay", [], ["isOpen", ["subexpr", "@mut", [["get", "isShowingOverrideModal", ["loc", [null, [83, 28], [83, 50]]], 0, 0, 0, 0]], [], [], 0, 0]], 4, null, ["loc", [null, [83, 2], [92, 22]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  })());
});
define('goods-gateway/components/vp-pricing-option-card/calculator', ['exports', 'ember', 'goods-gateway/utils/money-converter', 'goods-gateway/constants/fulfillment-method-to-shipping-field', 'goods-gateway/constants/free-shipping-fulfillment-methods', 'goods-gateway/constants/shipping-costs'], function (exports, _ember, _goodsGatewayUtilsMoneyConverter, _goodsGatewayConstantsFulfillmentMethodToShippingField, _goodsGatewayConstantsFreeShippingFulfillmentMethods, _goodsGatewayConstantsShippingCosts) {

  var SALESFORCE_SOURCE_NAME = 'Salesforce';

  exports['default'] = _ember['default'].Object.extend({
    currentPrice: null,
    itemMasterDeal: null,
    itemMasterOption: null,
    marketPricingOption: null,

    costInMinorCurrency: _ember['default'].computed('cost', function () {
      return _goodsGatewayUtilsMoneyConverter['default'].convertMajorToMinor(this.get('cost'), this.get('currentPrice.unitPrice.currencyCode'));
    }),

    cost: _ember['default'].computed('itemMasterOption', function () {
      return this.get('itemMasterOption.inventory_item_instance.cost');
    }),

    msrp: _ember['default'].computed('itemMasterOption', function () {
      return this.get('itemMasterOption.inventory_item_instance.msrp');
    }),

    freightCost: _ember['default'].computed('itemMasterDeal', 'itemMasterOption', function () {
      var cost = 0;
      var inventoryItemInstance = this.get('itemMasterOption.inventory_item_instance');
      if (inventoryItemInstance.get('source_name') === SALESFORCE_SOURCE_NAME) {
        cost = inventoryItemInstance.get('pl_cost');
      } else {
        var fulfillmentMethod = this.get('itemMasterDeal.fulfillment_method');
        var field = _goodsGatewayConstantsFulfillmentMethodToShippingField['default'][fulfillmentMethod];
        if (field) {
          cost = inventoryItemInstance.get(field);
        }
      }
      return cost || 0;
    }),

    freightCostInMinorCurrency: _ember['default'].computed('freightCost', function () {
      return _goodsGatewayUtilsMoneyConverter['default'].convertMajorToMinor(this.get('freightCost'), this.get('currentPrice.unitPrice.currencyCode'));
    }),

    totalCost: _ember['default'].computed('freightCost', 'itemMasterOption', 'itemMasterDeal', function () {
      var productCost = this.get('itemMasterOption.inventory_item_instance.cost');
      var freightCost = this.get('freightCost');

      var refundAllowancePercentage = this.get('itemMasterDeal.percentage_refund_allowance') / 100;
      var freightAllowancePercentage = this.get('itemMasterDeal.contract_term.freight_allowance') / 100;
      return productCost * (1 - (refundAllowancePercentage + freightAllowancePercentage)) + freightCost;
    }),

    currentSellPrice: _ember['default'].computed('currentPrice', function () {
      return _goodsGatewayUtilsMoneyConverter['default'].convertMinorToMajor(this.get('currentPrice.unitPrice.valueUnscaled'), this.get('currentPrice.unitPrice.currencyCode'));
    }),

    shippingCost: _ember['default'].computed('itemMasterOption', function () {
      return this.get('itemMasterOption.inventory_item_instance.shipping_cost');
    }),

    proposedSellPrice: _ember['default'].computed('marketPricingOption', 'marketPricingOption.overriddenPrice', {
      get: function get() {
        return _goodsGatewayUtilsMoneyConverter['default'].convertMinorToMajor(this._getOptionProposedSellAmount(), this.get('marketPricingOption.proposedSellPrice.currencyCode'));
      },
      set: function set(_key, value) {
        var newAmount = this._priceToMinorCurrency(value);
        if (newAmount === this.get('marketPricingOption.proposedSellPrice.amount')) {
          this.set('marketPricingOption.overriddenPrice', undefined);
        } else {
          this.set('marketPricingOption.overriddenPrice', value);
        }
        return value;
      }
    }),

    GR: _ember['default'].computed('currentSellPrice', 'totalCost', function () {
      return this.get('currentSellPrice') - this.get('totalCost');
    }),

    percentageGR: _ember['default'].computed('currentSellPrice', 'GR', function () {
      return this.get('GR') / this.get('currentSellPrice');
    }),

    proposedGR: _ember['default'].computed('proposedSellPrice', 'totalCost', function () {
      return this.get('proposedSellPrice') - this.get('totalCost');
    }),

    proposedPercentageGR: _ember['default'].computed('proposedSellPrice', 'proposedGR', function () {
      return this.get('proposedGR') / this.get('proposedSellPrice');
    }),

    proposedShippingCost: _ember['default'].computed('itemMasterOption', 'proposedSellPrice', function () {
      if (this._fulfillmentHasFreeShipping()) {
        return _goodsGatewayConstantsShippingCosts.FREE_SHIPPING_COST;
      }

      if (this._useProvidedShippingCost()) {
        return this.get('itemMasterOption.inventory_item_instance.shipping_cost');
      }

      if (this._priceEligibleForFreeShipping()) {
        return _goodsGatewayConstantsShippingCosts.FREE_SHIPPING_COST;
      }

      return _goodsGatewayConstantsShippingCosts.DEFAULT_SHIPPING_COST;
    }),

    _fulfillmentHasFreeShipping: function _fulfillmentHasFreeShipping() {
      var fulfillmentMethod = this.get('itemMasterDeal.fulfillment_method');
      return fulfillmentMethod && _goodsGatewayConstantsFreeShippingFulfillmentMethods['default'].indexOf(fulfillmentMethod) !== -1;
    },

    _useProvidedShippingCost: function _useProvidedShippingCost() {
      return this.get('itemMasterOption.inventory_item_instance.shipping_cost') > _goodsGatewayConstantsShippingCosts.DEFAULT_SHIPPING_COST;
    },

    _priceEligibleForFreeShipping: function _priceEligibleForFreeShipping() {
      return this._getOptionProposedSellAmount() >= _goodsGatewayConstantsShippingCosts.SHIPPING_THRESHOLD;
    },

    _getOptionProposedSellAmount: function _getOptionProposedSellAmount() {
      if (this.get('marketPricingOption.overriddenPrice') !== undefined) {
        return this._priceToMinorCurrency(this.get('marketPricingOption.overriddenPrice'));
      } else {
        return this.get('marketPricingOption.proposedSellPrice.amount');
      }
    },

    _priceToMinorCurrency: function _priceToMinorCurrency(value) {
      return _goodsGatewayUtilsMoneyConverter['default'].convertStringToMinor(value, this.get('marketPricingOption.proposedSellPrice.currencyCode'));
    }
  });
});
define('goods-gateway/components/vp-pricing-option-card/component', ['exports', 'ember', 'goods-gateway/components/vp-pricing-option-card/calculator', 'goods-gateway/components/vp-pricing-option-card/validator', 'goods-gateway/utils/option-lookup', 'goods-gateway/utils/money-converter'], function (exports, _ember, _goodsGatewayComponentsVpPricingOptionCardCalculator, _goodsGatewayComponentsVpPricingOptionCardValidator, _goodsGatewayUtilsOptionLookup, _goodsGatewayUtilsMoneyConverter) {
  exports['default'] = _ember['default'].Component.extend({
    //dependencies
    authorization: _ember['default'].inject.service(),

    classNames: ['vp-pricing-option-card', 'row'],
    classNameBindings: ['hasValidationWarnings:validation-warnings'],
    VALID_PRICE_PATTERN: _goodsGatewayUtilsMoneyConverter['default'].VALID_PRICE_PATTERN,
    showAllFields: true,

    didReceiveAttrs: function didReceiveAttrs() {
      this._super.apply(this, arguments);
      this.set('optionLookup', _goodsGatewayUtilsOptionLookup['default'].create({
        dealProducts: this.get('dealProducts'),
        dealOptions: this.get('itemMasterDeal.deal_options')
      }));
    },

    editableSellPrice: _ember['default'].computed('showAllFields', 'marketPricingOption.isChecked', function () {
      return this.get('showAllFields') && this.get('marketPricingOption.isChecked') && this.get('authorization').can('write_item_sell_price');
    }),

    dealProduct: _ember['default'].computed('dealProducts', 'marketPricingOption', function () {
      return this.get('optionLookup').dealProductByInventoryId(this.get('marketPricingOption.inventoryProductId'));
    }),

    itemMasterOption: _ember['default'].computed('itemMasterDeal', 'marketPricingOption', function () {
      return this.get('optionLookup').itemMasterOptionByInstanceGin(this.get('marketPricingOption.inventoryProductId'));
    }),

    calculator: _ember['default'].computed('itemMasterDeal', 'itemMasterOption', 'marketPricingOption', function () {
      return _goodsGatewayComponentsVpPricingOptionCardCalculator['default'].create({
        currentPrice: this.get('currentPrice'),
        itemMasterDeal: this.get('itemMasterDeal'),
        itemMasterOption: this.get('itemMasterOption'),
        marketPricingOption: this.get('marketPricingOption')
      });
    }),

    currentPrice: _ember['default'].computed('currentPrices', function () {
      return this.get('currentPrices')[this.get('currentPriceId')];
    }),

    hasValidationWarnings: _ember['default'].computed('validationWarnings', function () {
      return this.get('validationWarnings').length > 0;
    }),

    validationWarnings: _ember['default'].computed('marketPricingOption.overriddenPrice', 'marketPricingOption.proposedSellPrice', 'currentPrice', 'calculator.costInMinorCurrency', 'calculator.freightCostInMinorCurrency', function () {
      var data = {
        overriddenPrice: _goodsGatewayUtilsMoneyConverter['default'].convertStringToMinor(this.get('marketPricingOption.overriddenPrice'), this.get('marketPricingOption.proposedSellPrice.currencyCode')),
        proposedSellPrice: this.get('marketPricingOption.proposedSellPrice.amount'),
        sellPrice: this.get('currentPrice.unitPrice.valueUnscaled'),
        cost: this.get('calculator.costInMinorCurrency'),
        freight: this.get('calculator.freightCostInMinorCurrency')
      };
      var errors = _goodsGatewayComponentsVpPricingOptionCardValidator['default'].validate(data);
      return errors;
    }),

    validationWarningsChanged: _ember['default'].observer('validationWarnings', function () {
      this.set('marketPricingOption.validationWarnings', this.get('validationWarnings'));
    }),

    actions: {
      focusOnProposedSellPrice: function focusOnProposedSellPrice() {
        _ember['default'].run.next(this, function () {
          if (this.get('marketPricingOption.isChecked')) {
            var proposedSellPriceInput = this.$('#' + this.get('dealProduct.inventoryProductId') + '-proposed-sell-price input');
            proposedSellPriceInput.focus();
          }
        });
      },

      applyToCostGroup: function applyToCostGroup() {
        this.sendAction('applyToCostGroup', this.get('marketPricingOption'));
      },

      clearOverridePrice: function clearOverridePrice() {
        var marketPricingOption = this.get('marketPricingOption');
        marketPricingOption.set('overriddenPrice', undefined);
      }
    }
  });
});
define("goods-gateway/components/vp-pricing-option-card/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-option-card/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column checkbox-column");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          dom.setAttribute(el2, "class", "checkbox-label");
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("span");
          dom.setAttribute(el3, "class", "checkbox");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n  ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element11 = dom.childAt(fragment, [0]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element11, 'id');
          morphs[1] = dom.createAttrMorph(element11, 'data-label');
          morphs[2] = dom.createMorphAt(dom.childAt(element11, [1]), 1, 1);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", [["get", "dealProduct.inventoryProductId", ["loc", [null, [2, 45], [2, 75]]], 0, 0, 0, 0], "-checkbox"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["priceSuggestionDetail.select"], [], ["loc", [null, [2, 100], [2, 136]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "input", [], ["type", "checkbox", "checked", ["subexpr", "@mut", [["get", "marketPricingOption.isChecked", ["loc", [null, [4, 36], [4, 65]]], 0, 0, 0, 0]], [], [], 0, 0], "click", ["subexpr", "action", ["focusOnProposedSellPrice"], [], ["loc", [null, [4, 72], [4, 107]]], 0, 0]], ["loc", [null, [4, 4], [4, 109]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 2
            },
            "end": {
              "line": 12,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-option-card/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "content.title", ["loc", [null, [11, 4], [11, 21]]], 0, 0, 0, 0]],
        locals: ["content"],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 14,
              "column": 0
            },
            "end": {
              "line": 24,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-option-card/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column numeric");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column numeric");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column numeric");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element8 = dom.childAt(fragment, [0]);
          var element9 = dom.childAt(fragment, [2]);
          var element10 = dom.childAt(fragment, [4]);
          var morphs = new Array(9);
          morphs[0] = dom.createAttrMorph(element8, 'id');
          morphs[1] = dom.createAttrMorph(element8, 'data-label');
          morphs[2] = dom.createMorphAt(element8, 1, 1);
          morphs[3] = dom.createAttrMorph(element9, 'id');
          morphs[4] = dom.createAttrMorph(element9, 'data-label');
          morphs[5] = dom.createMorphAt(element9, 1, 1);
          morphs[6] = dom.createAttrMorph(element10, 'id');
          morphs[7] = dom.createAttrMorph(element10, 'data-label');
          morphs[8] = dom.createMorphAt(element10, 1, 1);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", [["get", "dealProduct.inventoryProductId", ["loc", [null, [15, 37], [15, 67]]], 0, 0, 0, 0], "-msrp"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["priceSuggestionDetail.msrp"], [], ["loc", [null, [15, 88], [15, 122]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "format-money", [["get", "calculator.msrp", ["loc", [null, [16, 17], [16, 32]]], 0, 0, 0, 0]], [], ["loc", [null, [16, 2], [16, 34]]], 0, 0], ["attribute", "id", ["concat", [["get", "dealProduct.inventoryProductId", ["loc", [null, [18, 37], [18, 67]]], 0, 0, 0, 0], "-cost"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["priceSuggestionDetail.cost"], [], ["loc", [null, [18, 88], [18, 122]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "format-money", [["get", "calculator.cost", ["loc", [null, [19, 17], [19, 32]]], 0, 0, 0, 0]], [], ["loc", [null, [19, 2], [19, 34]]], 0, 0], ["attribute", "id", ["concat", [["get", "dealProduct.inventoryProductId", ["loc", [null, [21, 37], [21, 67]]], 0, 0, 0, 0], "-freight-cost"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["priceSuggestionDetail.freightCost"], [], ["loc", [null, [21, 96], [21, 137]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "format-money", [["get", "calculator.freightCost", ["loc", [null, [22, 17], [22, 39]]], 0, 0, 0, 0]], [], ["loc", [null, [22, 2], [22, 41]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 29,
              "column": 0
            },
            "end": {
              "line": 34,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-option-card/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column numeric");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("br");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element7 = dom.childAt(fragment, [0]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element7, 'id');
          morphs[1] = dom.createAttrMorph(element7, 'data-label');
          morphs[2] = dom.createMorphAt(element7, 1, 1);
          morphs[3] = dom.createMorphAt(element7, 4, 4);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", [["get", "dealProduct.inventoryProductId", ["loc", [null, [30, 37], [30, 67]]], 0, 0, 0, 0], "-GR"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["priceSuggestionDetail.unitGR"], [], ["loc", [null, [30, 86], [30, 122]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "format-money", [["get", "calculator.GR", ["loc", [null, [31, 17], [31, 30]]], 0, 0, 0, 0]], [], ["loc", [null, [31, 2], [31, 32]]], 0, 0], ["inline", "percentage", [["get", "calculator.percentageGR", ["loc", [null, [32, 15], [32, 38]]], 0, 0, 0, 0]], ["decimals", 2], ["loc", [null, [32, 2], [32, 51]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-option-card/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "input", [], ["value", ["subexpr", "@mut", [["get", "calculator.proposedSellPrice", ["loc", [null, [37, 16], [37, 44]]], 0, 0, 0, 0]], [], [], 0, 0], "type", "text", "required", true, "pattern", ["subexpr", "@mut", [["get", "this.VALID_PRICE_PATTERN", ["loc", [null, [37, 79], [37, 103]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [37, 2], [37, 105]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child5 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-option-card/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "format-money", [["get", "calculator.proposedSellPrice", ["loc", [null, [39, 19], [39, 47]]], 0, 0, 0, 0]], [], ["loc", [null, [39, 4], [39, 49]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child6 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 44,
              "column": 0
            },
            "end": {
              "line": 49,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-option-card/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column numeric");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("br");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element6 = dom.childAt(fragment, [0]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element6, 'id');
          morphs[1] = dom.createAttrMorph(element6, 'data-label');
          morphs[2] = dom.createMorphAt(element6, 1, 1);
          morphs[3] = dom.createMorphAt(element6, 4, 4);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", [["get", "dealProduct.inventoryProductId", ["loc", [null, [45, 37], [45, 67]]], 0, 0, 0, 0], "-proposed-GR"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["priceSuggestionDetail.proposedUnitGR"], [], ["loc", [null, [45, 95], [45, 139]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "format-money", [["get", "calculator.proposedGR", ["loc", [null, [46, 17], [46, 38]]], 0, 0, 0, 0]], [], ["loc", [null, [46, 2], [46, 40]]], 0, 0], ["inline", "percentage", [["get", "calculator.proposedPercentageGR", ["loc", [null, [47, 15], [47, 46]]], 0, 0, 0, 0]], ["decimals", 2], ["loc", [null, [47, 2], [47, 59]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child7 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 56,
                "column": 6
              },
              "end": {
                "line": 61,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-pricing-option-card/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createElement("br");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 2, 2, contextualElement);
            return morphs;
          },
          statements: [["inline", "format-money", [["subexpr", "money-converter", [["get", "marketPricingOption.context.lowestCompetitorShippingPrice.amount", ["loc", [null, [58, 8], [58, 72]]], 0, 0, 0, 0], ["get", "marketPricingOption.context.lowestCompetitorShippingPrice.currencyCode", ["loc", [null, [59, 8], [59, 78]]], 0, 0, 0, 0]], [], ["loc", [null, [57, 21], [59, 79]]], 0, 0]], [], ["loc", [null, [57, 6], [60, 8]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 63,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-option-card/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "target", "_blank");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element5 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element5, 'id');
          morphs[1] = dom.createAttrMorph(element5, 'href');
          morphs[2] = dom.createMorphAt(element5, 1, 1);
          morphs[3] = dom.createMorphAt(element5, 2, 2);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", [["get", "dealProduct.inventoryProductId", ["loc", [null, [52, 11], [52, 41]]], 0, 0, 0, 0], "-lowest-competitor-link"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "href", ["concat", [["get", "marketPricingOption.context.lowestCompetitorUrl", ["loc", [null, [52, 92], [52, 139]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "format-money", [["subexpr", "money-converter", [["get", "marketPricingOption.context.lowestCompetitorPrice.amount", ["loc", [null, [54, 6], [54, 62]]], 0, 0, 0, 0], ["get", "marketPricingOption.context.lowestCompetitorPrice.currencyCode", ["loc", [null, [55, 6], [55, 68]]], 0, 0, 0, 0]], [], ["loc", [null, [53, 19], [55, 69]]], 0, 0]], [], ["loc", [null, [53, 4], [56, 6]]], 0, 0], ["block", "if", [["get", "marketPricingOption.context.lowestCompetitorShippingPrice", ["loc", [null, [56, 12], [56, 69]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [56, 6], [61, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child8 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 65,
              "column": 0
            },
            "end": {
              "line": 74,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-option-card/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column buttons");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("img");
          dom.setAttribute(el3, "id", "clear-override-price-button");
          dom.setAttribute(el3, "class", "pricing-option-card-button");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n  ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("img");
          dom.setAttribute(el3, "id", "apply-to-cost-group-button");
          dom.setAttribute(el3, "class", "pricing-option-card-button");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n  ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [0]);
          var element1 = dom.childAt(element0, [1]);
          var element2 = dom.childAt(element1, [1]);
          var element3 = dom.childAt(element0, [3]);
          var element4 = dom.childAt(element3, [1]);
          var morphs = new Array(10);
          morphs[0] = dom.createAttrMorph(element1, 'id');
          morphs[1] = dom.createElementMorph(element1);
          morphs[2] = dom.createAttrMorph(element2, 'src');
          morphs[3] = dom.createAttrMorph(element2, 'alt');
          morphs[4] = dom.createAttrMorph(element2, 'title');
          morphs[5] = dom.createAttrMorph(element3, 'id');
          morphs[6] = dom.createElementMorph(element3);
          morphs[7] = dom.createAttrMorph(element4, 'src');
          morphs[8] = dom.createAttrMorph(element4, 'alt');
          morphs[9] = dom.createAttrMorph(element4, 'title');
          return morphs;
        },
        statements: [["attribute", "id", ["concat", [["get", "dealProduct.inventoryProductId", ["loc", [null, [67, 45], [67, 75]]], 0, 0, 0, 0], "-clear-override-price"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["clearOverridePrice"], [], ["loc", [null, [67, 7], [67, 38]]], 0, 0], ["attribute", "src", ["subexpr", "asset", ["images/decline.png"], [], ["loc", [null, [null, null], [68, 43]]], 0, 0], 0, 0, 0, 0], ["attribute", "alt", ["subexpr", "t", ["priceSuggestionOptionCard.clearOverridePrice"], [], ["loc", [null, [null, null], [68, 100]]], 0, 0], 0, 0, 0, 0], ["attribute", "title", ["subexpr", "t", ["priceSuggestionOptionCard.clearOverridePrice"], [], ["loc", [null, [null, null], [68, 159]]], 0, 0], 0, 0, 0, 0], ["attribute", "id", ["concat", [["get", "dealProduct.inventoryProductId", ["loc", [null, [70, 43], [70, 73]]], 0, 0, 0, 0], "-apply-to-cost-group"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["applyToCostGroup"], [], ["loc", [null, [70, 7], [70, 36]]], 0, 0], ["attribute", "src", ["subexpr", "asset", ["images/coin.png"], [], ["loc", [null, [null, null], [71, 40]]], 0, 0], 0, 0, 0, 0], ["attribute", "alt", ["subexpr", "t", ["priceSuggestionOptionCard.applyToCostGroup"], [], ["loc", [null, [null, null], [71, 95]]], 0, 0], 0, 0, 0, 0], ["attribute", "title", ["subexpr", "t", ["priceSuggestionOptionCard.applyToCostGroup"], [], ["loc", [null, [null, null], [71, 152]]], 0, 0], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child9 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 74,
                "column": 0
              },
              "end": {
                "line": 76,
                "column": 0
              }
            },
            "moduleName": "goods-gateway/components/vp-pricing-option-card/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "md-column buttons");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 74,
              "column": 0
            },
            "end": {
              "line": 76,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-option-card/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "showAllFields", ["loc", [null, [74, 10], [74, 23]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [74, 0], [76, 0]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 77,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-pricing-option-card/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column md-column--1of5");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column numeric");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column numeric");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column numeric");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element12 = dom.childAt(fragment, [1]);
        var element13 = dom.childAt(fragment, [4]);
        var element14 = dom.childAt(fragment, [7]);
        var element15 = dom.childAt(fragment, [10]);
        var morphs = new Array(19);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createAttrMorph(element12, 'id');
        morphs[2] = dom.createAttrMorph(element12, 'data-label');
        morphs[3] = dom.createMorphAt(element12, 1, 1);
        morphs[4] = dom.createMorphAt(fragment, 3, 3, contextualElement);
        morphs[5] = dom.createAttrMorph(element13, 'id');
        morphs[6] = dom.createAttrMorph(element13, 'data-label');
        morphs[7] = dom.createMorphAt(element13, 1, 1);
        morphs[8] = dom.createMorphAt(element13, 4, 4);
        morphs[9] = dom.createMorphAt(fragment, 6, 6, contextualElement);
        morphs[10] = dom.createAttrMorph(element14, 'id');
        morphs[11] = dom.createAttrMorph(element14, 'data-label');
        morphs[12] = dom.createMorphAt(element14, 1, 1);
        morphs[13] = dom.createMorphAt(element14, 5, 5);
        morphs[14] = dom.createMorphAt(fragment, 9, 9, contextualElement);
        morphs[15] = dom.createAttrMorph(element15, 'id');
        morphs[16] = dom.createAttrMorph(element15, 'data-label');
        morphs[17] = dom.createMorphAt(element15, 1, 1);
        morphs[18] = dom.createMorphAt(fragment, 12, 12, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "showAllFields", ["loc", [null, [1, 6], [1, 19]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [1, 0], [8, 7]]]], ["attribute", "id", ["concat", [["get", "dealProduct.inventoryProductId", ["loc", [null, [9, 45], [9, 75]]], 0, 0, 0, 0], "-title"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["priceSuggestionDetail.title"], [], ["loc", [null, [9, 97], [9, 132]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "vp-localized-content", [], ["contents", ["subexpr", "@mut", [["get", "dealProduct.creativeContents", ["loc", [null, [10, 35], [10, 63]]], 0, 0, 0, 0]], [], [], 0, 0]], 1, null, ["loc", [null, [10, 2], [12, 27]]]], ["block", "if", [["get", "showAllFields", ["loc", [null, [14, 6], [14, 19]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [14, 0], [24, 7]]]], ["attribute", "id", ["concat", [["get", "dealProduct.inventoryProductId", ["loc", [null, [25, 37], [25, 67]]], 0, 0, 0, 0], "-sell-price"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["priceSuggestionDetail.sellPrice"], [], ["loc", [null, [25, 94], [25, 133]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "format-money", [["get", "calculator.currentSellPrice", ["loc", [null, [26, 17], [26, 44]]], 0, 0, 0, 0]], [], ["loc", [null, [26, 2], [26, 46]]], 0, 0], ["inline", "format-money", [["get", "calculator.shippingCost", ["loc", [null, [27, 17], [27, 40]]], 0, 0, 0, 0]], [], ["loc", [null, [27, 2], [27, 42]]], 0, 0], ["block", "if", [["get", "showAllFields", ["loc", [null, [29, 6], [29, 19]]], 0, 0, 0, 0]], [], 3, null, ["loc", [null, [29, 0], [34, 7]]]], ["attribute", "id", ["concat", [["get", "dealProduct.inventoryProductId", ["loc", [null, [35, 37], [35, 67]]], 0, 0, 0, 0], "-proposed-sell-price"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["priceSuggestionDetail.proposedSellPrice"], [], ["loc", [null, [35, 103], [35, 150]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "if", [["get", "editableSellPrice", ["loc", [null, [36, 8], [36, 25]]], 0, 0, 0, 0]], [], 4, 5, ["loc", [null, [36, 2], [40, 9]]]], ["inline", "format-money", [["get", "calculator.proposedShippingCost", ["loc", [null, [42, 17], [42, 48]]], 0, 0, 0, 0]], [], ["loc", [null, [42, 2], [42, 50]]], 0, 0], ["block", "if", [["get", "showAllFields", ["loc", [null, [44, 6], [44, 19]]], 0, 0, 0, 0]], [], 6, null, ["loc", [null, [44, 0], [49, 7]]]], ["attribute", "id", ["concat", [["get", "dealProduct.inventoryProductId", ["loc", [null, [50, 37], [50, 67]]], 0, 0, 0, 0], "-lowest-competitor-price"], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "data-label", ["concat", [["subexpr", "t", ["priceSuggestionDetail.lowestCompetitorLink"], [], ["loc", [null, [50, 107], [50, 157]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "if", [["get", "marketPricingOption.context.lowestCompetitorPrice", ["loc", [null, [51, 8], [51, 57]]], 0, 0, 0, 0]], [], 7, null, ["loc", [null, [51, 2], [63, 9]]]], ["block", "if", [["get", "editableSellPrice", ["loc", [null, [65, 6], [65, 23]]], 0, 0, 0, 0]], [], 8, 9, ["loc", [null, [65, 0], [76, 7]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9]
    };
  })());
});
define('goods-gateway/components/vp-pricing-option-card/validator', ['exports'], function (exports) {
  exports['default'] = {
    validate: function validate(priceData) {
      var errors = [];

      if (!this.isDirectionallyAligned(priceData)) {
        errors.push('notDirectionallyAligned');
      }

      if (!this.isPricedAboveCostPlusFreight(priceData)) {
        errors.push('notPricedAboveCostPlusFreight');
      }

      return errors;
    },

    isDirectionallyAligned: function isDirectionallyAligned(priceData) {
      var overriddenPrice = priceData.overriddenPrice;
      var proposedSellPrice = priceData.proposedSellPrice;
      var sellPrice = priceData.sellPrice;

      if (!overriddenPrice) {
        return true;
      }

      return sellPrice <= proposedSellPrice && sellPrice <= overriddenPrice || sellPrice >= proposedSellPrice && sellPrice >= overriddenPrice;
    },

    isPricedAboveCostPlusFreight: function isPricedAboveCostPlusFreight(priceData) {
      var threshold = priceData.cost + priceData.freight;
      var price = priceData.overriddenPrice || priceData.proposedSellPrice;

      return price > threshold;
    }
  };
});
define('goods-gateway/components/vp-pricing-override-modal/component', ['exports', 'ember', 'goods-gateway/constants/override-reasons'], function (exports, _ember, _goodsGatewayConstantsOverrideReasons) {
  exports['default'] = _ember['default'].Component.extend({
    // dependencies
    i18n: _ember['default'].inject.service('i18n'),

    // attributes
    classNames: ['vp-pricing-override-modal'],

    currentPrices: {},
    overriddenPrices: [],
    products: [],
    validOverrideReasons: _goodsGatewayConstantsOverrideReasons['default'],
    overrideReasons: _ember['default'].computed.map('validOverrideReasons', function (reason) {
      return _ember['default'].Object.create({
        label: this.get('i18n').t(reason.label),
        value: reason.value
      });
    }),
    overrideReason: _goodsGatewayConstantsOverrideReasons['default'][0].value,
    customOverrideReason: "",
    validationWarnings: [],
    validationWarningsConfirmed: false,

    useCustomOverrideReason: _ember['default'].computed.equal('overrideReason', 'other'),

    hasValidationWarnings: _ember['default'].computed.notEmpty('validationWarnings'),

    selectedReason: _ember['default'].computed('overrideReason', 'customOverrideReason', function () {
      if (this.get('useCustomOverrideReason')) {
        return this.get('customOverrideReason');
      } else {
        return this.get('overrideReason');
      }
    }),

    overrideReasonMissing: _ember['default'].computed('selectedReason', function () {
      return this.get('selectedReason') === null || this.get('selectedReason').trim() === '';
    }),

    submitDisabled: _ember['default'].computed('overrideReasonMissing', 'hasValidationWarnings', 'validationWarningsConfirmed', function () {
      return this.get('overrideReasonMissing') || this.get('hasValidationWarnings') && !this.get('validationWarningsConfirmed');
    }),

    actions: {
      cancel: function cancel() {
        this.sendAction('cancelOverride');
      },
      confirm: function confirm() {
        var overrideDetails = this.get('useCustomOverrideReason') ? this.get('customOverrideReason') : '';
        this.sendAction('confirmOverride', {
          overrideReason: this.get('overrideReason'),
          overrideDetails: overrideDetails
        });
      }
    }
  });
});
define("goods-gateway/components/vp-pricing-override-modal/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 37,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-override-modal/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-pricing-option-card", [], ["currentPriceId", ["subexpr", "@mut", [["get", "price.inventoryProductId", ["loc", [null, [31, 21], [31, 45]]], 0, 0, 0, 0]], [], [], 0, 0], "dealProducts", ["subexpr", "@mut", [["get", "products", ["loc", [null, [32, 19], [32, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "marketPricingOption", ["subexpr", "@mut", [["get", "price", ["loc", [null, [33, 26], [33, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "currentPrices", ["subexpr", "@mut", [["get", "currentPrices", ["loc", [null, [34, 20], [34, 33]]], 0, 0, 0, 0]], [], [], 0, 0], "itemMasterDeal", ["subexpr", "@mut", [["get", "itemMasterDeal", ["loc", [null, [35, 21], [35, 35]]], 0, 0, 0, 0]], [], [], 0, 0], "showAllFields", false], ["loc", [null, [30, 6], [36, 27]]], 0, 0]],
        locals: ["price"],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 47,
                "column": 8
              },
              "end": {
                "line": 49,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-pricing-override-modal/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("li");
            dom.setAttribute(el1, "class", "js-validation-warning");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["inline", "t", [["subexpr", "concat", ["priceSuggestionValidations.", ["get", "warning", ["loc", [null, [48, 86], [48, 93]]], 0, 0, 0, 0]], [], ["loc", [null, [48, 48], [48, 94]]], 0, 0]], [], ["loc", [null, [48, 44], [48, 96]]], 0, 0]],
          locals: ["warning"],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 40,
              "column": 2
            },
            "end": {
              "line": 60,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-pricing-override-modal/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "validation-warning-row");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("h3");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("ul");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
          morphs[2] = dom.createMorphAt(element0, 5, 5);
          return morphs;
        },
        statements: [["inline", "t", ["priceSuggestionValidations.warning"], [], ["loc", [null, [43, 8], [43, 50]]], 0, 0], ["block", "each", [["get", "validationWarnings", ["loc", [null, [47, 16], [47, 34]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [47, 8], [49, 17]]]], ["inline", "vp-checkbox", [], ["inputId", "confirm-validation-warnings-checkbox", "key", "validationWarningsConfirmed", "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [55, 14], [55, 18]]], 0, 0, 0, 0]], [], [], 0, 0], "tRoot", "priceSuggestionValidations", "tKey", "confirmationPrompt"], ["loc", [null, [52, 6], [58, 8]]], 0, 0]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 69,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-pricing-override-modal/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "class", "override-modal-dialog");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "reason");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "responsive-table clearfix");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row header-row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "button-row align-right");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3, "id", "cancel-override-modal-dialog");
        dom.setAttribute(el3, "class", "button button-secondary");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3, "id", "confirm-override-modal-dialog");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var element2 = dom.childAt(element1, [3]);
        var element3 = dom.childAt(element1, [5]);
        var element4 = dom.childAt(element3, [1]);
        var element5 = dom.childAt(element1, [9]);
        var element6 = dom.childAt(element5, [1]);
        var element7 = dom.childAt(element5, [3]);
        var morphs = new Array(15);
        morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
        morphs[2] = dom.createMorphAt(element2, 3, 3);
        morphs[3] = dom.createMorphAt(dom.childAt(element4, [1]), 0, 0);
        morphs[4] = dom.createMorphAt(dom.childAt(element4, [3]), 0, 0);
        morphs[5] = dom.createMorphAt(dom.childAt(element4, [5]), 0, 0);
        morphs[6] = dom.createMorphAt(dom.childAt(element4, [7]), 0, 0);
        morphs[7] = dom.createMorphAt(element3, 3, 3);
        morphs[8] = dom.createMorphAt(element1, 7, 7);
        morphs[9] = dom.createElementMorph(element6);
        morphs[10] = dom.createMorphAt(element6, 0, 0);
        morphs[11] = dom.createAttrMorph(element7, 'disabled');
        morphs[12] = dom.createAttrMorph(element7, 'class');
        morphs[13] = dom.createElementMorph(element7);
        morphs[14] = dom.createMorphAt(element7, 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["priceSuggestionOverrideModal.title"], [], ["loc", [null, [3, 4], [3, 46]]], 0, 0], ["inline", "vp-select", [], ["options", ["subexpr", "@mut", [["get", "overrideReasons", ["loc", [null, [9, 16], [9, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [10, 14], [10, 18]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "overrideReason", "tRoot", "priceSuggestionOverrideModal", "tKey", "subtitle", "showBlankDefault", false], ["loc", [null, [8, 6], [15, 8]]], 0, 0], ["inline", "textarea", [], ["placeholder", ["subexpr", "t", ["priceSuggestionOverrideModal.overrideReasonPrompt"], [], ["loc", [null, [18, 27], [18, 82]]], 0, 0], "value", ["subexpr", "@mut", [["get", "customOverrideReason", ["loc", [null, [18, 89], [18, 109]]], 0, 0, 0, 0]], [], [], 0, 0], "isVisible", ["subexpr", "@mut", [["get", "useCustomOverrideReason", ["loc", [null, [18, 120], [18, 143]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [18, 4], [18, 145]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.title"], [], ["loc", [null, [23, 29], [23, 64]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.sellPrice"], [], ["loc", [null, [24, 29], [24, 68]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.proposedSellPrice"], [], ["loc", [null, [25, 29], [25, 76]]], 0, 0], ["inline", "t", ["priceSuggestionDetail.lowestCompetitorLink"], [], ["loc", [null, [26, 29], [26, 79]]], 0, 0], ["block", "each", [["get", "overriddenPrices", ["loc", [null, [29, 12], [29, 28]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [29, 4], [37, 13]]]], ["block", "if", [["get", "hasValidationWarnings", ["loc", [null, [40, 8], [40, 29]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [40, 2], [60, 9]]]], ["element", "action", ["cancel"], [], ["loc", [null, [63, 78], [63, 97]]], 0, 0], ["inline", "t", ["priceSuggestionOverrideModal.cancel"], [], ["loc", [null, [63, 98], [63, 141]]], 0, 0], ["attribute", "disabled", ["get", "submitDisabled", ["loc", [null, [64, 58], [64, 72]]], 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "class", ["concat", ["button button-primary ", ["subexpr", "if", [["get", "submitDisabled", ["loc", [null, [64, 109], [64, 123]]], 0, 0, 0, 0], "is-disabled"], [], ["loc", [null, [64, 104], [64, 139]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["confirm"], [], ["loc", [null, [64, 141], [64, 161]]], 0, 0], ["inline", "t", ["priceSuggestionOverrideModal.confirmAccept"], [], ["loc", [null, [65, 6], [65, 56]]], 0, 0]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-pricing-reject-modal/component', ['exports', 'ember', 'goods-gateway/constants/reject-reasons'], function (exports, _ember, _goodsGatewayConstantsRejectReasons) {
  exports['default'] = _ember['default'].Component.extend({
    i18n: _ember['default'].inject.service('i18n'),

    // attributes
    classNames: ['vp-pricing-reject-modal'],

    validRejectReasons: _goodsGatewayConstantsRejectReasons.ACTIVE_REASONS,
    rejectReasons: _ember['default'].computed.map('validRejectReasons', function (reason) {
      return _ember['default'].Object.create({
        label: this.get('i18n').t(reason.label),
        value: reason.value
      });
    }),

    defaultRejectReason: _ember['default'].computed('validRejectReasons', function () {
      return this.get('validRejectReasons')[0].value;
    }),

    submitDisabled: _ember['default'].computed('rejectReason', 'rejectionDetails', function () {
      return _ember['default'].isEqual(this.get('rejectReason'), 'other') && _ember['default'].isBlank(this.get('rejectionDetails'));
    }),

    actions: {
      cancelReject: function cancelReject() {
        this.sendAction('cancelReject');
      },
      confirmReject: function confirmReject() {
        var rejectReason = this.get('rejectReason') || this.get('defaultRejectReason');
        var rejectionDetails = this.get('rejectionDetails');
        this.sendAction('confirmReject', {
          reason: rejectReason,
          rejectionDetails: rejectionDetails
        });
      }
    }
  });
});
define("goods-gateway/components/vp-pricing-reject-modal/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-pricing-reject-modal/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "class", "reject-modal-dialog");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "button-row align-right");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3, "id", "cancel-reject-modal-dialog");
        dom.setAttribute(el3, "class", "button button-secondary");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3, "id", "confirm-reject-modal-dialog");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [7]);
        var element2 = dom.childAt(element1, [1]);
        var element3 = dom.childAt(element1, [3]);
        var morphs = new Array(9);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element0, [5]), 1, 1);
        morphs[3] = dom.createElementMorph(element2);
        morphs[4] = dom.createMorphAt(element2, 0, 0);
        morphs[5] = dom.createAttrMorph(element3, 'disabled');
        morphs[6] = dom.createAttrMorph(element3, 'class');
        morphs[7] = dom.createElementMorph(element3);
        morphs[8] = dom.createMorphAt(element3, 0, 0);
        return morphs;
      },
      statements: [["inline", "t", ["priceSuggestionRejectModal.title"], [], ["loc", [null, [3, 4], [3, 44]]], 0, 0], ["inline", "vp-select", [], ["showLabel", false, "default", ["subexpr", "@mut", [["get", "validRejectReasons.firstObject.value", ["loc", [null, [9, 14], [9, 50]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "rejectReason", "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [11, 12], [11, 16]]], 0, 0, 0, 0]], [], [], 0, 0], "showBlankDefault", false, "options", ["subexpr", "@mut", [["get", "rejectReasons", ["loc", [null, [13, 14], [13, 27]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [7, 4], [14, 6]]], 0, 0], ["inline", "textarea", [], ["class", "text-input", "value", ["subexpr", "@mut", [["get", "rejectionDetails", ["loc", [null, [18, 40], [18, 56]]], 0, 0, 0, 0]], [], [], 0, 0], "id", "rejection-details", "placeholder", ["subexpr", "t", ["priceSuggestionRejectModal.reasonPrompt"], [], ["loc", [null, [18, 92], [18, 137]]], 0, 0]], ["loc", [null, [18, 4], [18, 139]]], 0, 0], ["element", "action", ["cancelReject"], [], ["loc", [null, [22, 76], [22, 101]]], 0, 0], ["inline", "t", ["priceSuggestionRejectModal.cancel"], [], ["loc", [null, [22, 102], [22, 143]]], 0, 0], ["attribute", "disabled", ["get", "submitDisabled", ["loc", [null, [23, 56], [23, 70]]], 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "class", ["concat", ["button button-primary ", ["subexpr", "if", [["get", "submitDisabled", ["loc", [null, [23, 107], [23, 121]]], 0, 0, 0, 0], "is-disabled"], [], ["loc", [null, [23, 102], [23, 137]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["confirmReject"], [], ["loc", [null, [23, 139], [23, 165]]], 0, 0], ["inline", "t", ["priceSuggestionRejectModal.confirmReject"], [], ["loc", [null, [23, 166], [23, 214]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-pricing-strategies/component', ['exports', 'ember', 'goods-gateway/helpers/titleize'], function (exports, _ember, _goodsGatewayHelpersTitleize) {
  exports['default'] = _ember['default'].Component.extend({
    // args
    strategies: null,
    strategyOptions: _ember['default'].computed.map('strategies', function (strategy) {
      return {
        label: _goodsGatewayHelpersTitleize['default'].compute([strategy]),
        value: strategy
      };
    }),

    // helpers
    selectedStrategy: '',

    // events
    change: function change() {
      this.send('strategySelected', this.get('selectedStrategy'));
    },

    actions: {
      strategySelected: function strategySelected() {
        this.sendAction('strategySelected', this.get('selectedStrategy'));
      }
    }
  });
});
define("goods-gateway/components/vp-pricing-strategies/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-pricing-strategies/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-select", [], ["options", ["subexpr", "@mut", [["get", "strategyOptions", ["loc", [null, [2, 10], [2, 25]]], 0, 0, 0, 0]], [], [], 0, 0], "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [3, 8], [3, 12]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "selectedStrategy", "inputId", "pricing-suggestion-strategies", "showLabel", false, "blankDefaultText", ["subexpr", "t", ["priceSuggestion.noStrategySelected"], [], ["loc", [null, [7, 19], [7, 59]]], 0, 0]], ["loc", [null, [1, 0], [8, 2]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-product-category-picker/component', ['exports', 'ember', 'goods-gateway/mixins/search', 'goods-gateway/utils/replace-underscores-with-pipes'], function (exports, _ember, _goodsGatewayMixinsSearch, _goodsGatewayUtilsReplaceUnderscoresWithPipes) {
  exports['default'] = _ember['default'].Component.extend(_goodsGatewayMixinsSearch['default'], {
    selectedCategory: null,
    showSearch: false,
    store: _ember['default'].inject.service('store'),

    classNames: ['vp-product-category-picker'],

    init: function init() {
      if (_ember['default'].isBlank(this.get('category'))) {
        this.set('showSearch', true);
      }

      this._searchEngineInstances = _ember['default'].Object.create();
      this.set('categorySearches', [this.createSearchEngine('categoryIds')]);

      this._super.apply(this, arguments);
    },

    categoryDescription: _ember['default'].computed('selectedCategory.id', function () {
      var description = this.get('selectedCategory.localizedContents.firstObject.description');
      if (description) {
        return (0, _goodsGatewayUtilsReplaceUnderscoresWithPipes['default'])(description);
      }
    }),

    actions: {
      showSearch: function showSearch() {
        this.set('showSearch', true);
      },

      showValue: function showValue() {
        this.set('showSearch', false);
      },

      setCategory: function setCategory(criteria) {
        var _this = this;

        var id = criteria.categoryIds;
        this.get('store').find('category', id).then(function (category) {
          _this.set('selectedCategory', category);
          _this.set('showSearch', false);
          _this.sendAction('setCategory', category);
        });
      }
    }
  });
});
define("goods-gateway/components/vp-product-category-picker/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-product-category-picker/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-x-search", [], ["searches", ["subexpr", "@mut", [["get", "categorySearches", ["loc", [null, [3, 13], [3, 29]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", "category-search", "singleSelect", true, "showInstructions", false, "select", "setCategory", "showValue", "showValue"], ["loc", [null, [2, 2], [8, 27]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 9,
              "column": 0
            },
            "end": {
              "line": 18,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-product-category-picker/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-field", [], ["tRoot", "vp-product", "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [12, 11], [12, 15]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "categoryDescription", "showLabel", false, "inputId", "category-name", "toggle", true, "showSearch", "showSearch"], ["loc", [null, [10, 2], [17, 30]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-product-category-picker/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "showSearch", ["loc", [null, [1, 6], [1, 16]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [1, 0], [18, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-product-images/component', ['exports', 'ember', 'goods-gateway/config/environment', 'goods-gateway/utils/ember-helpers'], function (exports, _ember, _goodsGatewayConfigEnvironment, _goodsGatewayUtilsEmberHelpers) {
  exports['default'] = _ember['default'].Component.extend({
    // dependencies
    ajax: _ember['default'].inject.service('ajax'),
    system: _ember['default'].inject.service('system'),

    // args
    product: null,
    selectedImage: null,

    // action args
    save: '',

    // lifecycle
    init: function init() {
      this._super.apply(this, arguments);
      this._pollForAnyMissingImageServiceURIs();
    },

    // attributes
    classNames: ['vp-product-images'],

    // helpers
    decoratedItems: _ember['default'].computed.map('product.items', function (item) {
      return _ember['default'].ObjectProxy.create({
        content: item,
        selected: false
      });
    }),

    newItemImage: null,

    newProductImage: null,

    selectAllCheckboxValue: false,

    selectedItems: _ember['default'].computed.filterBy('decoratedItems', 'selected'),

    selectImage: function selectImage(image) {
      if (this.get('selectedImage') === image) {
        this.set('selectedImage', null);
      } else {
        this.set('selectedImage', image);
      }
    },

    showNewItemImageDialog: false,

    showNewProductImageDialog: false,

    _checkForDuplicateImage: function _checkForDuplicateImage(owner, candidateImage) {
      var imageServiceUri = candidateImage.get('imageServiceUri');
      var sourceUri = candidateImage.get('sourceUri');
      var existingImage = owner.get('images').findBy('imageServiceUri', imageServiceUri) || owner.get('images').findBy('sourceUri', sourceUri);
      if (!existingImage) {
        return;
      }
      var index = owner.get('images').indexOf(existingImage);
      var imageElement = _ember['default'].$('#' + owner.get('id')).find('.image-container').eq(index).find('img');
      imageElement.fadeOut('fast', function () {
        imageElement.fadeIn('slow');
      });
      return true;
    },

    _handlingSelection: false,

    _itemToAddImageTo: null,

    _pollForAnyMissingImageServiceURIs: function _pollForAnyMissingImageServiceURIs(isRecursiveCall) {
      if (this.get('_isPollingImages') && !isRecursiveCall) {
        return;
      }
      this.set('_isPollingImages', true);

      var missingImages = this.get('product.images').rejectBy('imageServiceUri');
      this.get('product.items').map(function (item) {
        missingImages.pushObjects(item.get('images').rejectBy('imageServiceUri'));
      });

      if (missingImages.length === 0) {
        this.set('_isPollingImages', false);
      } else {
        this._syncMissingImageServiceURIs(missingImages);
      }
    },

    _processItemSelection: _ember['default'].observer('decoratedItems.@each.selected', function () {
      if (this.get('_handlingSelection')) {
        return;
      }

      this.set('_handlingSelection', true);
      var areAllSelected = this.get('decoratedItems').isEvery('selected');
      this.set('selectAllCheckboxValue', areAllSelected);
      this.set('_handlingSelection', false);
    }),

    _processSelectAllCheckboxValue: _ember['default'].observer('selectAllCheckboxValue', function () {
      if (this.get('_handlingSelection')) {
        return;
      }

      this.set('_handlingSelection', true);
      var selected = this.get('selectAllCheckboxValue');
      this.get('decoratedItems').forEach(function (item) {
        item.set('selected', selected);
      });
      this.set('_handlingSelection', false);
    }),

    _syncMissingImageServiceURIs: function _syncMissingImageServiceURIs(missingImages) {
      var _this = this;

      var productURI = '/goods-gateway/proxy/gpapi/v1/products/' + this.get('product.id');
      return this.get('ajax').request(productURI).then(function (data) {
        var images = data.product.images || [];
        (data.product.items || []).map(function (item) {
          return images.pushObjects(item.images);
        });
        missingImages.forEach(function (missingImage) {
          var matchingImage = images.find(function (image) {
            return image.imageServiceUri && image.sourceUri === missingImage.get('sourceUri');
          });
          if (matchingImage) {
            missingImage.set('imageServiceUri', matchingImage.imageServiceUri);
          }
        });

        (0, _goodsGatewayUtilsEmberHelpers.runLater)(_this, _goodsGatewayConfigEnvironment['default'].appConfig.imagePollFrequency, function () {
          _this._pollForAnyMissingImageServiceURIs(true);
        });
      });
    },

    actions: {
      addItemImage: function addItemImage() {
        this.send('closeDialogs');
        var item = this.get('_itemToAddImageTo');
        var newImage = this.get('newItemImage');

        if (this._checkForDuplicateImage(item, newImage)) {
          return;
        }

        item.get('images').createFragment(newImage);
        this.sendAction('save');
        this._pollForAnyMissingImageServiceURIs();
      },

      addProductImage: function addProductImage() {
        this.send('closeDialogs');
        var newImage = this.get('newProductImage');
        if (this._checkForDuplicateImage(this.get('product'), newImage)) {
          return;
        }

        this.get('product.images').createFragment(newImage);
        this.sendAction('save');
        this._pollForAnyMissingImageServiceURIs();
      },

      applySelectedImage: function applySelectedImage() {
        var _this2 = this;

        var selectedImage = this.get('selectedImage');
        var hasChanges = undefined;
        this.get('selectedItems').forEach(function (item) {
          if (_this2._checkForDuplicateImage(item, selectedImage)) {
            return;
          }

          item.get('images').addObject({
            imageServiceUri: selectedImage.get('imageServiceUri'),
            sourceUri: selectedImage.get('sourceUri')
          });

          hasChanges = true;
        });

        if (hasChanges) {
          this.sendAction('save');
        }
      },

      closeDialogs: function closeDialogs() {
        this.set('showNewProductImageDialog', false);
        this.set('showNewItemImageDialog', false);
      },

      copySourceUri: function copySourceUri(image) {
        this.get('system').copyToPasteboard(image.get('sourceUri'));
      },

      deleteImage: function deleteImage(image, owner) {
        if (this.get('selectedImage') === image) {
          this.set('selectedImage', null);
        }
        this.sendAction('deleteImage', image, owner);
      },

      displayItemImageDialog: function displayItemImageDialog(item) {
        this.set('_itemToAddImageTo', item);
        this.set('newItemImage', _ember['default'].Object.create());
        this.set('showNewItemImageDialog', true);
      },

      displayProductImageDialog: function displayProductImageDialog() {
        this.set('newProductImage', _ember['default'].Object.create());
        this.set('showNewProductImageDialog', true);
      }
    }
  });
});
define("goods-gateway/components/vp-product-images/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 10
            },
            "end": {
              "line": 15,
              "column": 10
            }
          },
          "moduleName": "goods-gateway/components/vp-product-images/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("            ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          var el2 = dom.createTextNode("\n              ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("span");
          dom.setAttribute(el2, "class", "viewer-image");
          var el3 = dom.createTextNode("\n                ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n              ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n              ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("a");
          dom.setAttribute(el2, "class", "mx-icon-decline delete-image");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n            ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element13 = dom.childAt(fragment, [1]);
          var element14 = dom.childAt(element13, [1]);
          var element15 = dom.childAt(element13, [3]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element13, 'class');
          morphs[1] = dom.createElementMorph(element14);
          morphs[2] = dom.createMorphAt(element14, 1, 1);
          morphs[3] = dom.createElementMorph(element15);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["image-container ", ["subexpr", "if", [["subexpr", "eq", [["get", "selectedImage", ["loc", [null, [9, 50], [9, 63]]], 0, 0, 0, 0], ["get", "image", ["loc", [null, [9, 64], [9, 69]]], 0, 0, 0, 0]], [], ["loc", [null, [9, 46], [9, 70]]], 0, 0], "selected"], [], ["loc", [null, [9, 41], [9, 83]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", [["get", "selectImage", ["loc", [null, [10, 50], [10, 61]]], 0, 0, 0, 0], ["get", "image", ["loc", [null, [10, 62], [10, 67]]], 0, 0, 0, 0]], [], ["loc", [null, [10, 41], [10, 69]]], 0, 0], ["inline", "vp-image", [], ["image", ["subexpr", "@mut", [["get", "image", ["loc", [null, [11, 33], [11, 38]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [11, 16], [11, 40]]], 0, 0], ["element", "action", ["deleteImage", ["get", "image", ["loc", [null, [13, 77], [13, 82]]], 0, 0, 0, 0], ["get", "product", ["loc", [null, [13, 83], [13, 90]]], 0, 0, 0, 0]], [], ["loc", [null, [13, 54], [13, 92]]], 0, 0]],
        locals: ["image"],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 20,
              "column": 8
            },
            "end": {
              "line": 24,
              "column": 8
            }
          },
          "moduleName": "goods-gateway/components/vp-product-images/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "href", "#");
          dom.setAttribute(el1, "id", "add-image-to-product");
          var el2 = dom.createTextNode("\n            ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element12 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element12);
          morphs[1] = dom.createMorphAt(element12, 1, 1);
          return morphs;
        },
        statements: [["element", "action", ["displayProductImageDialog"], [], ["loc", [null, [21, 48], [21, 86]]], 0, 0], ["inline", "t", ["vp-product-images.createImage"], [], ["loc", [null, [22, 12], [22, 49]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 28,
              "column": 4
            },
            "end": {
              "line": 49,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-product-images/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "id", "selected-image");
          dom.setAttribute(el1, "class", "md-column");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("h5");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("dl");
          dom.setAttribute(el2, "class", "selected-image-details");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("dt");
          dom.setAttribute(el3, "class", "title");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("dd");
          dom.setAttribute(el3, "class", "source-uri");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("a");
          dom.setAttribute(el4, "href", "#");
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element8 = dom.childAt(fragment, [1]);
          var element9 = dom.childAt(element8, [5]);
          var element10 = dom.childAt(element9, [3]);
          var element11 = dom.childAt(element10, [3]);
          var morphs = new Array(6);
          morphs[0] = dom.createMorphAt(dom.childAt(element8, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(element8, 3, 3);
          morphs[2] = dom.createMorphAt(dom.childAt(element9, [1]), 1, 1);
          morphs[3] = dom.createMorphAt(element10, 1, 1);
          morphs[4] = dom.createElementMorph(element11);
          morphs[5] = dom.createMorphAt(element11, 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["vp-product-images.selectedImage"], [], ["loc", [null, [31, 10], [31, 49]]], 0, 0], ["inline", "vp-image", [], ["image", ["subexpr", "@mut", [["get", "selectedImage", ["loc", [null, [33, 25], [33, 38]]], 0, 0, 0, 0]], [], [], 0, 0], "dimensions", "300x182"], ["loc", [null, [33, 8], [33, 61]]], 0, 0], ["inline", "t", ["vp-product-images.sourceUri"], [], ["loc", [null, [37, 12], [37, 47]]], 0, 0], ["content", "selectedImage.sourceUri", ["loc", [null, [41, 12], [41, 39]]], 0, 0, 0, 0], ["element", "action", ["copySourceUri", ["get", "selectedImage", ["loc", [null, [43, 49], [43, 62]]], 0, 0, 0, 0]], [], ["loc", [null, [43, 24], [43, 64]]], 0, 0], ["inline", "t", ["vp-product-images.copyToClipboard"], [], ["loc", [null, [44, 14], [44, 55]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 71,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 10
            }
          },
          "moduleName": "goods-gateway/components/vp-product-images/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("            ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["vp-product-images.apply"], [], ["loc", [null, [77, 12], [77, 43]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 96,
                "column": 12
              },
              "end": {
                "line": 103,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/components/vp-product-images/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            var el2 = dom.createTextNode("\n                ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("span");
            dom.setAttribute(el2, "class", "viewer-image");
            var el3 = dom.createTextNode("\n                  ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n                ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n                ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("a");
            dom.setAttribute(el2, "class", "mx-icon-decline delete-image");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element3 = dom.childAt(fragment, [1]);
            var element4 = dom.childAt(element3, [1]);
            var element5 = dom.childAt(element3, [3]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element3, 'class');
            morphs[1] = dom.createElementMorph(element4);
            morphs[2] = dom.createMorphAt(element4, 1, 1);
            morphs[3] = dom.createElementMorph(element5);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["image-container ", ["subexpr", "if", [["subexpr", "eq", [["get", "selectedImage", ["loc", [null, [97, 52], [97, 65]]], 0, 0, 0, 0], ["get", "image", ["loc", [null, [97, 66], [97, 71]]], 0, 0, 0, 0]], [], ["loc", [null, [97, 48], [97, 72]]], 0, 0], "selected"], [], ["loc", [null, [97, 43], [97, 85]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", [["get", "selectImage", ["loc", [null, [98, 52], [98, 63]]], 0, 0, 0, 0], ["get", "image", ["loc", [null, [98, 64], [98, 69]]], 0, 0, 0, 0]], [], ["loc", [null, [98, 43], [98, 71]]], 0, 0], ["inline", "vp-image", [], ["image", ["subexpr", "@mut", [["get", "image", ["loc", [null, [99, 35], [99, 40]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [99, 18], [99, 43]]], 0, 0], ["element", "action", ["deleteImage", ["get", "image", ["loc", [null, [101, 79], [101, 84]]], 0, 0, 0, 0], ["get", "item", ["loc", [null, [101, 85], [101, 89]]], 0, 0, 0, 0]], [], ["loc", [null, [101, 56], [101, 91]]], 0, 0]],
          locals: ["image"],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 104,
                "column": 12
              },
              "end": {
                "line": 108,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/components/vp-product-images/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("a");
            dom.setAttribute(el1, "href", "#");
            dom.setAttribute(el1, "class", "add-image-to-item");
            var el2 = dom.createTextNode("\n                ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element2);
            morphs[1] = dom.createMorphAt(element2, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["displayItemImageDialog", ["get", "item", ["loc", [null, [105, 86], [105, 90]]], 0, 0, 0, 0]], [], ["loc", [null, [105, 52], [105, 92]]], 0, 0], ["inline", "t", ["vp-product-images.createVariationImage"], [], ["loc", [null, [106, 16], [106, 62]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-product-images/template.hbs"
        },
        isEmpty: false,
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          dom.setAttribute(el1, "class", "item");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "checkbox-column");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "item-image");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "item-sku");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "item-attributes");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element6 = dom.childAt(fragment, [1]);
          var element7 = dom.childAt(element6, [3]);
          var morphs = new Array(6);
          morphs[0] = dom.createAttrMorph(element6, 'id');
          morphs[1] = dom.createMorphAt(dom.childAt(element6, [1]), 1, 1);
          morphs[2] = dom.createMorphAt(element7, 1, 1);
          morphs[3] = dom.createMorphAt(element7, 2, 2);
          morphs[4] = dom.createMorphAt(dom.childAt(element6, [5]), 1, 1);
          morphs[5] = dom.createMorphAt(dom.childAt(element6, [7]), 1, 1);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", [["get", "item.id", ["loc", [null, [85, 18], [85, 25]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "vp-checkbox", [], ["inputId", ["subexpr", "concat", ["item-image-selected-", ["get", "itemIndex", ["loc", [null, [88, 53], [88, 62]]], 0, 0, 0, 0]], [], ["loc", [null, [88, 22], [88, 63]]], 0, 0], "showLabel", false, "model", ["subexpr", "@mut", [["get", "item", ["loc", [null, [90, 20], [90, 24]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "selected"], ["loc", [null, [87, 12], [92, 14]]], 0, 0], ["block", "each", [["get", "item.images", ["loc", [null, [96, 20], [96, 31]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [96, 12], [103, 21]]]], ["block", "vp-add", [], [], 1, null, ["loc", [null, [104, 12], [108, 23]]]], ["content", "item.vendorSku", ["loc", [null, [112, 12], [112, 30]]], 0, 0, 0, 0], ["inline", "vp-concatenated-categories", [], ["item", ["subexpr", "@mut", [["get", "item", ["loc", [null, [116, 46], [116, 50]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [116, 12], [116, 52]]], 0, 0]],
        locals: ["item", "itemIndex"],
        templates: [child0, child1]
      };
    })();
    var child5 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 124,
              "column": 0
            },
            "end": {
              "line": 140,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-product-images/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h2");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("form");
          dom.setAttribute(el1, "action", "#");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [3]);
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createElementMorph(element1);
          morphs[2] = dom.createMorphAt(element1, 1, 1);
          morphs[3] = dom.createMorphAt(element1, 3, 3);
          return morphs;
        },
        statements: [["inline", "t", ["vp-product-images.addingImage"], [], ["loc", [null, [126, 4], [126, 41]]], 0, 0], ["element", "action", ["addProductImage"], ["on", "submit"], ["loc", [null, [129, 19], [129, 59]]], 0, 0], ["inline", "vp-field", [], ["model", ["subexpr", "@mut", [["get", "newProductImage", ["loc", [null, [131, 12], [131, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "sourceUri", "inputId", "new-product-image-uri", "tRoot", "vp-product-images", "required", true], ["loc", [null, [130, 4], [136, 6]]], 0, 0], ["inline", "mx-submit", [], ["inputId", "save-product-image"], ["loc", [null, [138, 4], [138, 46]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child6 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 142,
              "column": 0
            },
            "end": {
              "line": 158,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-product-images/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h2");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("form");
          dom.setAttribute(el1, "action", "#");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [3]);
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createElementMorph(element0);
          morphs[2] = dom.createMorphAt(element0, 1, 1);
          morphs[3] = dom.createMorphAt(element0, 3, 3);
          return morphs;
        },
        statements: [["inline", "t", ["vp-product-images.addingImage"], [], ["loc", [null, [144, 4], [144, 41]]], 0, 0], ["element", "action", ["addItemImage"], ["on", "submit"], ["loc", [null, [147, 19], [147, 56]]], 0, 0], ["inline", "vp-field", [], ["model", ["subexpr", "@mut", [["get", "newItemImage", ["loc", [null, [149, 12], [149, 24]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "sourceUri", "inputId", "new-item-image-uri", "tRoot", "vp-product-images", "required", true], ["loc", [null, [148, 4], [154, 6]]], 0, 0], ["inline", "mx-submit", [], ["inputId", "save-item-image"], ["loc", [null, [156, 4], [156, 43]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 159,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-product-images/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "image-manager");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column--2of3 select-area");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("h2");
        dom.setAttribute(el4, "class", "instruction");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("section");
        dom.setAttribute(el4, "id", "product-image-viewer");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        var el6 = dom.createTextNode("\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("p");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "id", "product-item-images");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h3");
        dom.setAttribute(el2, "class", "instruction");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("table");
        dom.setAttribute(el2, "id", "product-image-list");
        dom.setAttribute(el2, "class", "table-lined");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("thead");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("tr");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("td");
        dom.setAttribute(el5, "class", "checkbox-column");
        dom.setAttribute(el5, "colspan", "1");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("td");
        dom.setAttribute(el5, "colspan", "3");
        var el6 = dom.createTextNode("\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("tbody");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element16 = dom.childAt(fragment, [0, 1]);
        var element17 = dom.childAt(element16, [1]);
        var element18 = dom.childAt(element17, [3, 1]);
        var element19 = dom.childAt(fragment, [2]);
        var element20 = dom.childAt(element19, [3]);
        var element21 = dom.childAt(element20, [1, 1]);
        var morphs = new Array(11);
        morphs[0] = dom.createMorphAt(dom.childAt(element17, [1]), 0, 0);
        morphs[1] = dom.createAttrMorph(element18, 'id');
        morphs[2] = dom.createMorphAt(element18, 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element17, [5]), 1, 1);
        morphs[4] = dom.createMorphAt(element16, 3, 3);
        morphs[5] = dom.createMorphAt(dom.childAt(element19, [1]), 1, 1);
        morphs[6] = dom.createMorphAt(dom.childAt(element21, [1]), 1, 1);
        morphs[7] = dom.createMorphAt(dom.childAt(element21, [3]), 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(element20, [3]), 1, 1);
        morphs[9] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        morphs[10] = dom.createMorphAt(fragment, 6, 6, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["inline", "t", ["vp-product-images.productImages"], [], ["loc", [null, [4, 30], [4, 69]]], 0, 0], ["attribute", "id", ["concat", [["get", "product.id", ["loc", [null, [7, 19], [7, 29]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "each", [["get", "product.images", ["loc", [null, [8, 18], [8, 32]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [8, 10], [15, 19]]]], ["block", "vp-add", [], [], 1, null, ["loc", [null, [20, 8], [24, 19]]]], ["block", "if", [["get", "selectedImage", ["loc", [null, [28, 10], [28, 23]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [28, 4], [49, 11]]]], ["inline", "t", ["vp-product-images.variationImages"], [], ["loc", [null, [55, 4], [55, 45]]], 0, 0], ["inline", "vp-checkbox", [], ["inputId", "select-all-items", "showLabel", false, "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [65, 18], [65, 22]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "selectAllCheckboxValue"], ["loc", [null, [62, 10], [67, 12]]], 0, 0], ["block", "mx-button", [], ["action", "applySelectedImage", "id", "apply-to-selected-items", "enabled", ["subexpr", "and", [["get", "selectedImage", ["loc", [null, [74, 25], [74, 38]]], 0, 0, 0, 0], ["get", "selectedItems.length", ["loc", [null, [74, 39], [74, 59]]], 0, 0, 0, 0]], [], ["loc", [null, [74, 20], [74, 60]]], 0, 0], "secondary", true], 3, null, ["loc", [null, [71, 10], [78, 24]]]], ["block", "each", [["get", "decoratedItems", ["loc", [null, [84, 14], [84, 28]]], 0, 0, 0, 0]], [], 4, null, ["loc", [null, [84, 6], [119, 15]]]], ["block", "mx-modal", [], ["open", ["subexpr", "@mut", [["get", "showNewProductImageDialog", ["loc", [null, [124, 17], [124, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], 5, null, ["loc", [null, [124, 0], [140, 13]]]], ["block", "mx-modal", [], ["open", ["subexpr", "@mut", [["get", "showNewItemImageDialog", ["loc", [null, [142, 17], [142, 39]]], 0, 0, 0, 0]], [], [], 0, 0]], 6, null, ["loc", [null, [142, 0], [158, 13]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6]
    };
  })());
});
define('goods-gateway/components/vp-product-state/component', ['exports', 'ember'], function (exports, _ember) {

  var colorMapping = {
    closed: 'gray',
    created: 'gray',
    open: 'green',
    paused: 'yellow',
    rejected: 'red',
    review: 'gray'
  };

  var component = _ember['default'].Component.extend({
    color: _ember['default'].computed('state', function () {
      return colorMapping[this.get('state')];
    })
  });

  component.reopenClass({
    positionalParams: ['state']
  });

  exports['default'] = component;
});
define("goods-gateway/components/vp-product-state/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-product-state/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(3);
        morphs[0] = dom.createAttrMorph(element0, 'class');
        morphs[1] = dom.createMorphAt(element0, 1, 1);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["mx-dot state product-state ", ["get", "color", ["loc", [null, [1, 41], [1, 46]]], 0, 0, 0, 0], " ", ["get", "state", ["loc", [null, [1, 51], [1, 56]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", [["subexpr", "concat", ["constants.productStates.", ["get", "state", ["loc", [null, [2, 41], [2, 46]]], 0, 0, 0, 0]], [], ["loc", [null, [2, 6], [2, 47]]], 0, 0]], [], ["loc", [null, [2, 2], [2, 49]]], 0, 0], ["content", "yield", ["loc", [null, [5, 0], [5, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-product-upload/component', ['exports', 'ember', 'goods-gateway/utils/download-utility', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayUtilsDownloadUtility, _goodsGatewayConfigEnvironment) {
  exports['default'] = _ember['default'].Component.extend({
    // dependencies
    authorization: _ember['default'].inject.service(),
    gpapi: _ember['default'].inject.service(),
    ajax: _ember['default'].inject.service(),
    request: _ember['default'].inject.service(),
    session: _ember['default'].inject.service(),
    flash: _ember['default'].inject.service('flashMessages'),

    // attributes
    classNames: ['vp-product-upload'],

    // helpers
    showTemplateUi: _goodsGatewayConfigEnvironment['default'].featureFlags.showTemplateUi,
    uploadEndpoint: '/goods-gateway/proxy/gpapi/bulk/v1/uploads',
    exportEndpoint: '/goods-gateway/proxy/gpapi/bulk/v1/exports',
    i18n: _ember['default'].inject.service(),
    genericTemplateId: 0,
    allowedUploadExtensionsRegex: /\.csv$/,

    presentedTaxonomy: _ember['default'].computed('MRTTaxonomy.[]', function () {
      return this.get('MRTTaxonomy').reject(function (category) {
        return _ember['default'].isPresent(category.get('children'));
      });
    }),

    init: function init() {
      this._super.apply(this, arguments);
    },

    checkAuth: function checkAuth() {
      var vendors = this.get('authorization.vendors');
      if (!vendors || !vendors[0]) {
        throw Error('Invalid Vendor');
      }
    },

    generateFormData: function generateFormData() {
      var postData = new FormData();
      var vendorId = this.get('authorization.vendors')[0].id;
      postData.append('vendorId', vendorId);
      return postData;
    },

    dragEnter: function dragEnter(event) {
      event.preventDefault();
    },
    dragOver: function dragOver(event) {
      event.preventDefault();
    },

    errorHandler: function errorHandler(bulkIoType) {
      this.get('flash').add({
        message: this.get('i18n').t(bulkIoType + '.messages.error'),
        type: 'alert-error'
      });
    },

    exportsErrorHandler: function exportsErrorHandler(bulkIoType, ajaxError) {
      if (ajaxError.errors[0].status === "409") {
        this.get('flash').add({
          message: this.get('i18n').t(bulkIoType + '.messages.duplicateJobExists'),
          type: 'alert-error'
        });
      } else {
        this.errorHandler(bulkIoType);
      }
    },

    successHandler: function successHandler(bulkIoType) {
      this.get('flash').add({
        message: this.get('i18n').t(bulkIoType + '.messages.success'),
        type: 'alert-success'
      });
    },

    drop: function drop(event) {
      event.preventDefault();
      var file = event && event.dataTransfer && event.dataTransfer.files && event.dataTransfer.files[0];

      if (file) {
        this.upload(file);
      }
    },

    upload: function upload(file) {
      var _this = this;

      this.checkAuth();
      if (_goodsGatewayConfigEnvironment['default'].featureFlags.bulkRejectNonCsv && !this.allowedUploadExtensionsRegex.test(file.name)) {
        this.set('showProductUploadErrorModal', true);
        return;
      }

      // create an upload with an empty file. Upload file in a separate call.
      var associatedVendors = this.get('authorization.vendors') || [];
      var postData = { filename: file.name, vendorId: associatedVendors[0].id };
      this.get('gpapi').request('bulk.v1.uploads.create', postData).then(function (resp) {
        _this.uploadFile(resp.upload.id, file, resp.upload.uploadUri);
      }, function () {
        _this.errorHandler('product-upload');
      });
    },

    uploadFile: function uploadFile(uploadId, file, overrideUri) {
      var _this2 = this;

      var uploadUri = overrideUri || this.get('uploadEndpoint') + '/' + uploadId + '/upload_file';
      this.get('ajax').put(uploadUri, {
        data: file,
        cache: false,
        contentType: file.type,
        processData: false,
        dataType: 'text'
      }).then(function () {
        _this2.notifyFileUploadSuccess(uploadId);
      }, function () {
        _this2.notifyFileUploadFailure(uploadId);
      });
    },

    notifyFileUploadSuccess: function notifyFileUploadSuccess(uploadId) {
      var _this3 = this;

      var params = { id: uploadId, uploadStatus: 'complete' };
      this.get('gpapi').request('bulk.v1.uploads.id.upload_result.upload_result', params).then(function () {
        _this3.successHandler('product-upload');
      }, function () {
        _this3.notifyFileUploadFailure();
      });
    },

    notifyFileUploadFailure: function notifyFileUploadFailure(uploadId) {
      var params = { id: uploadId, uploadStatus: 'failed' };
      this.get('gpapi').request('bulk.v1.uploads.id.upload_result.upload_result', params);
      this.errorHandler('product-upload');
    },

    'export': function _export(viewType) {
      var _this4 = this;

      this.checkAuth();

      var vendorId = this.get('authorization.vendors')[0].id;
      var exportUrl = this.get('exportEndpoint') + '?vendorId=' + vendorId + '&view=' + viewType;

      this.get('ajax').post(exportUrl).then(function () {
        _this4.successHandler('catalog-exports');
      }, function (ajaxError) {
        _this4.exportsErrorHandler('catalog-exports', ajaxError);
      });
    },

    actions: {
      downloadGenericTemplate: function downloadGenericTemplate() {
        _goodsGatewayUtilsDownloadUtility['default'].templateDownload(this.genericTemplateId, this.$());
      },
      triggerFileUpload: function triggerFileUpload(file) {
        this.upload(file);
      },
      triggerExport: function triggerExport(viewType) {
        this['export'](viewType);
      },
      hideProductUploadErrorModal: function hideProductUploadErrorModal() {
        this.set('showProductUploadErrorModal', false);
      }
    }
  });
});
define("goods-gateway/components/vp-product-upload/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 8,
                "column": 10
              },
              "end": {
                "line": 13,
                "column": 10
              }
            },
            "moduleName": "goods-gateway/components/vp-product-upload/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("p");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("strong");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);
            morphs[1] = dom.createMorphAt(dom.childAt(element2, [3]), 0, 0);
            return morphs;
          },
          statements: [["inline", "t", ["product-upload.exportFullCatalog.header"], [], ["loc", [null, [10, 22], [10, 69]]], 0, 0], ["inline", "t", ["product-upload.exportFullCatalog.message"], [], ["loc", [null, [11, 19], [11, 67]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 15,
                "column": 10
              },
              "end": {
                "line": 20,
                "column": 10
              }
            },
            "moduleName": "goods-gateway/components/vp-product-upload/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("p");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("strong");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 0, 0);
            morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]), 0, 0);
            return morphs;
          },
          statements: [["inline", "t", ["product-upload.genericTemplate.header"], [], ["loc", [null, [17, 22], [17, 67]]], 0, 0], ["inline", "t", ["product-upload.genericTemplate.message"], [], ["loc", [null, [18, 19], [18, 65]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 22,
                "column": 10
              },
              "end": {
                "line": 27,
                "column": 10
              }
            },
            "moduleName": "goods-gateway/components/vp-product-upload/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("p");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("strong");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);
            morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 0, 0);
            return morphs;
          },
          statements: [["inline", "t", ["product-upload.exportCostAndQtyCatalog.header"], [], ["loc", [null, [24, 22], [24, 75]]], 0, 0], ["inline", "t", ["product-upload.exportCostAndQtyCatalog.message"], [], ["loc", [null, [25, 19], [25, 73]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child3 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 34,
                "column": 6
              },
              "end": {
                "line": 36,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-product-upload/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "vp-template-ui", [], ["MRTTaxonomy", ["subexpr", "@mut", [["get", "presentedTaxonomy", ["loc", [null, [35, 37], [35, 54]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [35, 8], [35, 56]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-product-upload/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("section");
          dom.setAttribute(el1, "class", "row bulk-file-io");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column--1of4");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "template-links");
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("        ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "spacer md-column--1of4");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1]);
          var element4 = dom.childAt(element3, [1, 1]);
          var morphs = new Array(5);
          morphs[0] = dom.createMorphAt(element4, 1, 1);
          morphs[1] = dom.createMorphAt(element4, 3, 3);
          morphs[2] = dom.createMorphAt(element4, 5, 5);
          morphs[3] = dom.createMorphAt(element3, 5, 5);
          morphs[4] = dom.createMorphAt(element3, 7, 7);
          return morphs;
        },
        statements: [["block", "mx-button", [], ["action", "triggerExport", "data", "product", "secondary", true, "class", "template-link"], 0, null, ["loc", [null, [8, 10], [13, 24]]]], ["block", "mx-button", [], ["action", "downloadGenericTemplate", "secondary", true, "class", "template-link"], 1, null, ["loc", [null, [15, 10], [20, 24]]]], ["block", "mx-button", [], ["action", "triggerExport", "data", "cost_and_quantity", "secondary", true, "class", "template-link"], 2, null, ["loc", [null, [22, 10], [27, 24]]]], ["inline", "vp-drag-drop", [], ["triggerFileUpload", "triggerFileUpload"], ["loc", [null, [32, 6], [32, 60]]], 0, 0], ["block", "if", [["get", "showTemplateUi", ["loc", [null, [34, 12], [34, 26]]], 0, 0, 0, 0]], [], 3, null, ["loc", [null, [34, 6], [36, 13]]]]],
        locals: [],
        templates: [child0, child1, child2, child3]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 47,
                "column": 2
              },
              "end": {
                "line": 49,
                "column": 2
              }
            },
            "moduleName": "goods-gateway/components/vp-product-upload/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("strong");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["inline", "t", ["product-upload.ok"], [], ["loc", [null, [48, 12], [48, 37]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 46,
              "column": 0
            },
            "end": {
              "line": 50,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-product-upload/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-button", [], ["action", "hideProductUploadErrorModal"], 0, null, ["loc", [null, [47, 2], [49, 16]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-product-upload/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h1");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("section");
        dom.setAttribute(el2, "class", "row bulk-history-tables");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element5 = dom.childAt(fragment, [0]);
        var element6 = dom.childAt(element5, [5]);
        var morphs = new Array(6);
        morphs[0] = dom.createMorphAt(dom.childAt(element5, [1]), 0, 0);
        morphs[1] = dom.createMorphAt(element5, 3, 3);
        morphs[2] = dom.createMorphAt(element6, 1, 1);
        morphs[3] = dom.createMorphAt(element6, 3, 3);
        morphs[4] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[5] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        return morphs;
      },
      statements: [["inline", "t", ["product-upload.heading"], [], ["loc", [null, [2, 6], [2, 36]]], 0, 0], ["block", "if", [["get", "authorization.isExternal", ["loc", [null, [4, 8], [4, 32]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [4, 2], [38, 9]]]], ["inline", "vp-catalog-export-status", [], ["catalogExports", ["subexpr", "@mut", [["get", "catalogExports", ["loc", [null, [41, 46], [41, 60]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [41, 4], [41, 62]]], 0, 0], ["inline", "vp-product-uploads-status", [], ["productUploads", ["subexpr", "@mut", [["get", "productUploads", ["loc", [null, [42, 47], [42, 61]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [42, 4], [42, 63]]], 0, 0], ["block", "mx-modal", [], ["open", ["subexpr", "@mut", [["get", "showProductUploadErrorModal", ["loc", [null, [46, 17], [46, 44]]], 0, 0, 0, 0]], [], [], 0, 0], "id", "bulk-non-csv-error", "closeable", false, "title", ["subexpr", "t", ["product-upload.invalidFileTypeError"], [], ["loc", [null, [46, 91], [46, 132]]], 0, 0]], 1, null, ["loc", [null, [46, 0], [50, 13]]]], ["content", "vp-taxonomy-request-link", ["loc", [null, [52, 0], [52, 28]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-product-uploads-status/component', ['exports', 'ember', 'goods-gateway/utils/download-utility'], function (exports, _ember, _goodsGatewayUtilsDownloadUtility) {
  exports['default'] = _ember['default'].Component.extend({
    classNames: ['md-column--1of2'],
    gpapi: _ember['default'].inject.service(),

    productUploads: [],
    isProductUploadsEmpty: _ember['default'].computed('productUploads', function () {
      return this.get('productUploads').length === 0;
    }),

    actions: {
      downloadFile: function downloadFile(endpoint, id) {
        var _this = this;

        this.get('gpapi').request('bulk.v1.uploads.id.show', { id: id }).then(function (data) {
          var overrideUri = {
            "errors": data.upload.errorUri,
            "input": data.upload.inputUri
          };
          _goodsGatewayUtilsDownloadUtility['default'].fileDownload(endpoint, id, _this.$(), overrideUri[endpoint]);
        });
      }
    }
  });
});
define("goods-gateway/components/vp-product-uploads-status/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 8
            },
            "end": {
              "line": 9,
              "column": 8
            }
          },
          "moduleName": "goods-gateway/components/vp-product-uploads-status/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["inline", "t", ["product-upload.productUploadsTable.vendorHeader"], [], ["loc", [null, [8, 14], [8, 69]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 17,
              "column": 4
            },
            "end": {
              "line": 24,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-product-uploads-status/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tbody");
          dom.setAttribute(el1, "class", "no-jobs");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("tr");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("td");
          dom.setAttribute(el3, "colspan", "4");
          var el4 = dom.createTextNode(" ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode(" ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1, 1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["product-upload.productUploadsTable.noJobsFound"], [], ["loc", [null, [20, 27], [20, 81]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 28,
                  "column": 12
                },
                "end": {
                  "line": 30,
                  "column": 12
                }
              },
              "moduleName": "goods-gateway/components/vp-product-uploads-status/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              dom.setAttribute(el1, "class", "upload-vendorId");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
              return morphs;
            },
            statements: [["content", "upload.vendorId", ["loc", [null, [29, 42], [29, 61]]], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 38,
                  "column": 14
                },
                "end": {
                  "line": 43,
                  "column": 14
                }
              },
              "moduleName": "goods-gateway/components/vp-product-uploads-status/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "download-link");
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("span");
              dom.setAttribute(el2, "class", "circle-wrapper");
              var el3 = dom.createElement("i");
              dom.setAttribute(el3, "class", "fa fa-cloud-download fa-inverse");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("span");
              dom.setAttribute(el2, "class", "error-qty-badge");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element1 = dom.childAt(fragment, [1]);
              var element2 = dom.childAt(element1, [3]);
              var morphs = new Array(2);
              morphs[0] = dom.createElementMorph(element1);
              morphs[1] = dom.createAttrMorph(element2, 'data-qty');
              return morphs;
            },
            statements: [["element", "action", ["downloadFile", "errors", ["get", "upload.id", ["loc", [null, [39, 54], [39, 63]]], 0, 0, 0, 0]], [], ["loc", [null, [39, 21], [39, 65]]], 0, 0], ["attribute", "data-qty", ["get", "upload.failedRows", ["loc", [null, [41, 59], [41, 76]]], 0, 0, 0, 0], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 43,
                  "column": 14
                },
                "end": {
                  "line": 47,
                  "column": 14
                }
              },
              "moduleName": "goods-gateway/components/vp-product-uploads-status/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "download-link");
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createElementMorph(element0);
              morphs[1] = dom.createMorphAt(element0, 1, 1);
              return morphs;
            },
            statements: [["element", "action", ["downloadFile", "input", ["get", "upload.id", ["loc", [null, [44, 53], [44, 62]]], 0, 0, 0, 0]], [], ["loc", [null, [44, 21], [44, 64]]], 0, 0], ["content", "upload.status", ["loc", [null, [45, 18], [45, 35]]], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 26,
                "column": 8
              },
              "end": {
                "line": 50,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-product-uploads-status/template.hbs"
          },
          isEmpty: false,
          arity: 2,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            var el3 = dom.createTextNode("\n              ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("span");
            dom.setAttribute(el3, "class", "underline-on-hover download-link");
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "status-text");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("            ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element3 = dom.childAt(fragment, [1]);
            var element4 = dom.childAt(element3, [3]);
            var morphs = new Array(7);
            morphs[0] = dom.createAttrMorph(element3, 'class');
            morphs[1] = dom.createMorphAt(element3, 1, 1);
            morphs[2] = dom.createElementMorph(element4);
            morphs[3] = dom.createMorphAt(dom.childAt(element4, [1]), 0, 0);
            morphs[4] = dom.createMorphAt(dom.childAt(element3, [5]), 0, 0);
            morphs[5] = dom.createMorphAt(dom.childAt(element3, [7]), 0, 0);
            morphs[6] = dom.createMorphAt(dom.childAt(element3, [9]), 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", [["subexpr", "if", [["get", "upload.hasErrors", ["loc", [null, [27, 26], [27, 42]]], 0, 0, 0, 0], "fail-status"], [], ["loc", [null, [27, 21], [27, 58]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "vp-can", ["read_default"], [], 0, null, ["loc", [null, [28, 12], [30, 23]]]], ["element", "action", ["downloadFile", "input", ["get", "upload.id", ["loc", [null, [31, 48], [31, 57]]], 0, 0, 0, 0]], [], ["loc", [null, [31, 16], [31, 59]]], 0, 0], ["content", "upload.catalogInputFile.filename", ["loc", [null, [32, 61], [32, 97]]], 0, 0, 0, 0], ["inline", "t", [["subexpr", "concat", ["product-upload.productUploadsTable.views.", ["get", "upload.view", ["loc", [null, [34, 72], [34, 83]]], 0, 0, 0, 0]], [], ["loc", [null, [34, 20], [34, 84]]], 0, 0]], [], ["loc", [null, [34, 16], [34, 86]]], 0, 0], ["inline", "moment-format", [["get", "upload.createdAt", ["loc", [null, [35, 32], [35, 48]]], 0, 0, 0, 0], "L LTS"], [], ["loc", [null, [35, 16], [35, 58]]], 0, 0], ["block", "if", [["get", "upload.hasErrors", ["loc", [null, [38, 20], [38, 36]]], 0, 0, 0, 0]], [], 1, 2, ["loc", [null, [38, 14], [47, 21]]]]],
          locals: ["upload", "index"],
          templates: [child0, child1, child2]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 24,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-product-uploads-status/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tbody");
          dom.setAttribute(el1, "class", "jobs-list");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["block", "each", [["get", "productUploads", ["loc", [null, [26, 16], [26, 30]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [26, 8], [50, 17]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 57,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-product-uploads-status/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "class", "product-uploads-status");
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("table");
        dom.setAttribute(el2, "class", "table-lined");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("thead");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("tr");
        dom.setAttribute(el4, "class", "header-row");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        dom.setAttribute(el5, "class", "status-text");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element5 = dom.childAt(fragment, [0]);
        var element6 = dom.childAt(element5, [3]);
        var element7 = dom.childAt(element6, [1, 1]);
        var morphs = new Array(7);
        morphs[0] = dom.createMorphAt(dom.childAt(element5, [1]), 0, 0);
        morphs[1] = dom.createMorphAt(element7, 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element7, [3]), 0, 0);
        morphs[3] = dom.createMorphAt(dom.childAt(element7, [5]), 0, 0);
        morphs[4] = dom.createMorphAt(dom.childAt(element7, [7]), 0, 0);
        morphs[5] = dom.createMorphAt(dom.childAt(element7, [9]), 0, 0);
        morphs[6] = dom.createMorphAt(element6, 3, 3);
        return morphs;
      },
      statements: [["inline", "t", ["product-upload.uploadHistory"], [], ["loc", [null, [3, 6], [3, 42]]], 0, 0], ["block", "vp-can", ["read_default"], [], 0, null, ["loc", [null, [7, 8], [9, 19]]]], ["inline", "t", ["product-upload.productUploadsTable.nameHeader"], [], ["loc", [null, [10, 12], [10, 65]]], 0, 0], ["inline", "t", ["product-upload.productUploadsTable.typeHeader"], [], ["loc", [null, [11, 12], [11, 65]]], 0, 0], ["inline", "t", ["product-upload.productUploadsTable.dateHeader"], [], ["loc", [null, [12, 12], [12, 65]]], 0, 0], ["inline", "t", ["product-upload.productUploadsTable.statusHeader"], [], ["loc", [null, [13, 32], [13, 87]]], 0, 0], ["block", "if", [["get", "isProductUploadsEmpty", ["loc", [null, [17, 10], [17, 31]]], 0, 0, 0, 0]], [], 1, 2, ["loc", [null, [17, 4], [53, 11]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define('goods-gateway/components/vp-product-variation-generator/component', ['exports', 'ember', 'goods-gateway/utils/content-for-locale', 'goods-gateway/constants/groupon-variant-categories', 'goods-gateway/models/generator'], function (exports, _ember, _goodsGatewayUtilsContentForLocale, _goodsGatewayConstantsGrouponVariantCategories, _goodsGatewayModelsGenerator) {

  var ProxyCategory = _ember['default'].ObjectProxy.extend({
    init: function init() {
      this._super.apply(this, arguments);
      this.selectedValues = [];
    },

    isValid: _ember['default'].computed('required', 'selectedValues.[]', function () {
      if (!this.get('required')) {
        return true;
      }
      return this.get('selectedValues.length');
    })
  });

  exports['default'] = _ember['default'].Component.extend({
    i18n: _ember['default'].inject.service(),

    // args
    items: null,
    selectedMRT: {
      variantCategories: []
    },

    addAttributeValue: function addAttributeValue(selectedValue) {
      var _this = this;

      var MRTA = this.selectedCategoryAttributes().find(function (c) {
        return c.selectedValues.includes(selectedValue);
      });

      if (MRTA.selectedValues.length > 1) {
        var combinations = this.buildUniqueItemAttributes(MRTA, selectedValue);
        combinations.forEach(function (combination) {
          _goodsGatewayModelsGenerator['default'].createItem(_this.get('items'), _this.get('selectedMRT'), combination);
        });
      } else if (this.get('hasItems')) {
        _goodsGatewayModelsGenerator['default'].addAttributeToItems(this.get('items'), this.buildAttributeValue(MRTA, selectedValue));
      } else {
        _goodsGatewayModelsGenerator['default'].createItem(this.get('items'), this.get('selectedMRT'), [this.buildAttributeValue(MRTA, selectedValue)]);
      }
    },

    buildAttributeValue: function buildAttributeValue(MRTA, MRTAValue) {
      var attrValue = {
        attrNameId: MRTA.get('id'),
        attrValueId: null,
        localizedContents: []
      };

      var localizedContent = MRTAValue.get('localizedContents.firstObject');

      if (localizedContent.get('attrValue')) {
        attrValue.localizedContents.addObject({
          locale: localizedContent.get('locale'),
          attrValue: localizedContent.get('attrValue')
        });
      } else {
        attrValue.attrValueId = MRTAValue.get('id');
      }
      return attrValue;
    },

    buildUniqueItemAttributes: function buildUniqueItemAttributes(newMRTA, newValue) {
      var _this2 = this;

      var selectedMRTAs = this.selectedCategoryAttributes();
      var attributesPerItem = selectedMRTAs.reduce(function (items, MRTA) {
        if (_ember['default'].isEqual(MRTA, newMRTA)) {
          return items;
        } // Skip the parent category of the new attribute

        var newItems = [];
        var selectedValues = MRTA.get('selectedValues');
        selectedValues.forEach(function (MRTAValue) {
          items.forEach(function (originalItem) {
            var attrValue = _this2.buildAttributeValue(MRTA, MRTAValue);
            newItems.push(originalItem.concat(attrValue));
          });
        });
        return newItems;
      }, [[]]);

      attributesPerItem.forEach(function (attributes) {
        attributes.pushObject(_this2.buildAttributeValue(newMRTA, newValue));
      });

      return attributesPerItem;
    },

    removeAttributeValue: function removeAttributeValue(selectedValue) {
      var MRTA = this.selectedCategoryAttributes().find(function (c) {
        return c.selectedValues.includes(selectedValue);
      });

      var attrValue = this.buildAttributeValue(MRTA, selectedValue);

      if (MRTA.selectedValues.length > 1) {
        _goodsGatewayModelsGenerator['default'].deleteItemsWithAttribute(this.get('items'), attrValue);
      } else {
        _goodsGatewayModelsGenerator['default'].removeAttributeFromItems(this.get('items'), attrValue);
      }
    },

    // does not update correctly as a computed property
    selectedCategoryAttributes: function selectedCategoryAttributes() {
      return this.get('categoryAttributes').filter(function (category) {
        return category.selectedValues.length > 0;
      });
    },

    // helpers
    hasItems: _ember['default'].computed.notEmpty('items'),

    hasCategoryAttributes: _ember['default'].computed.gt('categoryAttributes.length', 0),

    categoryAttributes: _ember['default'].computed('selectedMRT.id', function () {
      var _this3 = this;

      var categories = this.get('selectedMRT.variantCategories').reduce(function (validCategories, variantCategory) {
        if (_this3._nonMerchantFacing(variantCategory)) {
          return validCategories;
        }
        if (!variantCategory.get('canBeVariation')) {
          return validCategories;
        }

        var proxyValues = variantCategory.get('values').map(function (variantValue) {
          var name = undefined,
              localizedContent = undefined;
          localizedContent = (0, _goodsGatewayUtilsContentForLocale['default'])(_this3.get('i18n.locale'), variantValue.get('localizedContents'));
          if (localizedContent) {
            name = localizedContent.get('name');
          }

          return _ember['default'].ObjectProxy.create({
            content: variantValue,
            displayName: name
          });
        });

        validCategories.push(ProxyCategory.create({
          content: variantCategory,
          selectableValues: proxyValues
        }));

        return validCategories;
      }, []);

      categories.forEach(function (category) {
        category.selectedValues.addArrayObserver(_this3, {
          willChange: function willChange(selectedValues, offset, removeCount) {
            if (removeCount > 0) {
              this.removeAttributeValue(selectedValues[offset]);
            }
          },
          didChange: function didChange(selectedValues, offset, removeCount, addCount) {
            if (addCount > 0) {
              this.addAttributeValue(selectedValues[offset]);
            }
          }
        });
      });

      return categories;
    }),

    _nonMerchantFacing: function _nonMerchantFacing(variantCategory) {
      return _goodsGatewayConstantsGrouponVariantCategories.GROUPON_VARIANT_CATEGORIES.includes(variantCategory.get('id'));
    }
  });
});
define("goods-gateway/components/vp-product-variation-generator/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 6
              },
              "end": {
                "line": 8,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-product-variation-generator/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "md-column--1of3");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "vp-category-attribute", [], ["attribute", ["subexpr", "@mut", [["get", "attribute", ["loc", [null, [6, 44], [6, 53]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [6, 10], [6, 55]]], 0, 0]],
          locals: ["attribute"],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-product-variation-generator/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("section");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "row");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]), 1, 1);
          return morphs;
        },
        statements: [["block", "each", [["get", "categoryAttributes", ["loc", [null, [4, 14], [4, 32]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [4, 6], [8, 15]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-product-variation-generator/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "hasCategoryAttributes", ["loc", [null, [1, 6], [1, 27]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [1, 0], [11, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-product-variations-count/component', ['exports', 'ember'], function (exports, _ember) {

  var APPROVED_STATE = 'approved';

  exports['default'] = _ember['default'].Component.extend({
    //args
    items: [], // or
    count: null,
    activeCount: null,

    // attributes
    classNames: ['vp-product-variations-count'],

    //helpers
    itemCount: _ember['default'].computed('count', 'items.[]', function () {
      if (_ember['default'].isPresent(this.get('count'))) {
        return this.get('count');
      }
      return this.get('items.length');
    }),

    _activeItemCount: _ember['default'].computed('items.[]', function () {
      var activeItems = this.get('items').filterBy('approvalStatus', APPROVED_STATE);
      return activeItems.length;
    }),

    activeItemCountElement: _ember['default'].computed('_activeItemCount', function () {
      if (_ember['default'].isPresent(this.get('activeCount'))) {
        return this.get('activeCount');
      }

      var element = _ember['default'].$('<span>', {
        'class': 'active',
        html: this.get('_activeItemCount')
      });
      return element.prop('outerHTML');
    })
  });
});
define("goods-gateway/components/vp-product-variations-count/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-product-variations-count/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "t", ["vp-product-variations-count.outOf"], ["activeItemCountElement", ["subexpr", "@mut", [["get", "activeItemCountElement", ["loc", [null, [1, 63], [1, 85]]], 0, 0, 0, 0]], [], [], 0, 0], "itemCount", ["subexpr", "@mut", [["get", "itemCount", ["loc", [null, [1, 96], [1, 105]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [1, 0], [1, 107]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-product/attachment/component', ['exports', 'ember', 'goods-gateway/utils/parse-uri'], function (exports, _ember, _goodsGatewayUtilsParseUri) {

  var MAX_RECORDS = {
    warranty: 1,
    proofOfPricing: Infinity,
    proofOfAuthenticity: Infinity
  };

  exports['default'] = _ember['default'].Component.extend({
    // dependencies
    i18n: _ember['default'].inject.service(),
    flashMessages: _ember['default'].inject.service('flashMessages'),

    // args
    attachments: null,
    attachmentType: null,
    newAttachment: null,

    // vars
    showAddWarrantyModal: false,

    creationIsEnabled: _ember['default'].computed('attachmentType', 'attachments.length', function () {
      var maxAllowableForType = MAX_RECORDS[this.get('attachmentType')];
      var sizeOfAttachments = this.get('attachments').filterBy('attachmentType', this.get('attachmentType')).length;
      return sizeOfAttachments < maxAllowableForType;
    }),

    warrantyAttachments: _ember['default'].computed('attachments', function () {
      return this.get('attachments').filterBy('attachmentType', 'warranty');
    }),

    actions: {
      displayWarrantyAttachmentModal: function displayWarrantyAttachmentModal() {
        var newAttachment = this.get('attachments').createRecord({
          attachmentType: this.get('attachmentType')
        });
        this.set('newAttachment', newAttachment);
        this.set('showAddWarrantyModal', true);
      },

      closeWarrantyAttachmentModal: function closeWarrantyAttachmentModal() {
        var _this = this;

        this.get('newAttachment').destroyRecord().then(function () {
          _this.set('newAttachment', null);
          _this.set('showAddWarrantyModal', false);
        });
      },

      addNewWarranty: function addNewWarranty() {
        var newWarranty = this.get('newAttachment');
        newWarranty.set('filename', this.inferFilenameFromSourceUri(newWarranty.get('sourceUri')));
        this.get('flashMessages').add({
          message: this.get('i18n').t('models.attachment.saveProductNotification'),
          type: 'alert-notify',
          sticky: false
        });
        this.set('showAddWarrantyModal', false);
      }
    },

    inferFilenameFromSourceUri: function inferFilenameFromSourceUri(sourceUri) {
      return (0, _goodsGatewayUtilsParseUri['default'])(sourceUri).file || this.get('i18n').t('models.attachment.noFileName');
    }
  });
});
define("goods-gateway/components/vp-product/attachment/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 5,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-product/attachment/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "class", "mx-icon-upload");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["models.attachment.warrantyButton"], [], ["loc", [null, [4, 4], [4, 44]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 4
            },
            "end": {
              "line": 10,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-product/attachment/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-attachment-card", [], ["attachment", ["subexpr", "@mut", [["get", "attachment", ["loc", [null, [9, 38], [9, 48]]], 0, 0, 0, 0]], [], [], 0, 0], "isHidden", ["subexpr", "@mut", [["get", "showAddWarrantyModal", ["loc", [null, [9, 58], [9, 78]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [9, 6], [9, 80]]], 0, 0]],
        locals: ["attachment"],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 32,
                "column": 8
              },
              "end": {
                "line": 34,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-product/attachment/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["models.attachment.submitButton"], [], ["loc", [null, [33, 10], [33, 48]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 14,
              "column": 0
            },
            "end": {
              "line": 38,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-product/attachment/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("form");
          dom.setAttribute(el1, "action", "#");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "row");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "md-column");
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(element0, 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element0, [3, 1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "vp-field", [], ["id", "new-warranty-srcuri", "model", ["subexpr", "@mut", [["get", "newAttachment", ["loc", [null, [22, 12], [22, 25]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", "new-warranty", "key", "sourceUri", "tRoot", "models.attachment", "required", true, "placeholder", ["subexpr", "t", ["models.attachment.placeholder"], [], ["loc", [null, [27, 18], [27, 53]]], 0, 0]], ["loc", [null, [20, 4], [28, 6]]], 0, 0], ["block", "mx-button", [], ["action", "addNewWarranty", "class", "warranty-attachment-submit", "enabled", ["subexpr", "@mut", [["get", "newAttachment.isValid", ["loc", [null, [32, 88], [32, 109]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [32, 8], [34, 22]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-product/attachment/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("ul");
        dom.setAttribute(el2, "class", "attachment-list warranty-attachment-list");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(element1, 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "mx-button", [], ["class", "warranty-create-button", "enabled", ["subexpr", "@mut", [["get", "creationIsEnabled", ["loc", [null, [2, 54], [2, 71]]], 0, 0, 0, 0]], [], [], 0, 0], "action", "displayWarrantyAttachmentModal", "secondary", true], 0, null, ["loc", [null, [2, 2], [5, 16]]]], ["block", "each", [["get", "warrantyAttachments", ["loc", [null, [8, 12], [8, 31]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [8, 4], [10, 13]]]], ["block", "mx-modal", [], ["open", ["subexpr", "@mut", [["get", "showAddWarrantyModal", ["loc", [null, [14, 17], [14, 37]]], 0, 0, 0, 0]], [], [], 0, 0], "title", ["subexpr", "t", ["models.attachment.warrantyHeader"], [], ["loc", [null, [15, 8], [15, 46]]], 0, 0], "class", "warranty-creation-dialog", "close", ["subexpr", "action", ["closeWarrantyAttachmentModal"], [], ["loc", [null, [17, 8], [17, 47]]], 0, 0]], 2, null, ["loc", [null, [14, 0], [38, 13]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define('goods-gateway/components/vp-product/component', ['exports', 'ember', 'ember-validations', 'goods-gateway/mixins/product-state', 'goods-gateway/mixins/search', 'goods-gateway/config/environment', 'goods-gateway/utils/replace-underscores-with-pipes', 'goods-gateway/constants/validations'], function (exports, _ember, _emberValidations, _goodsGatewayMixinsProductState, _goodsGatewayMixinsSearch, _goodsGatewayConfigEnvironment, _goodsGatewayUtilsReplaceUnderscoresWithPipes, _goodsGatewayConstantsValidations) {
  var _slice = Array.prototype.slice;
  exports['default'] = _ember['default'].Component.extend(_goodsGatewayMixinsSearch['default'], _goodsGatewayMixinsProductState['default'], _emberValidations['default'], {
    // dependencies
    i18n: _ember['default'].inject.service(),
    store: _ember['default'].inject.service('store'),
    flashMessages: _ember['default'].inject.service('flashMessages'),
    showSearch: false,

    //featureFlags
    enableProductDeletion: _goodsGatewayConfigEnvironment['default'].featureFlags.enableProductDeletion,
    displayWarrantyAttachmentUI: _goodsGatewayConfigEnvironment['default'].featureFlags.warrantyAttachmentUI,

    // args
    itemBuffer: _ember['default'].Object.create({
      manufacturer: null,
      brandName: null
    }),

    itemId: null,
    product: null,

    validations: {
      'itemBuffer.manufacturer': _goodsGatewayConstantsValidations.BRAND_MANUFACTURER_VALIDATION,
      'itemBuffer.brandName': _goodsGatewayConstantsValidations.BRAND_MANUFACTURER_VALIDATION
    },

    init: function init() {
      this._super.apply(this, arguments);

      if (_ember['default'].isBlank(this.get('category'))) {
        this.set('showSearch', true);
      }

      this._searchEngineInstances = _ember['default'].Object.create();
      var categorySearchConfig = { hideLeaves: false, hideNonLeaves: true };
      this.set('categorySearches', [this.createSearchEngine('categoryIds', categorySearchConfig)]);
      this.set('vendorSearches', [this.createSearchEngine('vendorId')]);
    },

    didReceiveAttrs: function didReceiveAttrs() {
      this._super.apply(this, arguments);

      var firstItem = this.get('product.items.firstObject');
      if (firstItem) {
        this.get('itemBuffer').setProperties({
          manufacturer: firstItem.get('manufacturer'),
          brandName: firstItem.get('brand.name')
        });
      } else {
        this.get('itemBuffer').setProperties({
          manufacturer: null,
          brandName: null
        });
      }

      this.validate()['catch'](function () {});
    },

    // attributes
    classNames: ['vp-product'],
    classNameBindings: 'categoryIsLeaf:leaf',
    categoryIsLeaf: _ember['default'].computed.equal('category.children.length', 0),

    category: _ember['default'].computed('selectedCategory.id', 'product.items.firstObject.category.id', function () {
      return this.get('selectedCategory') || this.get('product.items.firstObject.category');
    }),

    categoryDescription: _ember['default'].computed('category', function () {
      var description = this.get('category.localizedContents.firstObject.description');
      if (description) {
        return (0, _goodsGatewayUtilsReplaceUnderscoresWithPipes['default'])(description);
      }
    }),

    saveError: _ember['default'].computed('isNotSaveable', function () {
      if (this.get('isSaving')) {
        return;
      } else if (this.get('isPageInvalid')) {
        return this.get('i18n').t('vp-product.requiredFieldError');
      } else {
        return this.get('i18n').t('vp-product.missingItemError');
      }
    }),

    selectedCategory: null,

    // helpers
    _syncBufferToItems: _ember['default'].observer('itemBuffer.manufacturer', 'itemBuffer.brandName', 'product.items.length', function () {
      var _this = this;

      this.get('product.items').forEach(function (item) {
        item.set('manufacturer', _this.get('itemBuffer.manufacturer'));
        item.set('brand.name', _this.get('itemBuffer.brandName'));
      });
    }),

    hasItems: _ember['default'].computed.notEmpty('product.items'),

    isCurrentlyFeatured: _ember['default'].computed.alias('product.feature.isActive'),

    isPageInvalid: _ember['default'].computed('product.isInvalid', 'product.hasInvalidChildren', 'hasLeafCategory', function () {
      return this.get('product.isInvalid') || this.get('product.hasInvalidChildren') || !this.get('hasLeafCategory');
    }),

    isPageValid: _ember['default'].computed.not('isPageInvalid'),

    isSaveable: _ember['default'].computed('isSaving', 'isPageInvalid', 'isDirty', 'hasItems', function () {
      return !this.get('isSaving') && this.get('isPageValid') && this.get('hasItems') && this.get('isDirty');
    }),

    isNotSaveable: _ember['default'].computed.not('isSaveable'),

    isSaving: _ember['default'].computed('product.isSaving', 'product.items.@each.isSaving', function () {
      return this.get('product.isSaving') || this.get('product.items').isAny('isSaving');
    }),

    hasLeafCategory: _ember['default'].computed('category.id', function () {
      if (_ember['default'].isBlank(this.get('category'))) {
        return false;
      }
      return _ember['default'].isEmpty(this.get('category.children'));
    }),

    saveTranslationKey: _ember['default'].computed('product.isNew', function () {
      return this.get('product.isNew') ? 'vp-product.saveAndContinue' : 'vp-product.save';
    }),

    showGenerator: _ember['default'].computed('category', 'product.id', function () {
      return this.get('category') && !this.get('product.id');
    }),

    bulletPointErrorModel: _ember['default'].computed('product.localizedContents.@each', function () {
      return this.get('product.localizedContents').findBy('locale', 'en_US');
    }),

    actions: {
      addImage: function addImage() {
        this.get('product.images').createFragment('product.image');
      },

      approveItems: function approveItems() {
        this.sendAction.apply(this, ['approveItems'].concat(_slice.call(arguments)));
      },

      deleteProduct: function deleteProduct() {
        this.sendAction('deleteProduct');
      },

      deleteItem: function deleteItem(item) {
        this.sendAction('deleteItem', item);
      },

      rejectItems: function rejectItems() {
        this.sendAction.apply(this, ['rejectItems'].concat(_slice.call(arguments)));
      },

      save: function save() {
        this.sendAction('save');
      },

      selectVendor: function selectVendor(criteria) {
        this.sendAction('selectVendor', criteria);
      },

      setCategory: function setCategory(criteria) {
        var _this2 = this;

        var id = criteria.categoryIds;

        this.get('store').find('category', id).then(function (category) {
          _this2.set('selectedCategory', category);
          _this2.set('showSearch', false);
          _this2.sendAction('setCategory', category);
        });
      },

      showSearch: function showSearch() {
        this.set('showSearch', true);
      },

      showValue: function showValue() {
        this.set('showSearch', false);
      }
    }
  });
});
define('goods-gateway/components/vp-product/items/component', ['exports', 'ember', 'goods-gateway/constants/universal-id-types', 'goods-gateway/mixins/product-state', 'goods-gateway/models/generator', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConstantsUniversalIdTypes, _goodsGatewayMixinsProductState, _goodsGatewayModelsGenerator, _goodsGatewayConfigEnvironment) {

  var DEFAULT_UNIVERSAL_ID_TYPE = 'soft-upc';
  var LENGTH_TO_UNIVERSAL_ID_TYPE = {
    8: 'gtin-8',
    12: 'gtin-12',
    10: 'isbn-10',
    13: 'gtin-13',
    14: 'gtin-14'
  };

  exports['default'] = _ember['default'].Component.extend(_goodsGatewayMixinsProductState['default'], {
    i18n: _ember['default'].inject.service('i18n'),

    // args
    product: null,
    selectAll: false,
    selectedMRT: null,

    //featureFlags
    enableOptionDeletion: _goodsGatewayConfigEnvironment['default'].featureFlags.enableOptionDeletion,

    // lifecycle
    init: function init() {
      this._initSelectOptions();
      this._preselectItem(this.get('itemId'));
      this._super.apply(this, arguments);
    },

    didRender: function didRender() {
      this._scrollToCheckbox();
    },

    didReceiveAttrs: function didReceiveAttrs() {
      if (this.get('selectAll')) {
        this._updateAllSelections(true);
      }
    },

    // helpers
    canApprove: _ember['default'].computed('selectedItems.@each.isNew', function () {
      return this.get('selectedItems.length') && !this.get('selectedItems').isAny('isNew');
    }),

    canReject: _ember['default'].computed.alias('canApprove'),

    selectAllCheckboxValue: false,
    _isSelectingAllItems: false,

    showRejectionModal: false,

    isAnyItemSaved: _ember['default'].computed('presentedItems.@each.isNew', function () {
      return this.get('presentedItems').isAny('isNew', false);
    }),

    pageTitleTranslationKey: _ember['default'].computed('product.items.[]', function () {
      var root = 'vp-product-items.page';
      return this.get('product.items.length') === 1 ? root + '.detailsTitle' : root + '.variationsTitle';
    }),

    pageDescriptionTranslationKey: _ember['default'].computed('product.items.[]', function () {
      var root = 'vp-product-items.page';
      return this.get('product.items.length') === 1 ? root + '.detailsDescription' : root + '.variationsDescription';
    }),

    presentedItems: _ember['default'].computed.map('product.items', function (item) {
      return _ember['default'].ObjectProxy.create({
        content: item,
        isSelected: false
      });
    }),

    selectedItems: _ember['default'].computed('presentedItems.@each.isSelected', function () {
      return this.get('presentedItems').filter(function (item) {
        return item.get('isSelected');
      });
    }),

    hasSelectedItems: _ember['default'].computed.gt('selectedItems.[].length', 0),
    hasSelectedOneItem: _ember['default'].computed.equal('selectedItems.[].length', 1),
    hasVariations: _ember['default'].computed.gt('product.items.[].length', 1),
    notAllItemsSelected: _ember['default'].computed('presentedItems.@each.isSelected', function () {
      return this.get('presentedItems').isAny('isSelected', false);
    }),
    canDeleteItems: _ember['default'].computed.and('hasVariations', 'hasSelectedItems', 'notAllItemsSelected'),

    watchSelections: _ember['default'].observer('presentedItems.@each.isSelected', function () {
      if (this.get('_isSelectingAllItems')) {
        return;
      }
      var unselectedItem = this.get('presentedItems').findBy('isSelected', false);
      if (_ember['default'].isPresent(unselectedItem)) {
        this.set('selectAllCheckboxValue', false);
      }
    }),

    toggleSelectAll: _ember['default'].observer('selectAllCheckboxValue', function () {
      var value = this.get('selectAllCheckboxValue');
      this._updateAllSelections(value);
    }),

    _updateAllSelections: function _updateAllSelections(value) {
      this.set('_isSelectingAllItems', true);
      this.get('presentedItems').forEach(function (item) {
        item.set('isSelected', value);
      });
      this.set('_isSelectingAllItems', false);
    },

    isEditingItems: false,

    _deselectItemsCallback: function _deselectItemsCallback(items) {
      return function () {
        items.setEach('isSelected', false);
      };
    },

    _initSelectOptions: function _initSelectOptions() {
      var i18n = this.get('i18n');
      this.set('universalIdTypes', _goodsGatewayConstantsUniversalIdTypes['default'].map(function (universalId) {
        return {
          label: i18n.t('constants.universalIdTypes.' + universalId),
          value: universalId
        };
      }));
    },

    _preselectItem: function _preselectItem(itemId) {
      if (itemId) {
        var item = this.get('presentedItems').findBy('id', itemId);
        if (item) {
          item.set('isSelected', true);
        }
      }
    },

    _scrollToCheckbox: function _scrollToCheckbox() {
      var checkbox = this.$('input[type=checkbox]:checked')[0];
      if (checkbox) {
        checkbox.scrollIntoView();
      }
    },

    _universalIdWatcher: _ember['default'].observer('product._universalIdValues', function () {
      this.get('product.items').forEach(function (item) {
        var length = item.get('universalId.value.length');
        var type = LENGTH_TO_UNIVERSAL_ID_TYPE[length] || DEFAULT_UNIVERSAL_ID_TYPE;
        item.set('universalId.type', type);
      });
    }),

    actions: {
      addItem: function addItem() {
        var category = this.get('product.items.firstObject.category') || this.get('selectedMRT');
        return _goodsGatewayModelsGenerator['default'].createItem(this.get('product.items'), category);
      },

      apply: function apply() {
        this.set('isEditingItems', false);
      },

      approveItems: function approveItems() {
        var items = this.get('selectedItems');
        this.sendAction('approveItems', items.mapBy('content'), this._deselectItemsCallback(items));
      },

      closeRejectionModal: function closeRejectionModal() {
        this.set('showRejectionModal', false);
      },

      deleteItems: function deleteItems() {
        var _this = this;

        this.get('selectedItems').forEach(function (item) {
          _this.sendAction('deleteItem', item.get('content'));
        });
      },

      editItem: function editItem(item) {
        this.get('selectedItems').forEach(function (selectedItem) {
          selectedItem.set('isSelected', false);
        });
        item.set('isSelected', true);
        this.send('editItems');
      },

      editItems: function editItems() {
        if (this.get('hasSelectedItems')) {
          this.set('isEditingItems', true);
        }
      },

      editAll: function editAll() {
        this.get('presentedItems').forEach(function (item) {
          item.set('isSelected', true);
        });
        this.send('editItems');
      },

      rejectItems: function rejectItems(reason) {
        var items = this.get('selectedItems');
        this.sendAction('rejectItems', items.mapBy('content'), reason, this._deselectItemsCallback(items));
      },

      showRejectionModal: function showRejectionModal() {
        this.set('showRejectionModal', true);
      }
    }
  });
});
define("goods-gateway/components/vp-product/items/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 6
            },
            "end": {
              "line": 16,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column spacer");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "vp-field", [], ["tRoot", "vp-product-items", "key", "vendorGroupId", "model", ["subexpr", "@mut", [["get", "product", ["loc", [null, [9, 18], [9, 25]]], 0, 0, 0, 0]], [], [], 0, 0], "maxlength", 40, "disabled", ["subexpr", "not", [["get", "product.isNew", ["loc", [null, [11, 26], [11, 39]]], 0, 0, 0, 0]], [], ["loc", [null, [11, 21], [11, 40]]], 0, 0]], ["loc", [null, [6, 10], [12, 12]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 10
            }
          },
          "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("            ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["vp-product-items.editButton"], [], ["loc", [null, [32, 12], [32, 47]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 36,
                "column": 12
              },
              "end": {
                "line": 38,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["vp-product-items.approve"], [], ["loc", [null, [37, 14], [37, 46]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 40,
                "column": 12
              },
              "end": {
                "line": 42,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["vp-product-items.reject"], [], ["loc", [null, [41, 14], [41, 45]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 35,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 10
            }
          },
          "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-button", [], ["id", "approve-items", "secondary", true, "action", "approveItems", "enabled", ["subexpr", "@mut", [["get", "canApprove", ["loc", [null, [36, 89], [36, 99]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [36, 12], [38, 26]]]], ["block", "mx-button", [], ["id", "reject-items", "cautious", true, "secondary", true, "action", "showRejectionModal", "enabled", ["subexpr", "@mut", [["get", "canReject", ["loc", [null, [40, 108], [40, 117]]], 0, 0, 0, 0]], [], [], 0, 0]], 1, null, ["loc", [null, [40, 12], [42, 26]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 46,
                "column": 12
              },
              "end": {
                "line": 48,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["vp-product-items.deleteButton"], [], ["loc", [null, [47, 14], [47, 51]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 45,
              "column": 10
            },
            "end": {
              "line": 49,
              "column": 10
            }
          },
          "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-button", [], ["id", "delete-items", "cautious", true, "secondary", true, "action", "deleteItems", "enabled", ["subexpr", "@mut", [["get", "canDeleteItems", ["loc", [null, [46, 101], [46, 115]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [46, 12], [48, 26]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 10
            }
          },
          "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("            ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["vp-product-items.status"], [], ["loc", [null, [84, 12], [84, 43]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child5 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 142,
                  "column": 14
                },
                "end": {
                  "line": 146,
                  "column": 14
                }
              },
              "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("span");
              dom.setAttribute(el1, "class", "input-addendum");
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["inline", "t", [["subexpr", "concat", ["constants.universalIdTypes.", ["get", "item.universalId.type", ["loc", [null, [144, 60], [144, 81]]], 0, 0, 0, 0]], [], ["loc", [null, [144, 22], [144, 82]]], 0, 0]], [], ["loc", [null, [144, 18], [144, 84]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 131,
                "column": 12
              },
              "end": {
                "line": 147,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "item.universalId.type", ["loc", [null, [142, 20], [142, 41]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [142, 14], [146, 21]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 151,
                "column": 12
              },
              "end": {
                "line": 160,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "vp-field", [], ["showLabel", false, "type", "number", "inputId", ["subexpr", "concat", ["inlineQuantityOnHand-", ["get", "index", ["loc", [null, [155, 56], [155, 61]]], 0, 0, 0, 0]], [], ["loc", [null, [155, 24], [155, 62]]], 0, 0], "model", ["subexpr", "@mut", [["get", "item.offers.firstObject", ["loc", [null, [156, 22], [156, 45]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "quantityOnHand", "disabled", ["subexpr", "eq", [["get", "item.state", ["loc", [null, [158, 29], [158, 39]]], 0, 0, 0, 0], "inactive"], [], ["loc", [null, [158, 25], [158, 51]]], 0, 0]], ["loc", [null, [152, 14], [159, 16]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 160,
                "column": 12
              },
              "end": {
                "line": 162,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["content", "item.offers.firstObject.quantityOnHand", ["loc", [null, [161, 14], [161, 56]]], 0, 0, 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child3 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 166,
                "column": 12
              },
              "end": {
                "line": 175,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "vp-money-field", [], ["required", true, "inputId", ["subexpr", "concat", ["inlineItemCost-", ["get", "index", ["loc", [null, [169, 50], [169, 55]]], 0, 0, 0, 0]], [], ["loc", [null, [169, 24], [169, 56]]], 0, 0], "model", ["subexpr", "@mut", [["get", "item.offers.firstObject", ["loc", [null, [170, 22], [170, 45]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "itemCost.amount", "showLabel", false, "disabled", ["subexpr", "eq", [["get", "item.state", ["loc", [null, [173, 29], [173, 39]]], 0, 0, 0, 0], "inactive"], [], ["loc", [null, [173, 25], [173, 51]]], 0, 0]], ["loc", [null, [167, 14], [174, 16]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child4 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 175,
                "column": 12
              },
              "end": {
                "line": 180,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "format-currency", [["get", "item.offers.firstObject.itemCost.amount", ["loc", [null, [177, 16], [177, 55]]], 0, 0, 0, 0], ["get", "item.offers.firstObject.itemCost.currencyCode", ["loc", [null, [178, 16], [178, 61]]], 0, 0, 0, 0]], [], ["loc", [null, [176, 14], [179, 16]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child5 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 185,
                  "column": 14
                },
                "end": {
                  "line": 200,
                  "column": 14
                }
              },
              "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "auto-approval-status");
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n\n                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "manual-approval-status");
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
              return morphs;
            },
            statements: [["inline", "vp-listing", [], ["status", ["subexpr", "@mut", [["get", "item.autoApprovalStatus", ["loc", [null, [188, 27], [188, 50]]], 0, 0, 0, 0]], [], [], 0, 0], "autoRejectionReasons", ["subexpr", "@mut", [["get", "item.autoRejectionReasons", ["loc", [null, [189, 41], [189, 66]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [187, 18], [190, 20]]], 0, 0], ["inline", "vp-listing", [], ["status", ["subexpr", "@mut", [["get", "item.manualApprovalStatus", ["loc", [null, [195, 27], [195, 52]]], 0, 0, 0, 0]], [], [], 0, 0], "manualRejectionReason", ["subexpr", "@mut", [["get", "item.manualRejectionReason", ["loc", [null, [196, 42], [196, 68]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [194, 18], [197, 20]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 200,
                  "column": 14
                },
                "end": {
                  "line": 210,
                  "column": 14
                }
              },
              "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("\n                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "approval-status");
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["inline", "vp-listing", [], ["status", ["subexpr", "@mut", [["get", "item.approvalStatus", ["loc", [null, [204, 27], [204, 46]]], 0, 0, 0, 0]], [], [], 0, 0], "disableTooltip", ["subexpr", "eq", ["pending", ["get", "item.approvalStatus", ["loc", [null, [205, 49], [205, 68]]], 0, 0, 0, 0]], [], ["loc", [null, [205, 35], [205, 69]]], 0, 0], "autoRejectionReasons", ["subexpr", "@mut", [["get", "item.autoRejectionReasons", ["loc", [null, [206, 41], [206, 66]]], 0, 0, 0, 0]], [], [], 0, 0], "manualRejectionReason", ["subexpr", "@mut", [["get", "item.manualRejectionReason", ["loc", [null, [207, 42], [207, 68]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [203, 18], [208, 20]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 184,
                "column": 12
              },
              "end": {
                "line": 211,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "vp-can", ["read_default"], [], 0, 1, ["loc", [null, [185, 14], [210, 25]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 95,
              "column": 6
            },
            "end": {
              "line": 221,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
        },
        isEmpty: false,
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          dom.setAttribute(el1, "class", "item");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "checkbox-column");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("label");
          dom.setAttribute(el3, "class", "checkbox-label");
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("span");
          dom.setAttribute(el4, "class", "checkbox");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "attributes");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "vendorSku");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "modelNumber");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "universalId");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "quantityOnHand number");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "cost number");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "status");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("a");
          dom.setAttribute(el3, "href", "#");
          dom.setAttribute(el3, "class", "edit-item");
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var element2 = dom.childAt(element1, [17]);
          var element3 = dom.childAt(element2, [3]);
          var morphs = new Array(11);
          morphs[0] = dom.createMorphAt(dom.childAt(element1, [1, 1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(element1, [5]), 1, 1);
          morphs[3] = dom.createMorphAt(dom.childAt(element1, [7]), 1, 1);
          morphs[4] = dom.createMorphAt(dom.childAt(element1, [9]), 1, 1);
          morphs[5] = dom.createMorphAt(dom.childAt(element1, [11]), 1, 1);
          morphs[6] = dom.createMorphAt(dom.childAt(element1, [13]), 1, 1);
          morphs[7] = dom.createMorphAt(dom.childAt(element1, [15]), 1, 1);
          morphs[8] = dom.createMorphAt(element2, 1, 1);
          morphs[9] = dom.createElementMorph(element3);
          morphs[10] = dom.createMorphAt(element3, 1, 1);
          return morphs;
        },
        statements: [["inline", "input", [], ["type", "checkbox", "id", ["subexpr", "concat", ["item-checkbox-", ["get", "index", ["loc", [null, [100, 44], [100, 49]]], 0, 0, 0, 0]], [], ["loc", [null, [100, 19], [100, 50]]], 0, 0], "checked", ["subexpr", "@mut", [["get", "item.isSelected", ["loc", [null, [101, 24], [101, 39]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [99, 14], [101, 41]]], 0, 0], ["inline", "vp-concatenated-categories", [], ["item", ["subexpr", "@mut", [["get", "item", ["loc", [null, [107, 46], [107, 50]]], 0, 0, 0, 0]], [], [], 0, 0], "asList", true], ["loc", [null, [107, 12], [107, 64]]], 0, 0], ["inline", "vp-field", [], ["required", true, "showLabel", false, "inputId", ["subexpr", "concat", ["inlineVendorSku-", ["get", "index", ["loc", [null, [114, 49], [114, 54]]], 0, 0, 0, 0]], [], ["loc", [null, [114, 22], [114, 55]]], 0, 0], "model", ["subexpr", "@mut", [["get", "item", ["loc", [null, [115, 20], [115, 24]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "vendorSku", "disabled", ["subexpr", "eq", [["get", "item.state", ["loc", [null, [116, 27], [116, 37]]], 0, 0, 0, 0], "inactive"], [], ["loc", [null, [116, 23], [116, 49]]], 0, 0]], ["loc", [null, [111, 12], [117, 14]]], 0, 0], ["inline", "vp-field", [], ["showLabel", false, "inputId", ["subexpr", "concat", ["inlineModelNumber-", ["get", "index", ["loc", [null, [123, 51], [123, 56]]], 0, 0, 0, 0]], [], ["loc", [null, [123, 22], [123, 57]]], 0, 0], "model", ["subexpr", "@mut", [["get", "item", ["loc", [null, [124, 20], [124, 24]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "modelNumber", "disabled", ["subexpr", "eq", [["get", "item.state", ["loc", [null, [126, 27], [126, 37]]], 0, 0, 0, 0], "inactive"], [], ["loc", [null, [126, 23], [126, 49]]], 0, 0]], ["loc", [null, [121, 12], [127, 14]]], 0, 0], ["block", "vp-field", [], ["required", true, "validityModel", ["subexpr", "@mut", [["get", "item", ["loc", [null, [133, 28], [133, 32]]], 0, 0, 0, 0]], [], [], 0, 0], "errorKey", "universalId.value", "immediateErrors", ["subexpr", "@mut", [["get", "product.id", ["loc", [null, [135, 30], [135, 40]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", ["subexpr", "concat", ["inlineUniversalId-", ["get", "index", ["loc", [null, [136, 51], [136, 56]]], 0, 0, 0, 0]], [], ["loc", [null, [136, 22], [136, 57]]], 0, 0], "model", ["subexpr", "@mut", [["get", "item.universalId", ["loc", [null, [137, 20], [137, 36]]], 0, 0, 0, 0]], [], [], 0, 0], "showLabel", false, "key", "value", "disabled", ["subexpr", "eq", [["get", "item.state", ["loc", [null, [140, 27], [140, 37]]], 0, 0, 0, 0], "inactive"], [], ["loc", [null, [140, 23], [140, 49]]], 0, 0]], 0, null, ["loc", [null, [131, 12], [147, 25]]]], ["block", "if", [["subexpr", "can", ["write_item_quantity_on_hand"], ["allowExternal", true], ["loc", [null, [151, 18], [151, 72]]], 0, 0]], [], 1, 2, ["loc", [null, [151, 12], [162, 19]]]], ["block", "if", [["subexpr", "can", ["write_item_cost"], ["allowExternal", true], ["loc", [null, [166, 18], [166, 60]]], 0, 0]], [], 3, 4, ["loc", [null, [166, 12], [180, 19]]]], ["block", "unless", [["get", "item.isNew", ["loc", [null, [184, 22], [184, 32]]], 0, 0, 0, 0]], [], 5, null, ["loc", [null, [184, 12], [211, 23]]]], ["inline", "vp-item-validity", [], ["item", ["subexpr", "@mut", [["get", "item", ["loc", [null, [215, 36], [215, 40]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [215, 12], [215, 42]]], 0, 0], ["element", "action", ["editItem", ["get", "item", ["loc", [null, [216, 62], [216, 66]]], 0, 0, 0, 0]], [], ["loc", [null, [216, 42], [216, 68]]], 0, 0], ["inline", "t", ["vp-product-items.editItem"], [], ["loc", [null, [217, 14], [217, 47]]], 0, 0]],
        locals: ["item", "index"],
        templates: [child0, child1, child2, child3, child4, child5]
      };
    })();
    var child6 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 225,
              "column": 2
            },
            "end": {
              "line": 229,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1, "href", "#");
          dom.setAttribute(el1, "id", "add-item");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element0);
          morphs[1] = dom.createMorphAt(element0, 1, 1);
          return morphs;
        },
        statements: [["element", "action", ["addItem"], [], ["loc", [null, [226, 30], [226, 50]]], 0, 0], ["inline", "t", ["vp-product-items.addItem"], [], ["loc", [null, [227, 6], [227, 38]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child7 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 232,
                "column": 4
              },
              "end": {
                "line": 239,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "id", "edit-items-modal");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "vp-item-editor", [], ["selectedItems", ["subexpr", "@mut", [["get", "selectedItems", ["loc", [null, [235, 24], [235, 37]]], 0, 0, 0, 0]], [], [], 0, 0], "apply", "apply"], ["loc", [null, [234, 8], [237, 10]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 231,
              "column": 2
            },
            "end": {
              "line": 240,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "isEditingItems", ["loc", [null, [232, 10], [232, 24]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [232, 4], [239, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child8 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 243,
              "column": 0
            },
            "end": {
              "line": 248,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-inventory-reject-modal", [], ["close", "closeRejectionModal", "confirmReject", "rejectItems"], ["loc", [null, [244, 2], [247, 4]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 249,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-product/items/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "id", "product-items-details");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("section");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "id", "product-items-actions");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("table");
        dom.setAttribute(el2, "id", "product-items");
        dom.setAttribute(el2, "class", "table-lined");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("thead");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("tr");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        dom.setAttribute(el5, "class", "checkbox-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("label");
        dom.setAttribute(el6, "class", "checkbox-label");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("span");
        dom.setAttribute(el7, "class", "checkbox");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        dom.setAttribute(el5, "class", "actions");
        dom.setAttribute(el5, "colspan", "8");
        var el6 = dom.createTextNode("\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("tr");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment(" checkbox ");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment(" attributes ");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        dom.setAttribute(el5, "class", "number");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        dom.setAttribute(el5, "class", "number");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        dom.setAttribute(el5, "class", "approval-status-header");
        var el6 = dom.createTextNode("\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("th");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment(" actions ");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("tbody");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element4 = dom.childAt(fragment, [0]);
        var element5 = dom.childAt(element4, [3]);
        var element6 = dom.childAt(element5, [1]);
        var element7 = dom.childAt(element6, [1]);
        var element8 = dom.childAt(element7, [3]);
        var element9 = dom.childAt(element6, [3]);
        var morphs = new Array(15);
        morphs[0] = dom.createMorphAt(dom.childAt(element4, [1, 1]), 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element7, [1, 1]), 1, 1);
        morphs[2] = dom.createMorphAt(element8, 1, 1);
        morphs[3] = dom.createMorphAt(element8, 3, 3);
        morphs[4] = dom.createMorphAt(element8, 5, 5);
        morphs[5] = dom.createMorphAt(dom.childAt(element9, [5]), 1, 1);
        morphs[6] = dom.createMorphAt(dom.childAt(element9, [7]), 1, 1);
        morphs[7] = dom.createMorphAt(dom.childAt(element9, [9]), 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(element9, [11]), 1, 1);
        morphs[9] = dom.createMorphAt(dom.childAt(element9, [13]), 1, 1);
        morphs[10] = dom.createMorphAt(dom.childAt(element9, [15]), 1, 1);
        morphs[11] = dom.createMorphAt(dom.childAt(element5, [3]), 1, 1);
        morphs[12] = dom.createMorphAt(element4, 5, 5);
        morphs[13] = dom.createMorphAt(element4, 7, 7);
        morphs[14] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "hasVariations", ["loc", [null, [4, 12], [4, 25]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [4, 6], [16, 13]]]], ["inline", "input", [], ["type", "checkbox", "class", "select-all-items", "checked", ["subexpr", "@mut", [["get", "selectAllCheckboxValue", ["loc", [null, [25, 69], [25, 91]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [25, 12], [25, 93]]], 0, 0], ["block", "mx-button", [], ["id", "edit-items", "secondary", true, "action", "editItems", "enabled", ["subexpr", "@mut", [["get", "hasSelectedItems", ["loc", [null, [31, 81], [31, 97]]], 0, 0, 0, 0]], [], [], 0, 0]], 1, null, ["loc", [null, [31, 10], [33, 24]]]], ["block", "vp-can", ["write_default"], [], 2, null, ["loc", [null, [35, 10], [43, 21]]]], ["block", "if", [["get", "enableOptionDeletion", ["loc", [null, [45, 16], [45, 36]]], 0, 0, 0, 0]], [], 3, null, ["loc", [null, [45, 10], [49, 17]]]], ["inline", "t", ["forms.required"], ["label", ["subexpr", "t", ["vp-product-items.vendorSku"], [], ["loc", [null, [63, 37], [63, 69]]], 0, 0]], ["loc", [null, [63, 10], [63, 71]]], 0, 0], ["inline", "t", ["vp-product-items.modelNumber"], [], ["loc", [null, [67, 10], [67, 46]]], 0, 0], ["inline", "t", ["forms.required"], ["label", ["subexpr", "t", ["vp-product-items.universalId"], [], ["loc", [null, [71, 37], [71, 71]]], 0, 0]], ["loc", [null, [71, 10], [71, 73]]], 0, 0], ["inline", "t", ["vp-product-items.quantity"], [], ["loc", [null, [75, 10], [75, 43]]], 0, 0], ["inline", "t", ["forms.required"], ["label", ["subexpr", "t", ["vp-product-items.unitPrice"], [], ["loc", [null, [79, 37], [79, 69]]], 0, 0]], ["loc", [null, [79, 10], [79, 71]]], 0, 0], ["block", "if", [["get", "isAnyItemSaved", ["loc", [null, [83, 16], [83, 30]]], 0, 0, 0, 0]], [], 4, null, ["loc", [null, [83, 10], [85, 17]]]], ["block", "each", [["get", "presentedItems", ["loc", [null, [95, 14], [95, 28]]], 0, 0, 0, 0]], [], 5, null, ["loc", [null, [95, 6], [221, 15]]]], ["block", "vp-add", [], [], 6, null, ["loc", [null, [225, 2], [229, 13]]]], ["block", "vp-page-overlay", [], ["isOpen", ["subexpr", "@mut", [["get", "isEditingItems", ["loc", [null, [231, 28], [231, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], 7, null, ["loc", [null, [231, 2], [240, 22]]]], ["block", "mx-modal", [], ["open", ["subexpr", "@mut", [["get", "showRejectionModal", ["loc", [null, [243, 17], [243, 35]]], 0, 0, 0, 0]], [], [], 0, 0], "title", ["subexpr", "t", ["vp-inventory-reject-modal.title"], [], ["loc", [null, [243, 42], [243, 79]]], 0, 0]], 8, null, ["loc", [null, [243, 0], [248, 13]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8]
    };
  })());
});
define("goods-gateway/components/vp-product/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 6,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-product/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h2");
          dom.setAttribute(el1, "class", "instruction");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["vp-product.category"], [], ["loc", [null, [4, 6], [4, 33]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 2
            },
            "end": {
              "line": 10,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-product/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h2");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["vp-product.pickCategory"], [], ["loc", [null, [8, 6], [8, 37]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 20,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-product/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-x-search", [], ["searches", ["subexpr", "@mut", [["get", "categorySearches", ["loc", [null, [14, 15], [14, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", "category-search", "singleSelect", true, "showInstructions", false, "select", "setCategory", "showValue", "showValue"], ["loc", [null, [13, 4], [19, 29]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 20,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-product/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "vp-field", [], ["tRoot", "vp-product", "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [23, 13], [23, 17]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "categoryDescription", "showLabel", false, "inputId", "category-name", "toggle", true, "showSearch", "showSearch"], ["loc", [null, [21, 4], [28, 32]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 40,
                "column": 8
              },
              "end": {
                "line": 50,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-product/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "vp-field", [], ["required", true, "tKey", "vendor", "tRoot", "vp-product", "model", ["subexpr", "@mut", [["get", "product.vendor", ["loc", [null, [45, 18], [45, 32]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "name", "disabled", true, "inputId", "product-vendor-name"], ["loc", [null, [41, 10], [49, 12]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 50,
                "column": 8
              },
              "end": {
                "line": 62,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/components/vp-product/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "vp-x-search", [], ["debounceTime", 200, "searches", ["subexpr", "@mut", [["get", "vendorSearches", ["loc", [null, [53, 21], [53, 35]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "showLabel", true, "showInstructions", false, "select", "selectVendor", "tKey", "vendor", "tRoot", "vp-product", "inputId", "product-vendor-search"], ["loc", [null, [51, 10], [61, 12]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-product/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "product.vendor.id", ["loc", [null, [40, 14], [40, 31]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [40, 8], [62, 15]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child5 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 131,
                "column": 10
              },
              "end": {
                "line": 136,
                "column": 10
              }
            },
            "moduleName": "goods-gateway/components/vp-product/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "vp-product.attachment", [], ["attachments", ["subexpr", "@mut", [["get", "product.attachments", ["loc", [null, [133, 26], [133, 45]]], 0, 0, 0, 0]], [], [], 0, 0], "attachmentType", "warranty"], ["loc", [null, [132, 12], [135, 14]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/components/vp-product/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [3]);
          var element1 = dom.childAt(fragment, [5]);
          var morphs = new Array(5);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
          morphs[3] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
          morphs[4] = dom.createMorphAt(element1, 3, 3);
          return morphs;
        },
        statements: [["inline", "vp-field", [], ["immediateErrors", ["subexpr", "not", [["get", "product.isNew", ["loc", [null, [93, 35], [93, 48]]], 0, 0, 0, 0]], [], ["loc", [null, [93, 30], [93, 49]]], 0, 0], "key", "title", "model", ["subexpr", "@mut", [["get", "content", ["loc", [null, [95, 20], [95, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "tRoot", "product"], ["loc", [null, [92, 12], [98, 14]]], 0, 0], ["inline", "vp-textarea", [], ["immediateErrors", ["subexpr", "not", [["get", "product.isNew", ["loc", [null, [105, 35], [105, 48]]], 0, 0, 0, 0]], [], ["loc", [null, [105, 30], [105, 49]]], 0, 0], "key", "description", "model", ["subexpr", "@mut", [["get", "content", ["loc", [null, [107, 20], [107, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "tRoot", "vp-product"], ["loc", [null, [104, 12], [110, 14]]], 0, 0], ["inline", "vp-textarea", [], ["immediateErrors", ["subexpr", "not", [["get", "product.isNew", ["loc", [null, [114, 35], [114, 48]]], 0, 0, 0, 0]], [], ["loc", [null, [114, 30], [114, 49]]], 0, 0], "key", "boxContents", "model", ["subexpr", "@mut", [["get", "content", ["loc", [null, [116, 20], [116, 27]]], 0, 0, 0, 0]], [], [], 0, 0], "tRoot", "vp-product"], ["loc", [null, [113, 12], [118, 14]]], 0, 0], ["inline", "vp-bullet-points", [], ["bulletPoints", ["subexpr", "@mut", [["get", "content.bulletPoints", ["loc", [null, [125, 27], [125, 47]]], 0, 0, 0, 0]], [], [], 0, 0], "validityModel", ["subexpr", "@mut", [["get", "bulletPointErrorModel", ["loc", [null, [126, 28], [126, 49]]], 0, 0, 0, 0]], [], [], 0, 0], "immediateErrors", ["subexpr", "not", [["get", "product.isNew", ["loc", [null, [127, 35], [127, 48]]], 0, 0, 0, 0]], [], ["loc", [null, [127, 30], [127, 49]]], 0, 0]], ["loc", [null, [124, 12], [128, 14]]], 0, 0], ["block", "if", [["get", "displayWarrantyAttachmentUI", ["loc", [null, [131, 16], [131, 43]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [131, 10], [136, 17]]]]],
        locals: ["content"],
        templates: [child0]
      };
    })();
    var child6 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 172,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-product/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("section");
          dom.setAttribute(el1, "id", "product-item-generator");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "vp-product-variation-generator", [], ["items", ["subexpr", "@mut", [["get", "product.items", ["loc", [null, [168, 16], [168, 29]]], 0, 0, 0, 0]], [], [], 0, 0], "selectedMRT", ["subexpr", "@mut", [["get", "category", ["loc", [null, [169, 22], [169, 30]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [167, 8], [170, 10]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child7 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 193,
                "column": 6
              },
              "end": {
                "line": 195,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-product/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["content", "saveError", ["loc", [null, [194, 8], [194, 21]]], 0, 0, 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 192,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-product/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "isNotSaveable", ["loc", [null, [193, 12], [193, 25]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [193, 6], [195, 13]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child8 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 198,
                  "column": 8
                },
                "end": {
                  "line": 200,
                  "column": 8
                }
              },
              "moduleName": "goods-gateway/components/vp-product/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["vp-product.delete"], [], ["loc", [null, [199, 10], [199, 35]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 197,
                "column": 6
              },
              "end": {
                "line": 201,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/components/vp-product/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "mx-button", [], ["action", "deleteProduct", "secondary", true, "cautious", true, "id", "delete-product"], 0, null, ["loc", [null, [198, 8], [200, 22]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 196,
              "column": 4
            },
            "end": {
              "line": 202,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-product/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "enableProductDeletion", ["loc", [null, [197, 12], [197, 33]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [197, 6], [201, 13]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 207,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-product/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "id", "product-category");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "product-form-container");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("form");
        dom.setAttribute(el2, "id", "product-form");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "id", "product-details");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("h2");
        dom.setAttribute(el4, "class", "instruction");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        dom.setAttribute(el3, "class", "instruction");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "id", "product-items");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [0]);
        var element3 = dom.childAt(fragment, [2, 1]);
        var element4 = dom.childAt(element3, [1]);
        var element5 = dom.childAt(element4, [5]);
        var element6 = dom.childAt(element4, [9]);
        var morphs = new Array(16);
        morphs[0] = dom.createMorphAt(element2, 1, 1);
        morphs[1] = dom.createMorphAt(element2, 3, 3);
        morphs[2] = dom.createElementMorph(element3);
        morphs[3] = dom.createMorphAt(dom.childAt(element4, [1]), 1, 1);
        morphs[4] = dom.createMorphAt(element4, 3, 3);
        morphs[5] = dom.createMorphAt(dom.childAt(element5, [1]), 1, 1);
        morphs[6] = dom.createMorphAt(dom.childAt(element5, [3]), 1, 1);
        morphs[7] = dom.createMorphAt(element4, 7, 7);
        morphs[8] = dom.createMorphAt(dom.childAt(element6, [1]), 1, 1);
        morphs[9] = dom.createMorphAt(dom.childAt(element6, [3]), 1, 1);
        morphs[10] = dom.createMorphAt(dom.childAt(element3, [3]), 1, 1);
        morphs[11] = dom.createMorphAt(element3, 5, 5);
        morphs[12] = dom.createMorphAt(dom.childAt(element3, [7]), 1, 1);
        morphs[13] = dom.createMorphAt(element3, 9, 9);
        morphs[14] = dom.createMorphAt(element3, 11, 11);
        morphs[15] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        return morphs;
      },
      statements: [["block", "if", [["get", "categoryIsLeaf", ["loc", [null, [2, 8], [2, 22]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [2, 2], [10, 9]]]], ["block", "if", [["get", "showSearch", ["loc", [null, [12, 8], [12, 18]]], 0, 0, 0, 0]], [], 2, 3, ["loc", [null, [12, 2], [29, 9]]]], ["element", "action", ["save"], ["on", "submit"], ["loc", [null, [33, 26], [33, 55]]], 0, 0], ["inline", "t", ["vp-product.requiredInformation"], [], ["loc", [null, [36, 8], [36, 46]]], 0, 0], ["block", "vp-can", ["read_default"], [], 4, null, ["loc", [null, [39, 6], [63, 17]]]], ["inline", "vp-field", [], ["explicitErrors", ["subexpr", "@mut", [["get", "this.errors.itemBuffer", ["loc", [null, [68, 27], [68, 49]]], 0, 0, 0, 0]], [], [], 0, 0], "immediateErrors", ["subexpr", "not", [["get", "product.isNew", ["loc", [null, [69, 33], [69, 46]]], 0, 0, 0, 0]], [], ["loc", [null, [69, 28], [69, 47]]], 0, 0], "key", "manufacturer", "model", ["subexpr", "@mut", [["get", "itemBuffer", ["loc", [null, [71, 18], [71, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "tRoot", "vp-product"], ["loc", [null, [67, 10], [74, 12]]], 0, 0], ["inline", "vp-field", [], ["explicitErrors", ["subexpr", "@mut", [["get", "this.errors.itemBuffer", ["loc", [null, [78, 27], [78, 49]]], 0, 0, 0, 0]], [], [], 0, 0], "immediateErrors", ["subexpr", "not", [["get", "product.isNew", ["loc", [null, [79, 33], [79, 46]]], 0, 0, 0, 0]], [], ["loc", [null, [79, 28], [79, 47]]], 0, 0], "key", "brandName", "model", ["subexpr", "@mut", [["get", "itemBuffer", ["loc", [null, [81, 18], [81, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "required", true, "disabled", ["subexpr", "@mut", [["get", "isCurrentlyFeatured", ["loc", [null, [83, 21], [83, 40]]], 0, 0, 0, 0]], [], [], 0, 0], "tRoot", "vp-product"], ["loc", [null, [77, 10], [85, 12]]], 0, 0], ["block", "vp-localized-content", [], ["contents", ["subexpr", "@mut", [["get", "product.localizedContents", ["loc", [null, [89, 39], [89, 64]]], 0, 0, 0, 0]], [], [], 0, 0]], 5, null, ["loc", [null, [89, 6], [138, 31]]]], ["inline", "vp-link-field", [], ["immediateErrors", ["subexpr", "not", [["get", "product.isNew", ["loc", [null, [143, 33], [143, 46]]], 0, 0, 0, 0]], [], ["loc", [null, [143, 28], [143, 47]]], 0, 0], "key", "msrpSiteLink", "model", ["subexpr", "@mut", [["get", "product", ["loc", [null, [145, 18], [145, 25]]], 0, 0, 0, 0]], [], [], 0, 0], "tRoot", "vp-product"], ["loc", [null, [142, 10], [147, 12]]], 0, 0], ["inline", "vp-link-field", [], ["immediateErrors", ["subexpr", "not", [["get", "product.isNew", ["loc", [null, [152, 33], [152, 46]]], 0, 0, 0, 0]], [], ["loc", [null, [152, 28], [152, 47]]], 0, 0], "key", "retailSiteLink", "model", ["subexpr", "@mut", [["get", "product", ["loc", [null, [154, 18], [154, 25]]], 0, 0, 0, 0]], [], [], 0, 0], "tRoot", "vp-product"], ["loc", [null, [151, 10], [156, 12]]], 0, 0], ["inline", "t", ["vp-product.variations"], [], ["loc", [null, [162, 6], [162, 35]]], 0, 0], ["block", "if", [["get", "showGenerator", ["loc", [null, [165, 10], [165, 23]]], 0, 0, 0, 0]], [], 6, null, ["loc", [null, [165, 4], [172, 11]]]], ["inline", "vp-product.items", [], ["deleteItem", ["subexpr", "@mut", [["get", "deleteItem", ["loc", [null, [176, 19], [176, 29]]], 0, 0, 0, 0]], [], [], 0, 0], "itemId", ["subexpr", "@mut", [["get", "itemId", ["loc", [null, [177, 15], [177, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "product", ["subexpr", "@mut", [["get", "product", ["loc", [null, [178, 16], [178, 23]]], 0, 0, 0, 0]], [], [], 0, 0], "selectedMRT", ["subexpr", "@mut", [["get", "category", ["loc", [null, [179, 20], [179, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "approveItems", "approveItems", "rejectItems", "rejectItems"], ["loc", [null, [175, 6], [182, 8]]], 0, 0], ["inline", "mx-submit", [], ["disabled", ["subexpr", "@mut", [["get", "isNotSaveable", ["loc", [null, [186, 15], [186, 28]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", "save-product", "model", ["subexpr", "@mut", [["get", "product", ["loc", [null, [188, 12], [188, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "tPath", ["subexpr", "@mut", [["get", "saveTranslationKey", ["loc", [null, [189, 12], [189, 30]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [185, 4], [190, 6]]], 0, 0], ["block", "if", [["get", "product.isNew", ["loc", [null, [192, 10], [192, 23]]], 0, 0, 0, 0]], [], 7, 8, ["loc", [null, [192, 4], [202, 11]]]], ["content", "yield", ["loc", [null, [206, 0], [206, 9]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8]
    };
  })());
});
define('goods-gateway/components/vp-rejection-reason-stats/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    classNames: ['md-column']
  });
});
define("goods-gateway/components/vp-rejection-reason-stats/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 22,
                "column": 10
              },
              "end": {
                "line": 27,
                "column": 10
              }
            },
            "moduleName": "goods-gateway/components/vp-rejection-reason-stats/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["content", "stat.count", ["loc", [null, [26, 12], [26, 26]]], 0, 0, 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 15,
              "column": 4
            },
            "end": {
              "line": 30,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/components/vp-rejection-reason-stats/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "rejection-reason");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "rejected-inventory count");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", [["subexpr", "concat", ["vp-listing-status.autoApproval.rejectReasons.", ["get", "stat.rejectionReason", ["loc", [null, [18, 70], [18, 90]]], 0, 0, 0, 0]], [], ["loc", [null, [18, 14], [18, 91]]], 0, 0]], [], ["loc", [null, [18, 10], [18, 93]]], 0, 0], ["block", "link-to", ["inventory.index", ["subexpr", "contextual-params", [["get", "params", ["loc", [null, [23, 31], [23, 37]]], 0, 0, 0, 0]], ["rejectionReason", ["get", "stat.rejectionReason", ["loc", [null, [23, 54], [23, 74]]], 0, 0, 0, 0]], ["loc", [null, [23, 12], [23, 75]]], 0, 0]], ["class", "inventory-link"], 0, null, ["loc", [null, [22, 10], [27, 22]]]]],
        locals: ["stat"],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-rejection-reason-stats/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("table");
        dom.setAttribute(el1, "id", "rejection-reason-stats-table");
        dom.setAttribute(el1, "class", "table-lined");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("thead");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("tr");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("th");
        dom.setAttribute(el4, "class", "count");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("tbody");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var element2 = dom.childAt(element1, [1, 1]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element2, [3]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["stats.approvals.rejectionReason"], [], ["loc", [null, [5, 8], [5, 47]]], 0, 0], ["inline", "t", ["stats.approvals.count"], [], ["loc", [null, [9, 8], [9, 37]]], 0, 0], ["block", "each", [["get", "stats", ["loc", [null, [15, 12], [15, 17]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [15, 4], [30, 13]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-saved-searches/component', ['exports', 'ember', 'goods-gateway/mixins/enterable'], function (exports, _ember, _goodsGatewayMixinsEnterable) {
  exports['default'] = _ember['default'].Component.extend(_goodsGatewayMixinsEnterable['default'], {
    searchStorage: _ember['default'].inject.service('search-storage'),

    // attributes
    classNames: ['saved-searches'],
    tagName: 'span',
    classNameBindings: ['isRemoving:removing', 'isOpen:open'],

    // events
    mouseEnter: function mouseEnter() {
      this._open();
    },

    mouseLeave: function mouseLeave() {
      this._close();
    },

    touchEnd: function touchEnd(event) {
      var element = _ember['default'].$(event.target);
      if (element.hasClass('icon-wrapper') || element.parents('.icon-wrapper').length) {
        if (this.get('isOpen')) {
          this._close();
        } else {
          this._open();
        }
      }
    },

    // helpers
    newSearchName: '',
    isRemoving: false,
    isOpen: false,

    actions: {
      selectSearch: function selectSearch(id) {
        if (this.get('isRemoving')) {
          this.get('searchStorage').destroy(id);
        } else {
          this.sendAction('restoreSearch', id);
        }
      },

      manage: function manage() {
        this.toggleProperty('isRemoving');
      },

      entered: function entered() {
        this.sendAction('saveSearch', this.get('newSearchName'));
        this._reset();
      }
    },

    _close: function _close() {
      this.set('isOpen', false);
      this._reset();
    },

    _open: function _open() {
      this.set('isOpen', true);
    },

    _reset: function _reset() {
      this.set('newSearchName', '');
      this.set('isRemoving', false);
    }
  });
});
define("goods-gateway/components/vp-saved-searches/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 21,
                  "column": 8
                },
                "end": {
                  "line": 33,
                  "column": 8
                }
              },
              "moduleName": "goods-gateway/components/vp-saved-searches/template.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("li");
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("a");
              dom.setAttribute(el2, "class", "saved-search middle");
              dom.setAttribute(el2, "href", "#");
              var el3 = dom.createTextNode("\n              ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("span");
              dom.setAttribute(el3, "class", "remove-icon");
              var el4 = dom.createTextNode("\n                ");
              dom.appendChild(el3, el4);
              var el4 = dom.createComment("");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n              ");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n\n              ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("span");
              var el4 = dom.createTextNode("\n                ");
              dom.appendChild(el3, el4);
              var el4 = dom.createComment("");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n              ");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1, 1]);
              var morphs = new Array(4);
              morphs[0] = dom.createAttrMorph(element0, 'id');
              morphs[1] = dom.createElementMorph(element0);
              morphs[2] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
              morphs[3] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
              return morphs;
            },
            statements: [["attribute", "id", ["concat", [["get", "search.id", ["loc", [null, [23, 21], [23, 30]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["selectSearch", ["get", "search.id", ["loc", [null, [23, 95], [23, 104]]], 0, 0, 0, 0]], [], ["loc", [null, [23, 71], [23, 106]]], 0, 0], ["inline", "mx-icon", ["ex-circle"], [], ["loc", [null, [25, 16], [25, 39]]], 0, 0], ["content", "search.name", ["loc", [null, [29, 16], [29, 31]]], 0, 0, 0, 0]],
            locals: ["search"],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 19,
                "column": 4
              },
              "end": {
                "line": 35,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-saved-searches/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("ul");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["block", "each", [["get", "searchStorage.savedSearches", ["loc", [null, [21, 16], [21, 43]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [21, 8], [33, 17]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 37,
                "column": 4
              },
              "end": {
                "line": 46,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-saved-searches/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "vp-field", [], ["placeholderText", ["subexpr", "t", ["vp-saved-searches.newSearch"], [], ["loc", [null, [39, 24], [39, 57]]], 0, 0], "showLabel", false, "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [41, 14], [41, 18]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "newSearchName", "maxlength", 60, "inputId", "new-search-name"], ["loc", [null, [38, 6], [45, 8]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 50,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-saved-searches/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "class", "content");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "row flex-fix middle");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "md-column flex-fix");
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("h4");
          var el5 = dom.createTextNode("\n          ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "md-column flex-fix edit-searches");
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var element2 = dom.childAt(element1, [1]);
          var morphs = new Array(5);
          morphs[0] = dom.createMorphAt(dom.childAt(element2, [1, 1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element2, [3]), 1, 1);
          morphs[2] = dom.createMorphAt(element1, 3, 3);
          morphs[3] = dom.createMorphAt(element1, 5, 5);
          morphs[4] = dom.createMorphAt(element1, 7, 7);
          return morphs;
        },
        statements: [["inline", "t", ["vp-saved-searches.title"], [], ["loc", [null, [10, 10], [10, 41]]], 0, 0], ["inline", "mx-switch", [], ["model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [15, 26], [15, 30]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "isRemoving", "inputId", "toggle-edit-search", "large", false], ["loc", [null, [15, 8], [15, 90]]], 0, 0], ["block", "if", [["get", "searchStorage.savedSearches", ["loc", [null, [19, 10], [19, 37]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [19, 4], [35, 11]]]], ["block", "unless", [["get", "isRemoving", ["loc", [null, [37, 14], [37, 24]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [37, 4], [46, 15]]]], ["content", "yield", ["loc", [null, [48, 4], [48, 13]]], 0, 0, 0, 0]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 51,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-saved-searches/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("span");
        dom.setAttribute(el1, "class", "icon-wrapper");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 1, 1);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["inline", "mx-icon", ["star"], [], ["loc", [null, [2, 2], [2, 20]]], 0, 0], ["block", "if", [["get", "isOpen", ["loc", [null, [5, 6], [5, 12]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [5, 0], [50, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-search/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    classNames: ['md-column vp-search'],
    i18n: _ember['default'].inject.service(),
    translatedPlaceholder: _ember['default'].computed("placeholder", function () {
      if (!this.get('placeholder')) {
        return "";
      }
      return this.get('i18n').t(this.get('placeholder'));
    }),
    actions: {
      search: function search() {
        this.sendAction('search');
      },
      clearSearch: function clearSearch() {
        this.sendAction('clearSearch');
      }
    }
  });
});
define("goods-gateway/components/vp-search/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-search/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "class", "small-text clickable icon-close clear-search");
          var el2 = dom.createTextNode(" ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element0);
          morphs[1] = dom.createMorphAt(element0, 1, 1);
          return morphs;
        },
        statements: [["element", "action", ["clearSearch"], [], ["loc", [null, [9, 8], [9, 32]]], 0, 0], ["inline", "t", ["clearSearch"], [], ["loc", [null, [9, 92], [9, 111]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-search/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("input");
        dom.setAttribute(el1, "type", "submit");
        dom.setAttribute(el1, "class", "button button-primary search-button mobile-only");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [2]);
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createAttrMorph(element1, 'value');
        morphs[2] = dom.createElementMorph(element1);
        morphs[3] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["inline", "input", [], ["id", ["subexpr", "@mut", [["get", "inputId", ["loc", [null, [1, 11], [1, 18]]], 0, 0, 0, 0]], [], [], 0, 0], "type", "search", "class", "text-input alt-input search-input", "value", ["subexpr", "@mut", [["get", "query", ["loc", [null, [1, 81], [1, 86]]], 0, 0, 0, 0]], [], [], 0, 0], "enter", "search", "placeholder", ["subexpr", "@mut", [["get", "translatedPlaceholder", ["loc", [null, [1, 114], [1, 135]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [1, 0], [1, 138]]], 0, 0], ["attribute", "value", ["subexpr", "t", ["search"], [], ["loc", [null, [null, null], [5, 20]]], 0, 0], 0, 0, 0, 0], ["element", "action", ["search"], [], ["loc", [null, [6, 0], [6, 19]]], 0, 0], ["block", "if", [["get", "hasSearched", ["loc", [null, [8, 6], [8, 17]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [8, 0], [10, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-select/component', ['exports', 'ember', 'goods-gateway/mixins/field'], function (exports, _ember, _goodsGatewayMixinsField) {
  exports['default'] = _ember['default'].Component.extend(_goodsGatewayMixinsField['default'], {
    // attributes
    classNames: ['input-group'],

    // args
    options: [],
    showLabel: true,
    model: null,
    key: null,
    tRoot: null,
    tKey: null,
    inputId: null,
    showBlankDefault: true,
    blankDefaultText: '',
    multiple: false,
    'default': null,

    // lifecycle
    init: function init() {
      this._super.apply(this, arguments);
    },

    didReceiveAttrs: function didReceiveAttrs() {
      if (!this.get('value')) {
        if (this.get('default')) {
          this.set('value', this.get('default'));
        } else if (this.get('multiple')) {
          this.set('value', []);
        }
      }
      this._super.apply(this, arguments);
    },

    // events
    change: function change() {
      if (this.get('multiple')) {
        this.set('value', this._getMultipleValue());
      } else {
        var value = this.$().find('select').val();
        this.set('value', value);
      }
    },

    // helpers
    decoratedOptions: _ember['default'].computed('value', 'options.[]', function () {
      var _this = this;

      return this.get('options').map(function (option) {
        var currentValue = _this.get('value');
        var isSelected = _this.get('multiple') ? currentValue.includes(option.value) : currentValue === option.value;
        return _ember['default'].ObjectProxy.create({
          content: option,
          isSelected: isSelected
        });
      });
    }),

    blankDefault: _ember['default'].computed('defaultVal', function () {
      return !this.get('defaultVal') && !this.get('multiple');
    }),

    _getMultipleValue: function _getMultipleValue() {
      var value = this.$().find('select').val();

      if (_ember['default'].typeOf(value) === 'array') {
        return value.length === 1 && value[0] === '' ? [] : value;
      } else {
        return []; // null
      }
    }
  });
});
define("goods-gateway/components/vp-select/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 2
            },
            "end": {
              "line": 12,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-select/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("option");
          dom.setAttribute(el1, "value", "");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "blankDefaultText", ["loc", [null, [10, 6], [10, 26]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 14,
              "column": 2
            },
            "end": {
              "line": 18,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-select/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("option");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element1, 'value');
          morphs[1] = dom.createAttrMorph(element1, 'selected');
          morphs[2] = dom.createMorphAt(element1, 1, 1);
          return morphs;
        },
        statements: [["attribute", "value", ["get", "option.value", ["loc", [null, [15, 20], [15, 32]]], 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "selected", ["get", "option.isSelected", ["loc", [null, [15, 46], [15, 63]]], 0, 0, 0, 0], 0, 0, 0, 0], ["content", "option.label", ["loc", [null, [16, 6], [16, 22]]], 0, 0, 0, 0]],
        locals: ["option"],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 21,
              "column": 0
            },
            "end": {
              "line": 25,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-select/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("label");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element0, 'for');
          morphs[1] = dom.createMorphAt(element0, 1, 1);
          return morphs;
        },
        statements: [["attribute", "for", ["get", "inputElementId", ["loc", [null, [22, 15], [22, 29]]], 0, 0, 0, 0], 0, 0, 0, 0], ["content", "label", ["loc", [null, [23, 4], [23, 13]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 27,
              "column": 0
            },
            "end": {
              "line": 29,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-select/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          dom.setAttribute(el1, "class", "validation-error");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["content", "errors.0", ["loc", [null, [28, 30], [28, 44]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-select/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("select");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [0]);
        var morphs = new Array(9);
        morphs[0] = dom.createAttrMorph(element2, 'id');
        morphs[1] = dom.createAttrMorph(element2, 'class');
        morphs[2] = dom.createAttrMorph(element2, 'required');
        morphs[3] = dom.createAttrMorph(element2, 'multiple');
        morphs[4] = dom.createAttrMorph(element2, 'disabled');
        morphs[5] = dom.createMorphAt(element2, 1, 1);
        morphs[6] = dom.createMorphAt(element2, 3, 3);
        morphs[7] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[8] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["attribute", "id", ["get", "inputElementId", ["loc", [null, [2, 7], [2, 21]]], 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "class", ["concat", ["select-input alt-input ", ["get", "state", ["loc", [null, [3, 34], [3, 39]]], 0, 0, 0, 0], " ", ["subexpr", "if", [["get", "isFilled", ["loc", [null, [3, 47], [3, 55]]], 0, 0, 0, 0], "is-filled"], [], ["loc", [null, [3, 42], [3, 69]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "required", ["get", "required", ["loc", [null, [4, 13], [4, 21]]], 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "multiple", ["get", "multiple", ["loc", [null, [5, 13], [5, 21]]], 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "disabled", ["get", "disabled", ["loc", [null, [6, 13], [6, 21]]], 0, 0, 0, 0], 0, 0, 0, 0], ["block", "if", [["get", "showBlankDefault", ["loc", [null, [8, 8], [8, 24]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [8, 2], [12, 9]]]], ["block", "each", [["get", "decoratedOptions", ["loc", [null, [14, 10], [14, 26]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [14, 2], [18, 11]]]], ["block", "if", [["get", "showLabel", ["loc", [null, [21, 6], [21, 15]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [21, 0], [25, 7]]]], ["block", "if", [["get", "showError", ["loc", [null, [27, 6], [27, 15]]], 0, 0, 0, 0]], [], 3, null, ["loc", [null, [27, 0], [29, 7]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define('goods-gateway/components/vp-switch/component', ['exports', 'ember', 'ember-simple-uuid'], function (exports, _ember, _emberSimpleUuid) {
  exports['default'] = _ember['default'].Component.extend({
    // attributes
    classNames: ['vp-switch'],

    // lifecycle
    init: function init() {
      this._super();
      this.set('inputId', (0, _emberSimpleUuid['default'])());
    },

    // args
    big: true,
    on: true
  });
});
define("goods-gateway/components/vp-switch/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-switch/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("label");
        dom.setAttribute(el1, "class", "text-label");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "switch-input-container");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("label");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("span");
        dom.setAttribute(el3, "class", "switch-on");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("span");
        dom.setAttribute(el3, "class", "switch-off");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(fragment, [2, 1]);
        var morphs = new Array(7);
        morphs[0] = dom.createAttrMorph(element0, 'for');
        morphs[1] = dom.createMorphAt(element0, 1, 1);
        morphs[2] = dom.createAttrMorph(element1, 'class');
        morphs[3] = dom.createAttrMorph(element1, 'for');
        morphs[4] = dom.createMorphAt(element1, 1, 1);
        morphs[5] = dom.createMorphAt(dom.childAt(element1, [3]), 0, 0);
        morphs[6] = dom.createMorphAt(dom.childAt(element1, [5]), 0, 0);
        return morphs;
      },
      statements: [["attribute", "for", ["get", "inputId", ["loc", [null, [1, 32], [1, 39]]], 0, 0, 0, 0], 0, 0, 0, 0], ["content", "yield", ["loc", [null, [2, 2], [2, 11]]], 0, 0, 0, 0], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "big", ["loc", [null, [6, 21], [6, 24]]], 0, 0, 0, 0], "switch-label", "switch-label-small"], [], ["loc", [null, [6, 16], [6, 62]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["attribute", "for", ["get", "inputId", ["loc", [null, [6, 70], [6, 77]]], 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "input", [], ["type", "checkbox", "checked", ["subexpr", "@mut", [["get", "on", ["loc", [null, [7, 36], [7, 38]]], 0, 0, 0, 0]], [], [], 0, 0], "id", ["subexpr", "@mut", [["get", "inputId", ["loc", [null, [7, 42], [7, 49]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [7, 4], [7, 51]]], 0, 0], ["inline", "t", ["vp-switch.on"], [], ["loc", [null, [8, 28], [8, 48]]], 0, 0], ["inline", "t", ["vp-switch.off"], [], ["loc", [null, [9, 29], [9, 50]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-tags/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    actions: {
      remove: function remove(item) {
        this.get('selectedItems').removeObject(item);
      }
    },

    renamedItems: _ember['default'].computed.map('selectedItems', function (item) {
      var nameField = this.get('nameField');
      item.set('name', item.get(nameField));
      return item;
    }),

    sortedItems: _ember['default'].computed.sort('renamedItems', function (a, b) {
      var aName = a.get('name');
      var bName = b.get('name');
      if (aName < bName) {
        return -1;
      } else if (aName > bName) {
        return 1;
      } else {
        return 0;
      }
    })
  });
});
define("goods-gateway/components/vp-tags/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 6,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-tags/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          dom.setAttribute(el1, "class", "tag-item");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element0);
          morphs[1] = dom.createMorphAt(element0, 1, 1);
          return morphs;
        },
        statements: [["element", "action", ["remove", ["get", "item", ["loc", [null, [3, 26], [3, 30]]], 0, 0, 0, 0]], [], ["loc", [null, [3, 8], [3, 32]]], 0, 0], ["content", "item.name", ["loc", [null, [4, 6], [4, 19]]], 0, 0, 0, 0]],
        locals: ["item"],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-tags/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("ul");
        dom.setAttribute(el1, "class", "vp-tags tag-list");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 1, 1);
        return morphs;
      },
      statements: [["block", "each", [["get", "sortedItems", ["loc", [null, [2, 10], [2, 21]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [2, 2], [6, 11]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/vp-taxonomy-request-link/component', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  exports['default'] = _ember['default'].Component.extend({
    // attributes
    classNames: ['vp-taxonomy-request-link'],

    // helpers
    requestLink: _goodsGatewayConfigEnvironment['default'].externalLinks.taxonomyRequest
  });
});
define("goods-gateway/components/vp-taxonomy-request-link/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-taxonomy-request-link/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("a");
        dom.setAttribute(el1, "target", "_blank");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createAttrMorph(element0, 'href');
        morphs[1] = dom.createMorphAt(element0, 1, 1);
        return morphs;
      },
      statements: [["attribute", "href", ["get", "requestLink", ["loc", [null, [1, 26], [1, 37]]], 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", ["vp-taxonomy-request-link.title"], [], ["loc", [null, [2, 2], [2, 40]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-template-ui/component', ['exports', 'ember', 'goods-gateway/utils/download-utility'], function (exports, _ember, _goodsGatewayUtilsDownloadUtility) {
  exports['default'] = _ember['default'].Component.extend({
    bulkCatalogTemplateVisible: false,
    currentCategoryId: undefined,

    classNames: ['vp-template-ui'],

    actions: {
      showBulkCatalogTemplate: function showBulkCatalogTemplate() {
        _ember['default'].set(this, 'bulkCatalogTemplateVisible', true);
      },

      setCategory: function setCategory(category) {
        this.set('categoryDownloadEnabled', true);
        this.set('currentCategoryId', category.get('id'));
      },

      downloadCategoryTemplate: function downloadCategoryTemplate() {
        _goodsGatewayUtilsDownloadUtility['default'].templateDownload(this.currentCategoryId, this.$());
        this.set('bulkCatalogTemplateVisible', false);
        this.set('currentCategoryId', undefined);
      },

      // Update cost and update inventory are currently place holders.
      updateCost: function updateCost() {},
      updateInventory: function updateInventory() {}
    }
  });
});
define("goods-gateway/components/vp-template-ui/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 8
            },
            "end": {
              "line": 8,
              "column": 8
            }
          },
          "moduleName": "goods-gateway/components/vp-template-ui/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["product-upload.addUpdateProducts"], [], ["loc", [null, [7, 10], [7, 50]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 25,
                  "column": 12
                },
                "end": {
                  "line": 27,
                  "column": 12
                }
              },
              "moduleName": "goods-gateway/components/vp-template-ui/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["product-upload.downloadText"], [], ["loc", [null, [26, 14], [26, 49]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 14,
                "column": 4
              },
              "end": {
                "line": 31,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-template-ui/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "bulk-catalog-template");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("h2");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "id", "bulk-product-category");
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "row download-button");
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3, "class", "md-column align-center");
            var el4 = dom.createTextNode("\n");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("          ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);
            morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
            morphs[2] = dom.createMorphAt(dom.childAt(element0, [5, 1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["product-upload.createCatalogTemplate"], [], ["loc", [null, [16, 12], [16, 56]]], 0, 0], ["inline", "vp-product-category-picker", [], ["setCategory", "setCategory"], ["loc", [null, [18, 10], [20, 12]]], 0, 0], ["block", "mx-button", [], ["action", "downloadCategoryTemplate", "secondary", true, "id", "download-template-button"], 0, null, ["loc", [null, [25, 12], [27, 26]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 13,
              "column": 2
            },
            "end": {
              "line": 32,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-template-ui/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-modal", [], ["open", ["subexpr", "@mut", [["get", "bulkCatalogTemplateVisible", ["loc", [null, [14, 21], [14, 47]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [14, 4], [31, 17]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-template-ui/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "template-download-ui");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row bulk-template-buttons");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var element2 = dom.childAt(element1, [1]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);
        morphs[1] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[2] = dom.createMorphAt(element1, 3, 3);
        return morphs;
      },
      statements: [["inline", "t", ["product-upload.createTemplate"], [], ["loc", [null, [3, 8], [3, 45]]], 0, 0], ["block", "mx-button", [], ["action", "showBulkCatalogTemplate", "id", "add-update-button"], 0, null, ["loc", [null, [6, 8], [8, 22]]]], ["block", "if", [["get", "bulkCatalogTemplateVisible", ["loc", [null, [13, 8], [13, 34]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [13, 2], [32, 9]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-terms-of-use-checkbox/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    i18n: _ember['default'].inject.service(),

    label: _ember['default'].computed(function () {
      var i18n = this.get('i18n');
      var linkText = i18n.t('auth.resetPassword.termsLinkText');
      var link = _ember['default'].$('<a>', {
        href: '/goods-gateway/docs/terms-of-use',
        target: '_blank',
        text: linkText
      });
      return i18n.t('auth.resetPassword.termsAcceptance', {
        buttonText: i18n.t('auth.resetPassword.button'),
        link: link[0].outerHTML
      });
    })
  });
});
define("goods-gateway/components/vp-terms-of-use-checkbox/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-terms-of-use-checkbox/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-checkbox", [], ["key", ["subexpr", "@mut", [["get", "key", ["loc", [null, [2, 6], [2, 9]]], 0, 0, 0, 0]], [], [], 0, 0], "label", ["subexpr", "@mut", [["get", "label", ["loc", [null, [3, 8], [3, 13]]], 0, 0, 0, 0]], [], [], 0, 0], "model", ["subexpr", "@mut", [["get", "model", ["loc", [null, [4, 8], [4, 13]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [1, 0], [5, 2]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-textarea/component', ['exports', 'ember', 'goods-gateway/mixins/field'], function (exports, _ember, _goodsGatewayMixinsField) {

  var DEFAULT_ROWS = 3;

  exports['default'] = _ember['default'].Component.extend(_goodsGatewayMixinsField['default'], {
    // attributes
    classNames: ['vp-textarea', 'input-group'],

    // args
    key: null,
    model: null,
    tRoot: null,
    tKey: null,
    required: false,
    showLabel: true,
    inputId: null,
    placeholder: null,
    rows: DEFAULT_ROWS,

    didRender: function didRender() {
      this.autoResize();
    },

    keyUp: function keyUp() {
      this.autoResize();
    },

    input: function input() {
      this.autoResize();
    },

    autoResize: function autoResize() {
      var textarea = this.$('textarea');
      if (!textarea.length) {
        return;
      }
      textarea.css('height', 'auto').css('height', textarea[0].scrollHeight);
    }
  });
});
define("goods-gateway/components/vp-textarea/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-textarea/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("label");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element0, 'for');
          morphs[1] = dom.createMorphAt(element0, 1, 1);
          return morphs;
        },
        statements: [["attribute", "for", ["get", "inputElementId", ["loc", [null, [13, 15], [13, 29]]], 0, 0, 0, 0], 0, 0, 0, 0], ["content", "label", ["loc", [null, [14, 4], [14, 13]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 18,
              "column": 0
            },
            "end": {
              "line": 20,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-textarea/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          dom.setAttribute(el1, "class", "validation-error");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["content", "errors.0", ["loc", [null, [19, 30], [19, 44]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-textarea/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["inline", "textarea", [], ["id", ["subexpr", "@mut", [["get", "inputElementId", ["loc", [null, [2, 5], [2, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "name", ["subexpr", "@mut", [["get", "field", ["loc", [null, [3, 7], [3, 12]]], 0, 0, 0, 0]], [], [], 0, 0], "value", ["subexpr", "@mut", [["get", "value", ["loc", [null, [4, 8], [4, 13]]], 0, 0, 0, 0]], [], [], 0, 0], "class", ["subexpr", "concat", ["text-input", " ", ["subexpr", "if", [["get", "state", [], 0, 0, 0, 0], ["subexpr", "-normalize-class", ["state", ["get", "state", [], 0, 0, 0, 0]], [], [], 0, 0]], [], [], 0, 0], " ", ["subexpr", "if", [["get", "isFilled", [], 0, 0, 0, 0], "is-filled"], [], [], 0, 0], " "], [], [], 0, 0], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [7, 11], [7, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "rows", ["subexpr", "@mut", [["get", "rows", ["loc", [null, [8, 7], [8, 11]]], 0, 0, 0, 0]], [], [], 0, 0], "placeholder", ["subexpr", "@mut", [["get", "placeholderText", ["loc", [null, [9, 14], [9, 29]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [1, 0], [10, 2]]], 0, 0], ["block", "if", [["get", "showLabel", ["loc", [null, [12, 6], [12, 15]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [12, 0], [16, 7]]]], ["block", "if", [["get", "showError", ["loc", [null, [18, 6], [18, 15]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [18, 0], [20, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-tooltip/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // attributes
    classNames: ['vp-tooltip'],

    // actions
    touchEnd: function touchEnd() {
      this.toggleProperty('showTooltip');
    },
    mouseEnter: function mouseEnter() {
      this.set('showTooltip', true);
    },

    mouseLeave: function mouseLeave() {
      this.set('showTooltip', false);
    }
  });
});
define("goods-gateway/components/vp-tooltip/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 3,
                "column": 2
              },
              "end": {
                "line": 7,
                "column": 2
              }
            },
            "moduleName": "goods-gateway/components/vp-tooltip/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "tooltip");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["content", "comment", ["loc", [null, [5, 6], [5, 17]]], 0, 0, 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-tooltip/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "mx-icon-16 mx-icon-comments");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["block", "if", [["get", "showTooltip", ["loc", [null, [3, 8], [3, 19]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [3, 2], [7, 9]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-tooltip/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "value", ["loc", [null, [11, 2], [11, 11]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-tooltip/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "comment", ["loc", [null, [1, 6], [1, 13]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [1, 0], [9, 7]]]], ["block", "if", [["get", "value", ["loc", [null, [10, 6], [10, 11]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [10, 0], [12, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-typeahead/component', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Component.extend({
    // dependencies
    i18n: _ember['default'].inject.service(),

    // attributes
    id: null,
    classNames: ['vp-typeahead'],

    // args
    placeholder: '',
    values: [],
    selectedValues: [],
    required: false,

    // lifecycle
    didInsertElement: function didInsertElement() {
      this._super();
      this._initializeTypeahead();
    },

    _initializeTypeahead: function _initializeTypeahead() {
      var _this = this;

      var bloodHound = new Bloodhound({
        local: this.get('values'),
        identify: function identify(obj) {
          return obj.get('displayName');
        },
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('displayName')
      });

      function sourceWithDefaults(q, sync) {
        if (q === '') {
          var query = bloodHound.local.map(function (category) {
            return category.get('displayName');
          });
          sync(bloodHound.get(query));
        } else {
          bloodHound.search(q, sync);
        }
      }

      var typeahead = this.$('#typeahead-' + this.get('id')).typeahead({
        highlight: true,
        minLength: 0 //allows dropdown list view
      }, {
        name: 'typeahead',
        source: sourceWithDefaults,
        limit: 300,
        display: 'displayName'
      });

      typeahead.on('typeahead:select', function (event, item) {
        _this.get('selectedValues').addObject(item);
        typeahead.typeahead('val', '');
      });
    }
  });
});
define("goods-gateway/components/vp-typeahead/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-typeahead/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "input", [], ["type", "search", "id", ["subexpr", "concat", ["typeahead-", ["get", "id", ["loc", [null, [2, 26], [2, 28]]], 0, 0, 0, 0]], [], ["loc", [null, [2, 5], [2, 29]]], 0, 0], "class", "text-input alt-input tt-input", "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [4, 14], [4, 25]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [1, 0], [4, 27]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/components/vp-x-search-current-filters/component', ['exports', 'ember'], function (exports, _ember) {
  var _slice = Array.prototype.slice;
  exports['default'] = _ember['default'].Component.extend({
    classNames: ['vp-x-search-current-filters'],

    searches: null,

    hasMultipleSearches: _ember['default'].computed.gt('searches.length', 1),

    actions: {
      removeAllSearches: function removeAllSearches() {
        this.sendAction('removeAllSearches');
      },

      removeSearch: function removeSearch() {
        this.sendAction.apply(this, ['removeSearch'].concat(_slice.call(arguments)));
      },

      restoreSearch: function restoreSearch() {
        this.sendAction.apply(this, ['restoreSearch'].concat(_slice.call(arguments)));
      },

      saveSearch: function saveSearch() {
        this.sendAction.apply(this, ['saveSearch'].concat(_slice.call(arguments)));
      }
    }
  });
});
define("goods-gateway/components/vp-x-search-current-filters/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 7,
                "column": 2
              }
            },
            "moduleName": "goods-gateway/components/vp-x-search-current-filters/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "vp-saved-searches", [], ["restoreSearch", "restoreSearch", "saveSearch", "saveSearch"], ["loc", [null, [3, 4], [6, 6]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-x-search-current-filters/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "vp-can", ["read_default"], [], 0, null, ["loc", [null, [2, 2], [7, 13]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            var child0 = (function () {
              return {
                meta: {
                  "revision": "Ember@2.8.2",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 15,
                      "column": 10
                    },
                    "end": {
                      "line": 17,
                      "column": 10
                    }
                  },
                  "moduleName": "goods-gateway/components/vp-x-search-current-filters/template.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("            ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode(":\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "t", [["get", "filter.translationKeys.label", ["loc", [null, [16, 16], [16, 44]]], 0, 0, 0, 0]], [], ["loc", [null, [16, 12], [16, 46]]], 0, 0]],
                locals: [],
                templates: []
              };
            })();
            var child1 = (function () {
              return {
                meta: {
                  "revision": "Ember@2.8.2",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 17,
                      "column": 10
                    },
                    "end": {
                      "line": 19,
                      "column": 10
                    }
                  },
                  "moduleName": "goods-gateway/components/vp-x-search-current-filters/template.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("            ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode(":\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "t", [["subexpr", "concat", ["vp-x-search.titles.", ["get", "filter.group", ["loc", [null, [18, 46], [18, 58]]], 0, 0, 0, 0]], [], ["loc", [null, [18, 16], [18, 59]]], 0, 0]], [], ["loc", [null, [18, 12], [18, 61]]], 0, 0]],
                locals: [],
                templates: []
              };
            })();
            var child2 = (function () {
              return {
                meta: {
                  "revision": "Ember@2.8.2",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 21,
                      "column": 10
                    },
                    "end": {
                      "line": 23,
                      "column": 10
                    }
                  },
                  "moduleName": "goods-gateway/components/vp-x-search-current-filters/template.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("            ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "t", [["get", "filter.translationKeys.value", ["loc", [null, [22, 16], [22, 44]]], 0, 0, 0, 0]], [], ["loc", [null, [22, 12], [22, 46]]], 0, 0]],
                locals: [],
                templates: []
              };
            })();
            var child3 = (function () {
              return {
                meta: {
                  "revision": "Ember@2.8.2",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 23,
                      "column": 10
                    },
                    "end": {
                      "line": 25,
                      "column": 10
                    }
                  },
                  "moduleName": "goods-gateway/components/vp-x-search-current-filters/template.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("            ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["content", "filter.displayValue", ["loc", [null, [24, 12], [24, 35]]], 0, 0, 0, 0]],
                locals: [],
                templates: []
              };
            })();
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 14,
                    "column": 8
                  },
                  "end": {
                    "line": 26,
                    "column": 8
                  }
                },
                "moduleName": "goods-gateway/components/vp-x-search-current-filters/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(2);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "if", [["get", "filter.translationKeys.label", ["loc", [null, [15, 16], [15, 44]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [15, 10], [19, 17]]]], ["block", "if", [["get", "filter.translationKeys.value", ["loc", [null, [21, 16], [21, 44]]], 0, 0, 0, 0]], [], 2, 3, ["loc", [null, [21, 10], [25, 17]]]]],
              locals: [],
              templates: [child0, child1, child2, child3]
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 13,
                  "column": 6
                },
                "end": {
                  "line": 27,
                  "column": 6
                }
              },
              "moduleName": "goods-gateway/components/vp-x-search-current-filters/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "mx-tag", ["removeSearch", ["get", "filter.group", ["loc", [null, [14, 33], [14, 45]]], 0, 0, 0, 0], ["get", "filter.value", ["loc", [null, [14, 46], [14, 58]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [14, 8], [26, 19]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 12,
                "column": 4
              },
              "end": {
                "line": 28,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-x-search-current-filters/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "filter.value", ["loc", [null, [13, 12], [13, 24]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [13, 6], [27, 13]]]]],
          locals: ["filter"],
          templates: [child0]
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 31,
                  "column": 6
                },
                "end": {
                  "line": 33,
                  "column": 6
                }
              },
              "moduleName": "goods-gateway/components/vp-x-search-current-filters/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["vp-x-search.clearFilters"], [], ["loc", [null, [32, 8], [32, 40]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 30,
                "column": 4
              },
              "end": {
                "line": 34,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-x-search-current-filters/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "mx-tag", ["removeAllSearches"], [], 0, null, ["loc", [null, [31, 6], [33, 17]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 2
            },
            "end": {
              "line": 35,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/components/vp-x-search-current-filters/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "searches", ["loc", [null, [12, 12], [12, 20]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [12, 4], [28, 13]]]], ["block", "if", [["get", "hasMultipleSearches", ["loc", [null, [30, 10], [30, 29]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [30, 4], [34, 11]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-x-search-current-filters/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "filters");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["subexpr", "enabled", ["savedSearches"], [], ["loc", [null, [1, 6], [1, 31]]], 0, 0]], [], 0, null, ["loc", [null, [1, 0], [8, 7]]]], ["block", "mx-tags", [], [], 1, null, ["loc", [null, [11, 2], [35, 14]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/components/vp-x-search/component', ['exports', 'ember', 'goods-gateway/utils/promise'], function (exports, _ember, _goodsGatewayUtilsPromise) {

  var KEY_MAPPINGS = {
    UP: 38,
    DOWN: 40,
    ENTER: 13
  };

  exports['default'] = _ember['default'].Component.extend({
    // args
    debounceTime: 0,
    showInstructions: true,
    singleSelect: false,

    inputId: null,
    required: false,
    searches: null,
    showLabel: false,
    tKey: '',
    tRoot: '',

    // action args
    select: null,

    // lifecycle
    init: function init() {
      this._super.apply(this, arguments);

      if (!this.get('searches')) {
        this.set('searches', []);
      }
    },

    didReceiveAttrs: function didReceiveAttrs() {
      var _this = this;

      if (this.get('_isFocused')) {
        _ember['default'].run.later(function () {
          _this.$('#category-search').focus();
        });
      }
    },

    // attributes
    classNames: ['vp-x-search', 'search-field'],

    // helpers
    query: '',

    _completedResultsCounter: 0,
    completedResults: _ember['default'].computed('searches.@each.numResults', 'searches.@each.results', '_completedResultsCounter', function () {
      var _this2 = this;

      var output = {};

      // Watches pending promises, but excludes them from results for now
      this.get('searches').forEach(function (search) {
        search.get('results').filter(_goodsGatewayUtilsPromise['default'].isPromise).filter(_goodsGatewayUtilsPromise['default'].isPending).forEach(function (p) {
          return p.then(function () {
            // Increment counter to invalidate
            _this2.set('_completedResultsCounter', _this2.get('_completedResultsCounter') + 1);
          });
        });

        // Use only normal values and the results of resolved promises. Pending promises won't display.
        var results = search.get('results').map(_goodsGatewayUtilsPromise['default'].getResult).compact();
        output[search.get('groupName')] = results;
      });

      return output;
    }),

    flattenedCompletedResults: _ember['default'].computed('completedResults', function () {
      var _ref;

      var completedResults = this.get('completedResults');
      var output = [];

      for (var key in completedResults) {
        if (completedResults.hasOwnProperty(key)) {
          output.push(completedResults[key]);
        }
      }

      // Flatten arrays into single array
      return (_ref = []).concat.apply(_ref, output);
    }),

    selectedResult: _ember['default'].computed('flattenedCompletedResults.@each.selected', function () {
      return this.get('flattenedCompletedResults').findBy('selected');
    }),

    showResults: _ember['default'].computed.or('_isFocused', 'query'),

    _handleQuery: _ember['default'].observer('query', function () {
      var _this3 = this;

      var query = this.get('query').trim();
      if (query.length === 0) {
        return;
      }

      var processSearches = function processSearches() {
        _this3.get('searches').forEach(function (search) {
          return search.process(query);
        });
      };

      if (this.get('debounceTime')) {
        var queue = this.get('_handleQueryQueue');
        queue.clear();
        _ember['default'].run.later(function () {
          if (_this3.get('_handleQueryQueue').includes(processSearches)) {
            processSearches();
          }
        }, this.get('debounceTime'));
        queue.pushObject(processSearches);
      } else {
        processSearches();
      }
    }),

    _handleQueryQueue: [],

    _isFocused: _ember['default'].computed('singleSelect', function () {
      return this.get('singleSelect');
    }),

    // events
    focusIn: function focusIn() {
      this.set('_isFocused', true);
    },

    focusOut: function focusOut() {
      this.set('_isFocused', false);
      if (!this.get('query')) {
        this.sendAction('showValue');
      }
    },

    keyDown: function keyDown(event) {
      var code = event.keyCode || event.which;
      if (code === KEY_MAPPINGS.UP) {
        this._goUp();
        return false;
      } else if (code === KEY_MAPPINGS.DOWN) {
        this._goDown();
        return false;
      } else if (code === KEY_MAPPINGS.ENTER) {
        if (this.get('selectedResult')) {
          this.send('select', this.get('selectedResult'));
        }
        this.set('_isFocused', false);
        return false;
      }
      return true;
    },

    _goDown: function _goDown() {
      var currentSelected = this.get('selectedResult');

      // Default to first result
      if (!currentSelected) {
        this.set('flattenedCompletedResults.firstObject.selected', true);
        return;
      }

      var results = this.get('flattenedCompletedResults');
      var selectedIndex = results.indexOf(currentSelected);

      // Increment and wrap to beginning
      if (++selectedIndex >= results.length) {
        selectedIndex = 0;
      }

      // Update selected flags
      currentSelected.set('selected', false);
      results[selectedIndex].set('selected', true);
    },

    _goUp: function _goUp() {
      var currentSelected = this.get('selectedResult');

      // Default to last result
      if (!currentSelected) {
        this.set('flattenedCompletedResults.lastObject.selected', true);
        return;
      }

      var results = this.get('flattenedCompletedResults');
      var selectedIndex = results.indexOf(currentSelected);

      // Decrement and wrap to end
      if (--selectedIndex < 0) {
        selectedIndex = results.length - 1;
      }

      // Update selected flags
      currentSelected.set('selected', false);
      results[selectedIndex].set('selected', true);
    },

    actions: {
      select: function select(result) {
        var selected = {};
        selected[result.get('group')] = result.get('value');
        this.sendAction('select', selected);
        this.set('query', '');
      }
    }
  });
});
define("goods-gateway/components/vp-x-search/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            var child0 = (function () {
              var child0 = (function () {
                return {
                  meta: {
                    "revision": "Ember@2.8.2",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 26,
                        "column": 20
                      },
                      "end": {
                        "line": 30,
                        "column": 20
                      }
                    },
                    "moduleName": "goods-gateway/components/vp-x-search/template.hbs"
                  },
                  isEmpty: false,
                  arity: 0,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createTextNode("                      ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createElement("span");
                    dom.setAttribute(el1, "class", "key");
                    var el2 = dom.createTextNode("\n                        ");
                    dom.appendChild(el1, el2);
                    var el2 = dom.createComment("");
                    dom.appendChild(el1, el2);
                    var el2 = dom.createTextNode("\n                      ");
                    dom.appendChild(el1, el2);
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var morphs = new Array(1);
                    morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
                    return morphs;
                  },
                  statements: [["inline", "t", [["get", "result.translationKeys.label", ["loc", [null, [28, 28], [28, 56]]], 0, 0, 0, 0]], [], ["loc", [null, [28, 24], [28, 58]]], 0, 0]],
                  locals: [],
                  templates: []
                };
              })();
              var child1 = (function () {
                return {
                  meta: {
                    "revision": "Ember@2.8.2",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 32,
                        "column": 22
                      },
                      "end": {
                        "line": 34,
                        "column": 22
                      }
                    },
                    "moduleName": "goods-gateway/components/vp-x-search/template.hbs"
                  },
                  isEmpty: false,
                  arity: 0,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createTextNode("                        ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createComment("");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var morphs = new Array(1);
                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                    return morphs;
                  },
                  statements: [["inline", "t", [["get", "result.translationKeys.value", ["loc", [null, [33, 28], [33, 56]]], 0, 0, 0, 0]], [], ["loc", [null, [33, 24], [33, 58]]], 0, 0]],
                  locals: [],
                  templates: []
                };
              })();
              var child2 = (function () {
                return {
                  meta: {
                    "revision": "Ember@2.8.2",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 34,
                        "column": 22
                      },
                      "end": {
                        "line": 36,
                        "column": 22
                      }
                    },
                    "moduleName": "goods-gateway/components/vp-x-search/template.hbs"
                  },
                  isEmpty: false,
                  arity: 0,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createTextNode("                        ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createComment("");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var morphs = new Array(1);
                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                    return morphs;
                  },
                  statements: [["content", "result.displayValue", ["loc", [null, [35, 24], [35, 47]]], 0, 0, 0, 0]],
                  locals: [],
                  templates: []
                };
              })();
              return {
                meta: {
                  "revision": "Ember@2.8.2",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 23,
                      "column": 14
                    },
                    "end": {
                      "line": 40,
                      "column": 14
                    }
                  },
                  "moduleName": "goods-gateway/components/vp-x-search/template.hbs"
                },
                isEmpty: false,
                arity: 1,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createElement("li");
                  var el2 = dom.createTextNode("\n                  ");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createElement("a");
                  var el3 = dom.createTextNode("\n");
                  dom.appendChild(el2, el3);
                  var el3 = dom.createComment("");
                  dom.appendChild(el2, el3);
                  var el3 = dom.createTextNode("                    ");
                  dom.appendChild(el2, el3);
                  var el3 = dom.createElement("span");
                  dom.setAttribute(el3, "class", "value");
                  var el4 = dom.createTextNode("\n");
                  dom.appendChild(el3, el4);
                  var el4 = dom.createComment("");
                  dom.appendChild(el3, el4);
                  var el4 = dom.createTextNode("                    ");
                  dom.appendChild(el3, el4);
                  dom.appendChild(el2, el3);
                  var el3 = dom.createTextNode("\n                  ");
                  dom.appendChild(el2, el3);
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("\n                ");
                  dom.appendChild(el1, el2);
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var element1 = dom.childAt(fragment, [1, 1]);
                  var morphs = new Array(4);
                  morphs[0] = dom.createAttrMorph(element1, 'class');
                  morphs[1] = dom.createElementMorph(element1);
                  morphs[2] = dom.createMorphAt(element1, 1, 1);
                  morphs[3] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
                  return morphs;
                },
                statements: [["attribute", "class", ["concat", ["result ", ["subexpr", "if", [["get", "result.selected", ["loc", [null, [25, 40], [25, 55]]], 0, 0, 0, 0], "selected"], [], ["loc", [null, [25, 35], [25, 68]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["element", "action", ["select", ["get", "result", ["loc", [null, [25, 88], [25, 94]]], 0, 0, 0, 0]], [], ["loc", [null, [25, 70], [25, 96]]], 0, 0], ["block", "if", [["get", "result.translationKeys.label", ["loc", [null, [26, 26], [26, 54]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [26, 20], [30, 27]]]], ["block", "if", [["get", "result.translationKeys.value", ["loc", [null, [32, 28], [32, 56]]], 0, 0, 0, 0]], [], 1, 2, ["loc", [null, [32, 22], [36, 29]]]]],
                locals: ["result"],
                templates: [child0, child1, child2]
              };
            })();
            var child1 = (function () {
              return {
                meta: {
                  "revision": "Ember@2.8.2",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 41,
                      "column": 14
                    },
                    "end": {
                      "line": 45,
                      "column": 14
                    }
                  },
                  "moduleName": "goods-gateway/components/vp-x-search/template.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createElement("li");
                  dom.setAttribute(el1, "class", "loading");
                  var el2 = dom.createTextNode("\n                  ");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createComment("");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("\n                ");
                  dom.appendChild(el1, el2);
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
                  return morphs;
                },
                statements: [["content", "mx-spinner", ["loc", [null, [43, 18], [43, 32]]], 0, 0, 0, 0]],
                locals: [],
                templates: []
              };
            })();
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 17,
                    "column": 8
                  },
                  "end": {
                    "line": 48,
                    "column": 8
                  }
                },
                "moduleName": "goods-gateway/components/vp-x-search/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("li");
                dom.setAttribute(el1, "class", "row");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("span");
                dom.setAttribute(el2, "class", "group-name md-column--1of3");
                var el3 = dom.createTextNode("\n              ");
                dom.appendChild(el2, el3);
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                var el3 = dom.createTextNode("\n            ");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("ul");
                dom.setAttribute(el2, "class", "md-column--2of3");
                var el3 = dom.createTextNode("\n");
                dom.appendChild(el2, el3);
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                var el3 = dom.createTextNode("            ");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element2 = dom.childAt(fragment, [1]);
                var element3 = dom.childAt(element2, [3]);
                var morphs = new Array(4);
                morphs[0] = dom.createAttrMorph(element2, 'id');
                morphs[1] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
                morphs[2] = dom.createMorphAt(element3, 1, 1);
                morphs[3] = dom.createMorphAt(element3, 2, 2);
                return morphs;
              },
              statements: [["attribute", "id", ["concat", [["get", "search.groupName", ["loc", [null, [18, 20], [18, 36]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", [["subexpr", "concat", ["vp-x-search.titles.", ["get", "search.groupName", ["loc", [null, [20, 48], [20, 64]]], 0, 0, 0, 0]], [], ["loc", [null, [20, 18], [20, 65]]], 0, 0]], [], ["loc", [null, [20, 14], [20, 67]]], 0, 0], ["block", "each", [["subexpr", "get", [["get", "this", ["loc", [null, [23, 27], [23, 31]]], 0, 0, 0, 0], ["subexpr", "concat", ["completedResults.", ["get", "search.groupName", ["loc", [null, [23, 60], [23, 76]]], 0, 0, 0, 0]], [], ["loc", [null, [23, 32], [23, 77]]], 0, 0]], [], ["loc", [null, [23, 22], [23, 78]]], 0, 0]], [], 0, null, ["loc", [null, [23, 14], [40, 23]]]], ["block", "if", [["get", "search.isLoading", ["loc", [null, [41, 20], [41, 36]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [41, 14], [45, 21]]]]],
              locals: [],
              templates: [child0, child1]
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 16,
                  "column": 6
                },
                "end": {
                  "line": 49,
                  "column": 6
                }
              },
              "moduleName": "goods-gateway/components/vp-x-search/template.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["subexpr", "or", [["get", "search.results.length", ["loc", [null, [17, 18], [17, 39]]], 0, 0, 0, 0], ["get", "search.isLoading", ["loc", [null, [17, 40], [17, 56]]], 0, 0, 0, 0]], [], ["loc", [null, [17, 14], [17, 57]]], 0, 0]], [], 0, null, ["loc", [null, [17, 8], [48, 15]]]]],
            locals: ["search"],
            templates: [child0]
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 15,
                "column": 4
              },
              "end": {
                "line": 50,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-x-search/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "each", [["get", "searches", ["loc", [null, [16, 14], [16, 22]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [16, 6], [49, 15]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 60,
                  "column": 12
                },
                "end": {
                  "line": 63,
                  "column": 12
                }
              },
              "moduleName": "goods-gateway/components/vp-x-search/template.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("dt");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("dd");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
              morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 0, 0);
              return morphs;
            },
            statements: [["inline", "t", [["subexpr", "concat", ["vp-x-search.instructions.", ["get", "search.groupName", ["loc", [null, [61, 58], [61, 74]]], 0, 0, 0, 0], ".title"], [], ["loc", [null, [61, 22], [61, 84]]], 0, 0]], [], ["loc", [null, [61, 18], [61, 86]]], 0, 0], ["inline", "t", [["subexpr", "concat", ["vp-x-search.instructions.", ["get", "search.groupName", ["loc", [null, [62, 58], [62, 74]]], 0, 0, 0, 0], ".description"], [], ["loc", [null, [62, 22], [62, 90]]], 0, 0]], [], ["loc", [null, [62, 18], [62, 92]]], 0, 0]],
            locals: ["search"],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 52,
                "column": 4
              },
              "end": {
                "line": 67,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/components/vp-x-search/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("li");
            dom.setAttribute(el1, "class", "row");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "id", "instructions");
            dom.setAttribute(el2, "class", "md-column");
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("h4");
            var el4 = dom.createTextNode("\n            ");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n          ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n\n          ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("dl");
            dom.setAttribute(el3, "class", "mx-dl-horizontal-caps");
            var el4 = dom.createTextNode("\n");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("          ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1, 1]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
            morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["vp-x-search.instructionsTitle"], [], ["loc", [null, [56, 12], [56, 49]]], 0, 0], ["block", "each", [["get", "searches", ["loc", [null, [60, 20], [60, 28]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [60, 12], [63, 21]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/components/vp-x-search/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("ul");
          dom.setAttribute(el1, "id", "search-results");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element4 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(element4, 1, 1);
          morphs[1] = dom.createMorphAt(element4, 3, 3);
          return morphs;
        },
        statements: [["block", "if", [["get", "query", ["loc", [null, [15, 10], [15, 15]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [15, 4], [50, 11]]]], ["block", "if", [["get", "showInstructions", ["loc", [null, [52, 10], [52, 26]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [52, 4], [67, 11]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 70,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/components/vp-x-search/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["inline", "vp-field", [], ["key", "query", "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [3, 8], [3, 12]]], 0, 0, 0, 0]], [], [], 0, 0], "placeholder", ["subexpr", "t", ["vp-x-search.placeholder"], [], ["loc", [null, [4, 14], [4, 43]]], 0, 0], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [5, 11], [5, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "showLabel", ["subexpr", "@mut", [["get", "showLabel", ["loc", [null, [6, 12], [6, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "inputId", ["subexpr", "@mut", [["get", "inputId", ["loc", [null, [7, 10], [7, 17]]], 0, 0, 0, 0]], [], [], 0, 0], "type", "search", "tKey", ["subexpr", "@mut", [["get", "tKey", ["loc", [null, [9, 7], [9, 11]]], 0, 0, 0, 0]], [], [], 0, 0], "tRoot", ["subexpr", "@mut", [["get", "tRoot", ["loc", [null, [10, 8], [10, 13]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [1, 0], [11, 2]]], 0, 0], ["block", "if", [["get", "showResults", ["loc", [null, [13, 6], [13, 17]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [13, 0], [69, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/components/zip-code-input', ['exports', 'ember-inputmask/components/zip-code-input'], function (exports, _emberInputmaskComponentsZipCodeInput) {
  exports['default'] = _emberInputmaskComponentsZipCodeInput['default'];
});
define('goods-gateway/constants/approval-statuses', ['exports'], function (exports) {
  var AUTO_APPROVAL_STATUSES = ['approved', 'content_approved', 'content_rejected', 'market_data_pending', 'pending', 'rejected'];

  exports.AUTO_APPROVAL_STATUSES = AUTO_APPROVAL_STATUSES;
  var MANUAL_APPROVAL_STATUSES = ['approved', 'pending', 'rejected'];

  exports.MANUAL_APPROVAL_STATUSES = MANUAL_APPROVAL_STATUSES;
  //until we add new values (eg. overridden) to MANUAL_APPROVAL_STATUSES
  var APPROVAL_STATUSES = MANUAL_APPROVAL_STATUSES;
  exports.APPROVAL_STATUSES = APPROVAL_STATUSES;
});
define('goods-gateway/constants/auto-rejection-reasons', ['exports'], function (exports) {
  var REJECTION_REASONS = ['attributes_missing', 'auto_approval_not_allowed', 'brand_invalid', 'category_missing', 'cost_exceeds_msrp', 'cost_exceeds_price', 'cost_invalid', 'currency_invalid', 'dup_variant', 'hazmat', 'html_invalid', 'images_missing', 'localized_contents_missing', 'ltl_shipping', 'manufacturer_missing', 'market_data_missing', 'market_price_lower', 'merchant_not_active', 'no_inventory_available', 'not_available_to_groupon', 'option_deactivated', 'price_exceeds_msrp', 'price_too_high', 'price_zero', 'rate_estimator_no_rate_data_found', 'ratings_too_low', 'shipping_cost_invalid', 'tax_info_missing', 'universal_id_missing', 'used_or_refurbished'];
  exports.REJECTION_REASONS = REJECTION_REASONS;
});
define('goods-gateway/constants/band-actions', ['exports'], function (exports) {
  exports['default'] = {
    DELETE: 'delete',
    UPDATE: 'update'
  };
});
define('goods-gateway/constants/bulk-actions', ['exports'], function (exports) {
  var BULK_DEAL_ACTIONS = ['addCategories', 'removeCategories', 'boost', 'deboost'];

  exports.BULK_DEAL_ACTIONS = BULK_DEAL_ACTIONS;
  var BULK_PRODUCT_ACTIONS = ['updateMrt', 'pause', 'unpause'];

  exports.BULK_PRODUCT_ACTIONS = BULK_PRODUCT_ACTIONS;
  // Whether an action uses/requires categories. Unset keys are assumed false.
  // Using an object lets us avoid the `haystackArr.indexOf(needle) !== -1` dance
  // and instead just do `haystackObj[needle]`, a much more pleasant dance.
  var ACTION_USES_CATEGORIES = {
    addCategories: true,
    removeCategories: true,
    updateMrt: true
  };
  exports.ACTION_USES_CATEGORIES = ACTION_USES_CATEGORIES;
});
define('goods-gateway/constants/ca-states', ['exports'], function (exports) {
  var CANADIAN_STATES = ['AB', 'BC', 'MB', 'NB', 'NL', 'NT', 'NS', 'NU', 'ON', 'PE', 'QC', 'SK', 'YT'];

  exports['default'] = CANADIAN_STATES;
});
define('goods-gateway/constants/category-ids', ['exports'], function (exports) {
  var COMMERCEHUB_MERCH_TAG = '0c869ea1-ee18-4a8e-be31-a5ff4d8250f6';
  exports.COMMERCEHUB_MERCH_TAG = COMMERCEHUB_MERCH_TAG;
  var DAILY_DEALS_EMAIL = 'e2b4c106-e03d-4025-8b15-8970616f2233';
  exports.DAILY_DEALS_EMAIL = DAILY_DEALS_EMAIL;
  var MOBILE_FEATURED_TAB = 'f29aa943-4b46-42c7-9694-66d1bf51d6d1';
  exports.MOBILE_FEATURED_TAB = MOBILE_FEATURED_TAB;
  var FREEFORM_ATTRIBUTE_ID = '1ef70132-5ef8-485d-8723-bdecf9644474';
  exports.FREEFORM_ATTRIBUTE_ID = FREEFORM_ATTRIBUTE_ID;
});
define('goods-gateway/constants/contract-statuses', ['exports'], function (exports) {
  var CONTRACT_STATUSES = ['active', 'contracted', 'ended', 'failed', 'pending_review', 'rejected'];
  exports.CONTRACT_STATUSES = CONTRACT_STATUSES;
});
define("goods-gateway/constants/countries", ["exports"], function (exports) {
  // TODO replace with country codes constant
  exports["default"] = [{ value: "US", label: "United States" }, { value: "CA", label: "Canada" }];
});
define('goods-gateway/constants/country-codes', ['exports'], function (exports) {
  var CODES = ['AC', 'AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ', 'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BW', 'BY', 'BZ', 'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ', 'DE', 'DG', 'DJ', 'DK', 'DM', 'DO', 'DZ', 'EA', 'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET', 'FI', 'FJ', 'FK', 'FM', 'FO', 'FR', 'GA', 'GB', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY', 'HK', 'HN', 'HR', 'HT', 'HU', 'IC', 'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT', 'JE', 'JM', 'JO', 'JP', 'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ', 'LA', 'LB', 'LC', 'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY', 'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ', 'NA', 'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ', 'OM', 'PA', 'PE', 'PF', 'PG', 'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY', 'QA', 'RE', 'RO', 'RS', 'RU', 'RW', 'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ', 'TA', 'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TR', 'TT', 'TV', 'TW', 'TZ', 'UA', 'UG', 'UM', 'US', 'UY', 'UZ', 'VA', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU', 'WF', 'WS', 'XK', 'YE', 'YT', 'ZA', 'ZM', 'ZW'];

  exports.CODES = CODES;
  var COUNTRY_CODES_WITH_STATES = ['CA', 'US'];

  exports.COUNTRY_CODES_WITH_STATES = COUNTRY_CODES_WITH_STATES;
  exports['default'] = CODES;
});
define('goods-gateway/constants/currencies', ['exports'], function (exports) {
  exports['default'] = [{ value: 'USD', label: 'USD', symbol: '$', precision: 2 }, { value: 'CAD', label: 'CAD', symbol: '$', precision: 2 }];
});
define('goods-gateway/constants/currency-codes', ['exports'], function (exports) {
  exports['default'] = ['CAD', 'USD'];
});
define('goods-gateway/constants/deal-states', ['exports'], function (exports) {
  var DEAL_STATES = ['draft', 'expired', 'invalid', 'live', 'pending', 'publishing', 'queued'];

  exports['default'] = DEAL_STATES;
});
define('goods-gateway/constants/error-codes', ['exports'], function (exports) {
  var NOT_FOUND_CODE = 'not_found';
  exports.NOT_FOUND_CODE = NOT_FOUND_CODE;
});
define('goods-gateway/constants/feature-states', ['exports'], function (exports) {
  var FEATURE_STATES = ['active', 'ended', 'failed', 'scheduled'];

  var ACTIVE = 'active';
  exports.ACTIVE = ACTIVE;
  var SCHEDULED = 'scheduled';
  exports.SCHEDULED = SCHEDULED;
  var ENDED = 'ended';
  exports.ENDED = ENDED;
  var FAILED = 'failed';

  exports.FAILED = FAILED;
  exports['default'] = FEATURE_STATES;
});
define("goods-gateway/constants/free-shipping-fulfillment-methods", ["exports"], function (exports) {
  exports["default"] = ["Digital Download", "Subscription"];
});
define('goods-gateway/constants/fulfillment-method-to-shipping-field', ['exports'], function (exports) {
  exports['default'] = {
    'Drop ship (Groupon small parcel)': 'groupon_dropship_cost',
    'Drop ship (Supplier small parcel)': 'vendor_dropship_cost',
    'Post-deal purchase 3PL': 'pl_cost',
    'Pre-deal purchase 3PL': 'pl_cost',
    'Consignment': 'pl_cost',
    'Owned Inventory': 'pl_cost'
  };
});
define('goods-gateway/constants/fulfillment-platforms', ['exports'], function (exports) {
  var FULFILLMENT_PLATFORMS = ['commerceinterface', 'commercehub'];

  exports['default'] = FULFILLMENT_PLATFORMS;
});
define('goods-gateway/constants/groupon-variant-categories', ['exports'], function (exports) {
  var GROUPON_VARIANT_CATEGORIES = ['40425aa0-4723-46ef-85ee-59e28ada4b1d'];
  exports.GROUPON_VARIANT_CATEGORIES = GROUPON_VARIANT_CATEGORIES;
});
define('goods-gateway/constants/money-localizations', ['exports'], function (exports) {
  exports['default'] = {
    'en': {
      thousands: ',',
      decimal: '.',
      format: '%s%v'
    }
  };
});
define('goods-gateway/constants/override-reasons', ['exports'], function (exports) {
  exports['default'] = [{ label: 'priceSuggestionOverrideModal.compPrice', value: 'changed_comp_price' }, { label: 'priceSuggestionOverrideModal.differentCostGroups', value: 'different_cost_groups' }, { label: 'priceSuggestionOverrideModal.moreNaturalPricePoint', value: 'more_natural_price_point' }, { label: 'priceSuggestionOverrideModal.negativeGP', value: 'negative_gp' }, { label: 'priceSuggestionOverrideModal.other', value: 'other' }];
});
define('goods-gateway/constants/payment-terms', ['exports'], function (exports) {
  exports['default'] = ['net15', 'net30', 'net45', 'net60', 'net90'];
});
define("goods-gateway/constants/product-export", ["exports"], function (exports) {
  var EXPORT_LIMIT = 1000;
  exports.EXPORT_LIMIT = EXPORT_LIMIT;
});
define('goods-gateway/constants/product-states', ['exports'], function (exports) {
  var PRODUCT_STATES = ['closed', 'created', 'open', 'paused', 'rejected', 'review'];

  exports['default'] = PRODUCT_STATES;
});
define("goods-gateway/constants/regexes", ["exports"], function (exports) {
  var LOCALIZED_CONTENT_REGEX = /^[a-zA-Z\d \.\-,'"&%*#@!?:;\(\)\/]*$/;
  exports.LOCALIZED_CONTENT_REGEX = LOCALIZED_CONTENT_REGEX;
  var MULTILINE_LOCALIZED_CONTENT_REGEX = /^[a-zA-Z\d\s\.\-,'"&%*#@!?:;\(\)\/]*$/;
  exports.MULTILINE_LOCALIZED_CONTENT_REGEX = MULTILINE_LOCALIZED_CONTENT_REGEX;
  var MEASUREMENT_VALUE_REGEX = /^\d+(\.\d{1,2})?$/;
  exports.MEASUREMENT_VALUE_REGEX = MEASUREMENT_VALUE_REGEX;
  var URL_PREFIX_REGEX = /^http(s)?:\/\//;
  exports.URL_PREFIX_REGEX = URL_PREFIX_REGEX;
  var URL_REGEX = /(?:www\.|(?!www))[^\s\.]+\.[^\s]{2,}/;

  exports.URL_REGEX = URL_REGEX;
  // http://stackoverflow.com/questions/46155/validate-email-address-in-javascript
  var EMAIL_REGEX = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
  exports.EMAIL_REGEX = EMAIL_REGEX;
});
define('goods-gateway/constants/reject-reasons', ['exports'], function (exports) {
  var INACTIVE_REASONS = [{ label: 'priceSuggestionRejectModal.proposedPriceTooHigh', value: 'proposed_price_too_high' }, { label: 'priceSuggestionRejectModal.proposedPriceTooLow', value: 'proposed_price_too_low' }, { label: 'priceSuggestionRejectModal.incorrectCompPriceWrongProductMatched', value: 'wrong_product_matched' }, { label: 'priceSuggestionRejectModal.incorrectCompPriceProductBundled', value: 'incorrect_comp_price_product_bundled' }, { label: 'priceSuggestionRejectModal.incorrectCompPriceLowInventory', value: 'incorrect_comp_price_low_inventory' }, { label: 'priceSuggestionRejectModal.incorrectCompPriceNegligibleDiscount', value: 'incorrect_comp_price_negligible_discount' }, { label: 'priceSuggestionRejectModal.featuredDeal', value: 'featured_deal' }, { label: 'priceSuggestionRejectModal.specialVendorPricing', value: 'special_vendor_pricing' }, { label: 'priceSuggestionRejectModal.map', value: 'map' }, { label: 'priceSuggestionRejectModal.clearance', value: 'clearance' }, { label: 'priceSuggestionRejectModal.refurbished', value: 'refurbished' }, { label: 'priceSuggestionRejectModal.dealNotLiveOrSoldOut', value: 'deal_not_live_or_sold_out' }];

  exports.INACTIVE_REASONS = INACTIVE_REASONS;
  var ACTIVE_REASONS = [{ label: 'priceSuggestionRejectModal.bundleOrKittedItem', value: 'bundle_kitted_item' }, { label: 'priceSuggestionRejectModal.changeInMarketPrice', value: 'change_in_market_price_no_change_needed' }, { label: 'priceSuggestionRejectModal.compingDifferingRetailerNotBeingScraped', value: 'comping_differing_retailer_not_being_scraped' }, { label: 'priceSuggestionRejectModal.dealEndingWithinFortyEightHours', value: 'deal_ending_within_forty_eight_hours' }, { label: 'priceSuggestionRejectModal.dealSoldOutOrPaused', value: 'deal_sold_out_or_paused' }, { label: 'priceSuggestionRejectModal.featuredDealIlsSale', value: 'featured_deal_ils_sale' }, { label: 'priceSuggestionRejectModal.proposedPriceAtOrAboveMsrp', value: 'proposed_price_at_or_above_msrp' }, { label: 'priceSuggestionRejectModal.recommendationWillTakeMeToNegativeGp', value: 'recommendation_will_take_me_to_negative_gp' }, { label: 'priceSuggestionRejectModal.specialVendorPricingOrCoOp', value: 'special_vendor_pricing_or_coop' }, { label: 'priceSuggestionRejectModal.strategyMismatchWithGoodBetterBest', value: 'strategy_mismatch_with_good_better_best' }, { label: 'priceSuggestionRejectModal.wrongProductMatched', value: 'wrong_product_matched' }, { label: 'priceSuggestionRejectModal.other', value: 'other' }];
  exports.ACTIVE_REASONS = ACTIVE_REASONS;
});
define("goods-gateway/constants/shipping-costs", ["exports"], function (exports) {
  var DEFAULT_SHIPPING_COST = 3.99;
  exports.DEFAULT_SHIPPING_COST = DEFAULT_SHIPPING_COST;
  var SHIPPING_THRESHOLD = 3499;
  exports.SHIPPING_THRESHOLD = SHIPPING_THRESHOLD;
  var FREE_SHIPPING_COST = 0;
  exports.FREE_SHIPPING_COST = FREE_SHIPPING_COST;
});
define('goods-gateway/constants/shipping-options', ['exports'], function (exports) {
  exports['default'] = ['VENDOR', 'GROUPON'];
});
define('goods-gateway/constants/shipping-services', ['exports'], function (exports) {
  exports['default'] = ['UPS_MI', 'UPS_SP', 'UPS_GRD', 'FedEx_SPLT1', 'FedEx_SPGT1', 'FedEx_GRD', 'FedEx_HD', 'USPS_PS', 'USPS_PSL', 'DHL_PSL', 'NEWG_PS', 'NEWG_PSL'];
});
define('goods-gateway/constants/source-names', ['exports'], function (exports) {
  var SOURCE_NAMES = ['commercehub', 'gateway'];
  exports.SOURCE_NAMES = SOURCE_NAMES;
});
define('goods-gateway/constants/timezones', ['exports'], function (exports) {
  var CST = 'Canada/Saskatchewan';
  exports.CST = CST;
});
define('goods-gateway/constants/units', ['exports'], function (exports) {
  var SIZES = ['inches', 'feet', 'millimeters', 'centimeters', 'meters'];

  exports.SIZES = SIZES;
  var WEIGHTS = ['ounces', 'pounds', 'grams', 'kilograms'];
  exports.WEIGHTS = WEIGHTS;
});
define('goods-gateway/constants/universal-id-types', ['exports'], function (exports) {
  var UNIVERSAL_ID_TYPES = ['gtin-8', 'gtin-12', 'isbn-10', 'gtin-13', 'gtin-14', 'soft-upc'];

  exports['default'] = UNIVERSAL_ID_TYPES;
});
define("goods-gateway/constants/us-states", ["exports"], function (exports) {
  // Stolen from http://www.freeformatter.com/usa-state-list-html-select.html
  // I skipped the Armed Forces-- I don't _think_ they'll be running Groupons
  exports["default"] = [
  // State List (+District)
  { value: "AL", label: "Alabama" }, { value: "AK", label: "Alaska" }, { value: "AZ", label: "Arizona" }, { value: "AR", label: "Arkansas" }, { value: "CA", label: "California" }, { value: "CO", label: "Colorado" }, { value: "CT", label: "Connecticut" }, { value: "DE", label: "Delaware" }, { value: "DC", label: "District Of Columbia" }, { value: "FL", label: "Florida" }, { value: "GA", label: "Georgia" }, { value: "HI", label: "Hawaii" }, { value: "ID", label: "Idaho" }, { value: "IL", label: "Illinois" }, { value: "IN", label: "Indiana" }, { value: "IA", label: "Iowa" }, { value: "KS", label: "Kansas" }, { value: "KY", label: "Kentucky" }, { value: "LA", label: "Louisiana" }, { value: "ME", label: "Maine" }, { value: "MD", label: "Maryland" }, { value: "MA", label: "Massachusetts" }, { value: "MI", label: "Michigan" }, { value: "MN", label: "Minnesota" }, { value: "MS", label: "Mississippi" }, { value: "MO", label: "Missouri" }, { value: "MT", label: "Montana" }, { value: "NE", label: "Nebraska" }, { value: "NV", label: "Nevada" }, { value: "NH", label: "New Hampshire" }, { value: "NJ", label: "New Jersey" }, { value: "NM", label: "New Mexico" }, { value: "NY", label: "New York" }, { value: "NC", label: "North Carolina" }, { value: "ND", label: "North Dakota" }, { value: "OH", label: "Ohio" }, { value: "OK", label: "Oklahoma" }, { value: "OR", label: "Oregon" }, { value: "PA", label: "Pennsylvania" }, { value: "RI", label: "Rhode Island" }, { value: "SC", label: "South Carolina" }, { value: "SD", label: "South Dakota" }, { value: "TN", label: "Tennessee" }, { value: "TX", label: "Texas" }, { value: "UT", label: "Utah" }, { value: "VT", label: "Vermont" }, { value: "VA", label: "Virginia" }, { value: "WA", label: "Washington" }, { value: "WV", label: "West Virginia" }, { value: "WI", label: "Wisconsin" },

  // US Outlying Territories
  { value: "AS", label: "American Samoa" }, { value: "GU", label: "Guam" }, { value: "MP", label: "Northern Mariana Islands" }, { value: "PR", label: "Puerto Rico" }, { value: "UM", label: "United States Minor Outlying Islands" }, { value: "VI", label: "Virgin Islands" }];
});
define('goods-gateway/constants/user-roles', ['exports'], function (exports) {
  exports['default'] = ['internal', 'legacy_gvp_admin'];
});
define("goods-gateway/constants/uuid-regex", ["exports"], function (exports) {
  var UUID_REGEX = /^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$/i;
  exports["default"] = UUID_REGEX;
});
define('goods-gateway/constants/validations', ['exports', 'goods-gateway/constants/regexes'], function (exports, _goodsGatewayConstantsRegexes) {
  var BRAND_MANUFACTURER_VALIDATION = {
    'vp-format': {
      'with': _goodsGatewayConstantsRegexes.LOCALIZED_CONTENT_REGEX,
      allowBlank: false,
      translationKey: 'localizedContent'
    },
    presence: true,
    length: {
      maximum: 128
    }
  };

  exports.BRAND_MANUFACTURER_VALIDATION = BRAND_MANUFACTURER_VALIDATION;
  var MEASUREMENT_UNIT_VALIDATION = {
    presence: true
  };

  exports.MEASUREMENT_UNIT_VALIDATION = MEASUREMENT_UNIT_VALIDATION;
  var MEASUREMENT_VALUE_VALIDATION = {
    format: {
      'with': _goodsGatewayConstantsRegexes.MEASUREMENT_VALUE_REGEX,
      allowBlank: true
    },
    numericality: {
      greaterThan: 0,
      lessThan: 100000
    },
    presence: true
  };
  exports.MEASUREMENT_VALUE_VALIDATION = MEASUREMENT_VALUE_VALIDATION;
});
define('goods-gateway/constants/vendor-statuses', ['exports'], function (exports) {
  exports['default'] = ['active', 'suspended', 'disabled'];
});
define('goods-gateway/constants/vendor-user-association-roles', ['exports'], function (exports) {
  var VENDOR_USER_ASSOCIATION_ROLES = ['member', 'owner'];

  exports['default'] = VENDOR_USER_ASSOCIATION_ROLES;
});
define('goods-gateway/contract/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/v1',
    queryParams: {},
    updateOptions: {
      method: 'POST',
      excludeId: true
    }
  });
});
define('goods-gateway/contract/detail/route', ['exports', 'ember'], function (exports, _ember) {

  var REJECTED = 'rejected';
  var CONTRACTED = 'contracted';
  var PENDING_REVIEW = 'pending_review';

  exports['default'] = _ember['default'].Route.extend({
    flash: _ember['default'].inject.service('flashMessages'),
    isShowingRejectModal: false,

    model: function model(params) {
      var contract = this._getContract(params.id);

      return _ember['default'].RSVP.hash({
        contract: contract
      });
    },

    _getContract: function _getContract(id) {
      return this.store.find('contract', id).then(function (contract) {
        return contract.get('product').then(function () {
          contract.set('offers', contract.get('offers').rejectBy('id', null)); //because ember is not updating nested object ids after save
          return contract;
        });
      });
    },

    actions: {
      cancel: function cancel() {
        this.transitionTo('contract.index');
      },
      update: function update() {
        var _this = this;

        var model = this.modelFor(this.routeName);
        model.contract.save().then(function () {
          _this.get('flash').add({
            message: _this.get('i18n').t('contract.updated'),
            type: 'alert-success'
          });
          _this.transitionTo('contract.index');
        });
      },

      approve: function approve(notes) {
        var _this2 = this;

        this.set('isShowingApproveModal', false);
        var model = this.modelFor(this.routeName);
        model.contract.set('status', CONTRACTED);
        model.contract.set('notes', notes);
        model.contract.save().then(function () {
          _this2.get('flash').add({
            message: _this2.get('i18n').t('contract.approved'),
            type: 'alert-success'
          });
          _this2.transitionTo('contract.index');
        })['catch'](function () {
          model.contract.set('status', PENDING_REVIEW);
        });
      },

      endContract: function endContract() {
        var _this3 = this;

        var model = this.modelFor(this.routeName);
        var oldEndDate = model.contract.get('endDate');
        model.contract.set('endDate', moment().toDate());
        model.contract.save().then(function () {
          _this3.get('flash').add({
            message: _this3.get('i18n').t('contract.scheduledEndDate'),
            type: 'alert-success'
          });
          _this3.transitionTo('contract.index');
        })['catch'](function () {
          model.contract.set('endDate', oldEndDate);
        });
      },

      reject: function reject(notes) {
        var _this4 = this;

        this.set('isShowingRejectModal', false);
        var model = this.modelFor(this.routeName);
        model.contract.set('status', REJECTED);
        model.contract.set('notes', notes);
        model.contract.save().then(function () {
          _this4.get('flash').add({
            message: _this4.get('i18n').t('contract.rejected'),
            type: 'alert-success'
          });
          _this4.transitionTo('contract.index');
        })['catch'](function () {
          model.contract.set('status', PENDING_REVIEW);
        });
      },

      resubmit: function resubmit() {
        var _this5 = this;

        var model = this.modelFor(this.routeName);
        model.contract.set('status', PENDING_REVIEW);
        model.contract.save().then(function () {
          _this5.get('flash').add({
            message: _this5.get('i18n').t('contract.resubmitted'),
            type: 'alert-success'
          });
          _this5.transitionTo('contract.index');
        })['catch'](function () {
          model.contract.set('status', REJECTED);
        });
      },

      applyScheduledSellPriceToAll: function applyScheduledSellPriceToAll(checkedOffers, newScheduledSellPrice) {
        checkedOffers.forEach(function (offer) {
          offer.set('price.amount', newScheduledSellPrice);
          offer.set('isChecked', false);
        });
      }
    }
  });
});
define("goods-gateway/contract/detail/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/contract/detail/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-contract-form", [], ["contract", ["subexpr", "@mut", [["get", "model.contract", ["loc", [null, [2, 11], [2, 25]]], 0, 0, 0, 0]], [], [], 0, 0], "update", "update", "cancel", "cancel", "endContract", "endContract", "resubmit", "resubmit", "reject", "reject", "approve", "approve", "applyScheduledSellPriceToAll", "applyScheduledSellPriceToAll"], ["loc", [null, [1, 0], [10, 2]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/contract/fulfillment-option/model', ['exports', 'ember-data', 'model-fragments', 'ember-validations'], function (exports, _emberData, _modelFragments, _emberValidations) {
  exports['default'] = _emberData['default'].Model.extend(_emberValidations['default'], {
    contract: _emberData['default'].belongsTo('contract'),
    coOpPercentage: _emberData['default'].attr('number'),
    discountAllowance: _emberData['default'].attr('number'),
    freightAllowance: _emberData['default'].attr('number'),
    fulfillmentMethod: _emberData['default'].attr('string'),
    paymentTerms: _emberData['default'].attr('string'),
    shippingSla: _emberData['default'].attr('number'),
    lumpSumCoOp: _modelFragments['default'].fragment('product/item/offer/cost', { defaultValue: {} }),
    validations: {
      'coOpPercentage': {
        length: {
          maximum: 10
        },
        numericality: {
          allowBlank: false,
          greaterThan: 0
        }
      },
      'lumpSumCoOp.amount': {
        length: {
          maximum: 10
        },
        numericality: {
          allowBlank: false,
          onlyInteger: true,
          greaterThan: 0
        }
      },
      discountAllowance: {
        presence: true
      },
      freightAllowance: {
        presence: true
      },
      fulfillmentMethod: {
        presence: true
      },
      paymentTerms: {
        presence: true
      },
      shippingSla: {
        presence: true
      }
    }
  });
});
define("goods-gateway/contract/index-loading/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/contract/index-loading/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "vp-loading-spinner", ["loc", [null, [1, 0], [1, 22]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/contract/index/route', ['exports', 'ember', 'goods-gateway/mixins/search', 'goods-gateway/mixins/gateway-route', 'goods-gateway/mixins/params'], function (exports, _ember, _goodsGatewayMixinsSearch, _goodsGatewayMixinsGatewayRoute, _goodsGatewayMixinsParams) {

  var PAGE_LIMIT = 20;

  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsGatewayRoute['default'], _goodsGatewayMixinsSearch['default'], _goodsGatewayMixinsParams['default'], {
    flash: _ember['default'].inject.service('flashMessages'),
    authorization: _ember['default'].inject.service('authorization'),

    queryParams: { page: { refreshModel: true } },
    searchConfig: {
      categoryIds: {},
      contractStatus: {},
      productId: {},
      productState: {},
      reviewedBy: {},
      title: {},
      vendorId: {}
    },
    searchParamOverrides: {
      'contractStatus': 'status'
    },

    init: function init() {
      this.initRouteSearch();
    },

    model: function model(params) {
      var contracts = this._getEagerLoadedContracts(params);
      var MRTs = this._getMRTs(contracts);

      return _ember['default'].RSVP.hash({
        MRTs: MRTs,
        contracts: contracts,
        searchFilters: this.getSearchFilters(params),
        searchEngines: this.get('activeSearchEngines'),
        showNewContractButton: this.get('showNewContractButton')
      });
    },

    showNewContractButton: _ember['default'].computed.alias('authorization.isExternal'),

    _getMRTs: function _getMRTs(contracts) {
      var _this = this;

      return new _ember['default'].RSVP.Promise(function (accept, reject) {
        contracts.then(function (contracts) {
          var MRTCategoryIDs = contracts.reduce(function (MRTs, contract) {
            MRTs.pushObject(contract.get('product').getWithDefault('items.firstObject.categoryId'));
            return MRTs;
          }, []);
          return _ember['default'].RSVP.all(MRTCategoryIDs.uniq().compact().map(function (id) {
            return _this.get('store').find('category', id).then(null, function () {
              return _ember['default'].Object.create({ id: id });
            });
          })).then(accept, accept);
        }, reject);
      });
    },

    _getEagerLoadedContracts: function _getEagerLoadedContracts(params) {
      return this._getContracts(params).then(function (contracts) {
        var eagerProductPromises = contracts.map(function (contract) {
          return contract.get('product').then(function (product) {
            return product.get('vendor').then(function () {
              return product;
            });
          });
        });

        return _ember['default'].RSVP.all(eagerProductPromises).then(function () {
          return contracts;
        });
      });
    },

    _getContracts: function _getContracts(params) {
      var vendorId = undefined;
      if (this.get('authorization').can('read_default')) {
        vendorId = params.vendorId;
      } else {
        vendorId = this.get('authorization.vendors.firstObject.id');
      }

      var page = params.page || 1;
      var offset = (page - 1) * PAGE_LIMIT;

      var query = {
        filter: _ember['default'].copy(params),
        page: {
          limit: PAGE_LIMIT,
          offset: offset
        }
      };

      delete query.filter.page;
      query.filter.vendorId = vendorId || undefined;

      return this.get('store').query('contract', query);
    },

    _transition: function _transition(params) {
      params.page = undefined;
      this.transitionTo({ queryParams: params });
    },

    _deleteContract: function _deleteContract(id) {
      var _this2 = this;

      return this.store.find('contract', id).then(function (contract) {
        contract.destroyRecord().then(function () {
          _this2.get('flash').add({
            message: _this2.get('i18n').t('contract.deleteContract'),
            type: 'alert-success'
          });
          _this2.refresh();
        })['catch'](function () {
          _this2.get('flash').add({
            message: _this2.get('i18n').t('contract.deleteContractFailed'),
            type: 'alert-error'
          });
        });
      });
    },

    actions: {
      goToPage: function goToPage(page) {
        this.transitionTo({ queryParams: { page: page } });
      },

      removeAllSearches: function removeAllSearches() {
        var currentParams = this.paramsFor('contract.index');
        var newParams = this.removeAllSearchParams(currentParams);
        this._transition(newParams);
      },

      removeSearch: function removeSearch(searchKey, searchValue) {
        var currentParams = this.paramsFor('contract.index');
        var newParams = this.removeSearchParam(searchKey, searchValue, currentParams);
        this._transition(newParams);
      },

      search: function search(criteria) {
        var currentParams = this.paramsFor('contract.index');
        var newParams = this.addSearchParam(criteria, currentParams);
        this._transition(newParams);
      },
      deleteContract: function deleteContract(contractId) {
        this._deleteContract(contractId);
      }
    }
  });
});
define("goods-gateway/contract/index/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 27,
                  "column": 10
                },
                "end": {
                  "line": 29,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/contract/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "vp-add", ["loc", [null, [28, 12], [28, 22]]], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 25,
                "column": 6
              },
              "end": {
                "line": 31,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/contract/index/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "md-column contract-navigation");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["block", "link-to", ["contract.new", ["subexpr", "query-params", [], ["productId", ["get", "productId", ["loc", [null, [27, 60], [27, 69]]], 0, 0, 0, 0]], ["loc", [null, [27, 36], [27, 70]]], 0, 0]], ["title", ["subexpr", "t", ["contract.newContract"], [], ["loc", [null, [27, 77], [27, 103]]], 0, 0], "id", "new-contract-button"], 0, null, ["loc", [null, [27, 10], [29, 22]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 24,
              "column": 4
            },
            "end": {
              "line": 32,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/contract/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "productId", ["loc", [null, [25, 12], [25, 21]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [25, 6], [31, 13]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 47,
                "column": 14
              },
              "end": {
                "line": 51,
                "column": 14
              }
            },
            "moduleName": "goods-gateway/contract/index/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("                ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            var el2 = dom.createTextNode("\n                  ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n                ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["contract.vendor"], [], ["loc", [null, [49, 18], [49, 41]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 57,
                "column": 14
              },
              "end": {
                "line": 61,
                "column": 14
              }
            },
            "moduleName": "goods-gateway/contract/index/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("                ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            var el2 = dom.createTextNode("\n                  ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n                ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [59, 30], [59, 45]]], 0, 0, 0, 0], "productState"], [], ["loc", [null, [59, 22], [59, 61]]], 0, 0]], [], ["loc", [null, [59, 18], [59, 63]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 81,
                "column": 12
              },
              "end": {
                "line": 83,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/contract/index/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "vp-contract-row", [], ["id", ["subexpr", "@mut", [["get", "contract.id", ["loc", [null, [82, 35], [82, 46]]], 0, 0, 0, 0]], [], [], 0, 0], "contract", ["subexpr", "@mut", [["get", "contract", ["loc", [null, [82, 56], [82, 64]]], 0, 0, 0, 0]], [], [], 0, 0], "deleteContract", "deleteContract"], ["loc", [null, [82, 14], [82, 98]]], 0, 0]],
          locals: ["contract"],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 37,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/contract/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("table");
          dom.setAttribute(el1, "id", "contracts-table");
          dom.setAttribute(el1, "class", "search-results table-lined");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("thead");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("tr");
          var el4 = dom.createTextNode("\n               ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "class", "image-header");
          var el5 = dom.createTextNode("\n               ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n               ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "class", "title");
          var el5 = dom.createTextNode("\n                 ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n               ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "class", "status");
          var el5 = dom.createTextNode("\n                ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "class", "number");
          var el5 = dom.createTextNode("\n                ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n              ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "class", "number");
          var el5 = dom.createTextNode("\n                ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n              ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "class", "align-right");
          var el5 = dom.createTextNode("\n                ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n              ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("tbody");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          dom.setAttribute(el2, "id", "contracts-paginator");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(element0, [1, 1]);
          var morphs = new Array(9);
          morphs[0] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
          morphs[1] = dom.createMorphAt(element1, 5, 5);
          morphs[2] = dom.createMorphAt(dom.childAt(element1, [7]), 1, 1);
          morphs[3] = dom.createMorphAt(element1, 9, 9);
          morphs[4] = dom.createMorphAt(dom.childAt(element1, [11]), 1, 1);
          morphs[5] = dom.createMorphAt(dom.childAt(element1, [13]), 1, 1);
          morphs[6] = dom.createMorphAt(dom.childAt(element1, [15]), 1, 1);
          morphs[7] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
          morphs[8] = dom.createMorphAt(dom.childAt(fragment, [3, 1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["contract.name"], [], ["loc", [null, [44, 17], [44, 38]]], 0, 0], ["block", "vp-can", ["read_default"], [], 0, null, ["loc", [null, [47, 14], [51, 25]]]], ["inline", "t", ["contract.status"], [], ["loc", [null, [54, 16], [54, 39]]], 0, 0], ["block", "if", [["subexpr", "enabled", ["searchProductStates"], [], ["loc", [null, [57, 20], [57, 51]]], 0, 0]], [], 1, null, ["loc", [null, [57, 14], [61, 21]]]], ["inline", "t", ["contract.startDate"], [], ["loc", [null, [64, 16], [64, 42]]], 0, 0], ["inline", "t", ["contract.endDate"], [], ["loc", [null, [68, 16], [68, 40]]], 0, 0], ["inline", "t", ["contract.approvalNumbers"], [], ["loc", [null, [72, 16], [72, 48]]], 0, 0], ["block", "each", [["get", "model.contracts", ["loc", [null, [81, 20], [81, 35]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [81, 12], [83, 21]]]], ["inline", "mx-paginator", [], ["action", "goToPage", "meta", ["subexpr", "@mut", [["get", "model.contracts.meta", ["loc", [null, [89, 50], [89, 70]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [89, 12], [89, 72]]], 0, 0]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 92,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/contract/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["contract.index.noContracts"], [], ["loc", [null, [94, 10], [94, 44]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 100,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/contract/index/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "contracts-index");
        dom.setAttribute(el1, "class", "md-column");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n        ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "contract-actions");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("section");
        dom.setAttribute(el3, "id", "contracts-list");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [0]);
        var element3 = dom.childAt(element2, [5]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);
        morphs[1] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element3, [1]), 1, 1);
        morphs[3] = dom.createMorphAt(element3, 3, 3);
        morphs[4] = dom.createMorphAt(dom.childAt(element2, [7, 1]), 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["contract.header"], [], ["loc", [null, [2, 24], [2, 47]]], 0, 0], ["inline", "vp-x-search", [], ["select", "search", "searches", ["subexpr", "@mut", [["get", "model.searchEngines", ["loc", [null, [7, 19], [7, 38]]], 0, 0, 0, 0]], [], [], 0, 0], "debounceTime", 200], ["loc", [null, [5, 8], [9, 10]]], 0, 0], ["inline", "vp-x-search-current-filters", [], ["removeAllSearches", "removeAllSearches", "removeSearch", "removeSearch", "restoreSearch", "restoreSearch", "saveSearch", "saveSearch", "searches", ["subexpr", "@mut", [["get", "model.searchFilters", ["loc", [null, [20, 17], [20, 36]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [15, 6], [21, 8]]], 0, 0], ["block", "if", [["get", "model.showNewContractButton", ["loc", [null, [24, 10], [24, 37]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [24, 4], [32, 11]]]], ["block", "if", [["get", "model.contracts", ["loc", [null, [37, 12], [37, 27]]], 0, 0, 0, 0]], [], 1, 2, ["loc", [null, [37, 6], [96, 13]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define('goods-gateway/contract/model', ['exports', 'ember', 'ember-data', 'ember-validations', 'moment', 'goods-gateway/constants/timezones'], function (exports, _ember, _emberData, _emberValidations, _moment, _goodsGatewayConstantsTimezones) {

  var ACTIVE = 'active';
  var REJECTED = 'rejected';
  var PENDING_REVIEW = 'pending_review';
  var CONTRACTED = 'contracted';

  exports['default'] = _emberData['default'].Model.extend(_emberValidations['default'], {
    offers: _emberData['default'].hasMany('contract/offer'),
    fulfillmentOption: _emberData['default'].belongsTo('contract/fulfillment-option'),

    endDate: _emberData['default'].attr('date', { defaultValue: function defaultValue() {
        return (0, _moment['default'])().tz(_goodsGatewayConstantsTimezones.CST).startOf('day').add(1, 'days').add(1, 'years').toDate();
      } }),
    product: _emberData['default'].belongsTo('product'),
    startDate: _emberData['default'].attr('date', { defaultValue: function defaultValue() {
        return (0, _moment['default'])().tz(_goodsGatewayConstantsTimezones.CST).startOf('day').add(1, 'days').toDate();
      } }),
    notes: _emberData['default'].attr('string'),
    status: _emberData['default'].attr('string', { defaultValue: 'pending_review' }), // not supporting draft in MVP

    isActive: _ember['default'].computed.equal('status', ACTIVE),
    isRejected: _ember['default'].computed.equal('status', REJECTED),
    isPending: _ember['default'].computed.equal('status', PENDING_REVIEW),
    editable: _ember['default'].computed('status', function () {
      return this.get('status') === REJECTED || this.get('status') === PENDING_REVIEW;
    }),

    isContracted: _ember['default'].computed.equal('status', CONTRACTED),

    allChildrenValid: _ember['default'].computed('offers.@each.isValid', 'fulfillmentOption.isValid', function () {
      return this.get('offers').isEvery('isValid') && this.get('fulfillmentOption.isValid');
    }),

    isSellPricePresentOnEveryItem: _ember['default'].computed('offers.@each.priceAmount', function () {
      return this.get('offers').every(function (offer) {
        return typeof offer.get('priceAmount') === 'number' && offer.get('priceAmount') > 0;
      });
    }),

    isShippingCostPresentOnEveryItem: _ember['default'].computed('offers.@each.shippingCostAmount', function () {
      return this.get('offers').every(function (offer) {
        return typeof offer.get('shippingCostAmount') === 'number' && offer.get('shippingCostAmount') > 0;
      });
    }),

    validations: {
      startDate: {
        date: true,
        dateRange: {
          relatedProperties: ['endDate'],
          before: function before(model) {
            var date = model.get('endDate');
            return _moment['default'].isDate(date) ? (0, _moment['default'])(date) : null;
          }
        }
      },
      endDate: {
        date: true
      }
    }
  });
});
define('goods-gateway/contract/new/route', ['exports', 'ember'], function (exports, _ember) {

  var DEFAULT_SHIPPING_ACCOUNT = 'VENDOR';

  exports['default'] = _ember['default'].Route.extend({
    i18n: _ember['default'].inject.service(),
    flash: _ember['default'].inject.service('flashMessages'),

    queryParams: {
      id: { refreshModel: true },
      productId: { refreshModel: true }
    },

    model: function model(params) {
      if (params.id) {
        return this.cloneContractWithProduct(params.id);
      } else if (params.productId) {
        return this.newContractWithProduct(params.productId);
      } else {
        this.transitionTo('index');
      }
    },

    cloneContractWithProduct: function cloneContractWithProduct(contractIdToClone) {
      var _this = this;

      return this.store.findRecord('contract', contractIdToClone).then(function (contractToClone) {
        return _ember['default'].RSVP.hash({
          contractToClone: contractToClone,
          product: contractToClone.get('product')
        }).then(function (_ref) {
          var contractToClone = _ref.contractToClone;
          var product = _ref.product;

          return _ember['default'].RSVP.hash({
            contractToClone: contractToClone,
            product: product,
            merchant: product.get('vendor')
          });
        }).then(function (_ref2) {
          var contractToClone = _ref2.contractToClone;
          var product = _ref2.product;
          var merchant = _ref2.merchant;

          var newContract = _this.newContract(product, merchant);
          _this.copyContract(contractToClone, newContract);
          return _ember['default'].RSVP.hash({
            product: product,
            contract: newContract
          });
        });
      });
    },

    newContractWithProduct: function newContractWithProduct(productId) {
      var _this2 = this;

      var product = this.store.findRecord('product', productId);
      var contract = product.then(function (product) {
        return _ember['default'].RSVP.hash({
          product: product,
          merchant: product.get('vendor')
        });
      }).then(function (_ref3) {
        var product = _ref3.product;
        var merchant = _ref3.merchant;

        return _this2.newContract(product, merchant);
      });
      return _ember['default'].RSVP.hash({
        product: product,
        contract: contract
      });
    },

    copyContract: function copyContract(fromContract, toContract) {
      var _this3 = this;

      toContract.get('offers').forEach(function (offer) {
        var offerToClone = _this3.findOfferForItem(fromContract, offer.get('item'));
        if (offerToClone) {
          offer.get('cost').set('amount', offerToClone.get('cost').get('amount'));
          offer.set('minimumQuantity', offerToClone.get('minimumQuantity'));
        }
      });
    },

    newContract: function newContract(product, merchant) {
      var _this4 = this;

      var contract = this.store.createRecord('contract', {
        product: product
      });
      contract.set('fulfillmentOption', this.newFulfillmentOptionFromMSA(merchant));
      product.get('items').forEach(function (item) {
        var offer = _this4.newOfferForItem(item);
        offer.set('contract', contract);
        contract.get('offers').pushObject(offer);
      });
      return contract;
    },

    findOfferForItem: function findOfferForItem(contract, item) {
      return contract.get('offers').find(function (offer) {
        return offer.get('item').get('id') === item.get('id');
      });
    },

    newOfferForItem: function newOfferForItem(item) {
      return this.store.createRecord('contract/offer', {
        item: item,
        cost: {
          amount: item.get('offers.firstObject.itemCost.amount'),
          currencyCode: item.get('offers.firstObject.itemCost.currencyCode')
        },
        shippingCost: {
          amount: item.get('offers.firstObject.fulfillmentOptions.firstObject.shippingCost.amount'), // SPEECHLESS
          currencyCode: item.get('offers.firstObject.fulfillmentOptions.firstObject.shippingCost.currencyCode')
        },
        minimumQuantity: item.get('offers.firstObject.quantityOnHand')
      });
    },

    newFulfillmentOptionFromMSA: function newFulfillmentOptionFromMSA(merchant) {
      return this.store.createRecord('contract/fulfillment-option', {
        discountAllowance: merchant.get('paymentInfo.discountAllowance'),
        freightAllowance: merchant.get('paymentInfo.freightAllowance'),
        fulfillmentMethod: this.fulfillmentMethod(merchant.get('shippingAccount')),
        paymentTerms: merchant.get('paymentInfo.paymentTerm'),
        shippingSla: merchant.get('shippingSla')
      });
    },

    fulfillmentMethod: function fulfillmentMethod(shippingAccount) {
      shippingAccount = shippingAccount || DEFAULT_SHIPPING_ACCOUNT;
      return this.get('i18n').t('constants.fulfillmentOptions.'.concat(shippingAccount.toLowerCase()));
    },

    actions: {
      cancel: function cancel() {
        var queryParams = this.paramsFor('contract.index');
        this.transitionTo('contract.index', { queryParams: queryParams });
      },

      submit: function submit() {
        var _this5 = this;

        var model = this.modelFor(this.routeName);
        model.contract.save().then(function () {
          _this5.get('flash').add({
            message: _this5.get('i18n').t('contract.created'),
            type: 'alert-success'
          });
          var queryParams = _this5.paramsFor('contract.index');
          _this5.transitionTo('contract.index', { queryParams: queryParams });
        });
      }
    }
  });
});
define("goods-gateway/contract/new/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/contract/new/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-contract-form", [], ["contract", ["subexpr", "@mut", [["get", "model.contract", ["loc", [null, [2, 11], [2, 25]]], 0, 0, 0, 0]], [], [], 0, 0], "cancel", "cancel", "submit", "submit"], ["loc", [null, [1, 0], [5, 2]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/contract/offer/model', ['exports', 'ember', 'ember-data', 'model-fragments', 'ember-validations'], function (exports, _ember, _emberData, _modelFragments, _emberValidations) {
  exports['default'] = _emberData['default'].Model.extend(_emberValidations['default'], {
    contract: _emberData['default'].belongsTo('contract'),
    item: _emberData['default'].belongsTo('product/item'),

    cost: _modelFragments['default'].fragment('product/item/offer/cost', { defaultValue: {} }),
    costAmount: _ember['default'].computed.alias('cost.amount'),
    estimatedShippingCost: _modelFragments['default'].fragment('product/item/offer/cost', { defaultValue: {} }),
    minimumQuantity: _emberData['default'].attr('number'),
    price: _modelFragments['default'].fragment('product/item/offer/cost', { defaultValue: {} }),
    priceAmount: _ember['default'].computed.alias('price.amount'),
    shippingCost: _modelFragments['default'].fragment('product/item/offer/cost', { defaultValue: {} }),
    shippingCostAmount: _ember['default'].computed.alias('shippingCost.amount'),

    validations: {
      'cost.amount': {
        presence: true,
        numericality: {
          allowBlank: false,
          onlyInteger: true,
          greaterThan: 0,
          lessThan: 1000000000
        }
      },
      'shippingCost.amount': {
        length: {
          maximum: 10
        },
        numericality: {
          allowBlank: false,
          onlyInteger: true,
          greaterThan: 0,
          lessThan: 1000000000
        }
      },
      'price.amount': {
        numericality: {
          allowBlank: false,
          onlyInteger: true,
          greaterThan: 0,
          lessThan: 1000000000
        }
      },
      'minimumQuantity': {
        presence: true,
        numericality: {
          allowBlank: false,
          onlyInteger: true,
          greaterThan: 0,
          lessThan: 1000000000
        }
      }
    }
  });
});
define('goods-gateway/contract/offer/serializer', ['exports', 'ember-data', 'goods-gateway/application/serializer'], function (exports, _emberData, _goodsGatewayApplicationSerializer) {
  exports['default'] = _goodsGatewayApplicationSerializer['default'].extend(_emberData['default'].EmbeddedRecordsMixin, {
    keyForRelationship: function keyForRelationship(key) {
      if (key === 'item') {
        return 'itemId';
      } else {
        return this._super.apply(this, arguments);
      }
    },

    serialize: function serialize(record) {
      return this._super(record, { includeId: true });
    }
  });
});
define('goods-gateway/contract/route', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Route.extend({});
});
define('goods-gateway/contract/serializer', ['exports', 'ember-data', 'goods-gateway/application/serializer'], function (exports, _emberData, _goodsGatewayApplicationSerializer) {
  exports['default'] = _goodsGatewayApplicationSerializer['default'].extend(_emberData['default'].EmbeddedRecordsMixin, {
    attrs: {
      offers: {
        embedded: 'always'
      },
      fulfillmentOption: {
        embedded: 'always'
      }
    },

    keyForRelationship: function keyForRelationship(key) {
      if (key === 'product') {
        return 'productId';
      } else {
        return this._super.apply(this, arguments);
      }
    },

    serialize: function serialize(record) {
      return this._super(record, { includeId: true });
    }
  });
});
define("goods-gateway/contract/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/contract/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "page-title", [["subexpr", "t", ["titles.contracts"], [], ["loc", [null, [1, 8], [1, 30]]], 0, 0]], [], ["loc", [null, [1, 0], [1, 32]]], 0, 0], ["content", "outlet", ["loc", [null, [3, 0], [3, 10]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/controllers/array', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Controller;
});
define('goods-gateway/controllers/object', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Controller;
});
define('goods-gateway/current-price/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/v0/pricing_service',

    pathForType: function pathForType() {
      return 'v1_0_current_price';
    }
  });
});
define('goods-gateway/current-price/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {
  exports['default'] = _emberData['default'].Model.extend({
    unitBuyPrice: _modelFragments['default'].fragment('current-price/price'),
    unitPrice: _modelFragments['default'].fragment('current-price/price')
  });
});
define('goods-gateway/current-price/price/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  exports['default'] = _modelFragments['default'].Fragment.extend({
    valueUnscaled: attr('number'),
    currencyCode: attr('string')
  });
});
define('goods-gateway/current-price/serializer', ['exports', 'ember-data'], function (exports, _emberData) {
  exports['default'] = _emberData['default'].JSONSerializer.extend({
    primaryKey: 'productId',
    isNewSerializerAPI: true
  });
});
define('goods-gateway/deal/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/v0/deal_catalog',
    headers: { Pragma: 'no-cache' },
    pathForType: function pathForType() {
      return 'v2_deals';
    }
  });
});
define('goods-gateway/deal/bulk-updates/route', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Route.extend({
    beforeModel: function beforeModel() {
      this.transitionTo('bulk-updates.deals');
    }
  });
});
define('goods-gateway/deal/creative-content/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  var model = _modelFragments['default'].Fragment.extend({
    locale: attr('string'),
    title: attr('string'),
    pitchMarkup: attr('string')
  });

  exports['default'] = model;
});
define('goods-gateway/deal/distribution-window/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  var model = _modelFragments['default'].Fragment.extend({
    type: attr('string'),
    availableAt: attr('date'),
    availableUntil: attr('date')
  });

  exports['default'] = model;
});
define('goods-gateway/deal/link/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  var model = _modelFragments['default'].Fragment.extend({
    href: attr('string'),
    name: attr('string'),
    verb: attr('string')
  });

  exports['default'] = model;
});
define('goods-gateway/deal/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  var model = _emberData['default'].Model.extend({
    slug: attr('string'),
    products: _modelFragments['default'].fragmentArray('deal/product', { defaultValue: function defaultValue() {
        return [];
      } }),
    creativeContents: _modelFragments['default'].fragmentArray('deal/creativeContent', { defaultValue: function defaultValue() {
        return [];
      } }),
    distributionWindows: _modelFragments['default'].fragmentArray('deal/distributionWindow', { defaultValue: function defaultValue() {
        return [];
      } }),
    _links: _modelFragments['default'].fragmentArray('deal/link', { defaultValue: function defaultValue() {
        return [];
      } }),
    images: attr('raw', { defaultValue: function defaultValue() {
        return [];
      } }),
    categoryIds: attr('raw', { defaultValue: function defaultValue() {
        return [];
      } }),
    status: attr('string')
  });

  exports['default'] = model;
});
define('goods-gateway/deal/product/creative-content/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  var model = _modelFragments['default'].Fragment.extend({
    locale: attr('string'),
    title: attr('string'),
    pitchMarkup: attr('string')
  });

  exports['default'] = model;
});
define('goods-gateway/deal/product/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  var model = _modelFragments['default'].Fragment.extend({
    title: attr('string'),
    inventoryProductId: attr('string'),
    creativeContents: _modelFragments['default'].fragmentArray('deal/product/creativeContent')
  });

  exports['default'] = model;
});
define('goods-gateway/deal/route', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Route.extend({
    dealIdLookup: _ember['default'].inject.service(),
    actions: {
      search: function search(id) {
        var _this = this;

        this.get('dealIdLookup').fetch(id).then(function (dealId) {
          _this.transitionTo('deal.show', dealId);
        });
      }
    }
  });
});
define('goods-gateway/deal/serializer', ['exports', 'goods-gateway/application/serializer'], function (exports, _goodsGatewayApplicationSerializer) {
  exports['default'] = _goodsGatewayApplicationSerializer['default'].extend({});
});
define('goods-gateway/deal/show/route', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Route.extend({
    flash: _ember['default'].inject.service('flashMessages'),
    productPauser: _ember['default'].inject.service(),
    dealTagger: _ember['default'].inject.service(),
    model: function model(params) {
      var _this = this;

      var product = new _ember['default'].RSVP.Promise(function (resolve, reject) {
        _this.store.queryRecord('legacyProduct', { deal_uuid: params.deal_id }).then(function (response) {
          resolve(response);
        })['catch'](function (response) {
          if (response.errors[0] && response.errors[0].status === '404') {
            resolve(null);
          } else {
            reject(response);
          }
        });
      });
      return _ember['default'].RSVP.hash({
        deal: this.store.find('deal', params.deal_id),
        product: product
      });
    },
    _actionToHttpMethod: {
      addObject: 'PUT',
      removeObject: 'DELETE'
    },
    _updateTags: function _updateTags(action, tag) {
      var _this2 = this;

      var method = this._actionToHttpMethod[action];
      var deal = this.currentModel.deal;
      var req = this.get('dealTagger').updateTag(deal.get('id'), method, tag);

      var success = function success() {
        return deal.get('categoryIds')[action](tag);
      };
      var error = function error(_error) {
        _error.errors.forEach(function (error) {
          _this2.get('flash').add({
            message: error.detail,
            type: 'alert-error'
          });
        });
      };

      req.then(success, error);
    },
    _togglePause: function _togglePause() {
      var id = this.currentModel.product.get('id');
      if (this.currentModel.deal.get('status') === 'launched') {
        this.get('productPauser').pause(id);
      } else {
        this.get('productPauser').unpause(id);
      }
    },
    actions: {
      addTag: function addTag(tag) {
        this._updateTags('addObject', tag);
      },
      removeTag: function removeTag(tag) {
        this._updateTags('removeObject', tag);
      },
      togglePause: function togglePause() {
        this._togglePause();
      }
    }
  });
});
define("goods-gateway/deal/show/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/deal/show/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-deal-card", [], ["deal", ["subexpr", "@mut", [["get", "model.deal", ["loc", [null, [1, 20], [1, 30]]], 0, 0, 0, 0]], [], [], 0, 0], "product", ["subexpr", "@mut", [["get", "model.product", ["loc", [null, [1, 39], [1, 52]]], 0, 0, 0, 0]], [], [], 0, 0], "removeTag", "removeTag", "addTag", "addTag", "togglePause", "togglePause"], ["loc", [null, [1, 0], [1, 118]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define("goods-gateway/deal/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/deal/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "id", "deal-search-form");
        dom.setAttribute(el1, "class", "md-column--2of3 center");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h1");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("input");
        dom.setAttribute(el2, "type", "submit");
        dom.setAttribute(el2, "class", "button button-primary search-button");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [5]);
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
        morphs[1] = dom.createMorphAt(element0, 3, 3);
        morphs[2] = dom.createAttrMorph(element1, 'value');
        morphs[3] = dom.createElementMorph(element1);
        return morphs;
      },
      statements: [["inline", "t", ["deal.index.title"], [], ["loc", [null, [3, 4], [3, 28]]], 0, 0], ["inline", "input", [], ["id", "deal-search", "class", "text-input deal-search", "type", "search", "value", ["subexpr", "@mut", [["get", "dealIdentifier", ["loc", [null, [9, 8], [9, 22]]], 0, 0, 0, 0]], [], [], 0, 0], "placeholder", ["subexpr", "t", ["deal.searchPlaceholder"], [], ["loc", [null, [10, 14], [10, 42]]], 0, 0]], ["loc", [null, [6, 2], [11, 4]]], 0, 0], ["attribute", "value", ["subexpr", "t", ["search"], [], ["loc", [null, [null, null], [15, 22]]], 0, 0], 0, 0, 0, 0], ["element", "action", ["search", ["get", "dealIdentifier", ["loc", [null, [16, 20], [16, 34]]], 0, 0, 0, 0]], [], ["loc", [null, [16, 2], [16, 36]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/docs/faq/route', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Route.extend({});
});
define("goods-gateway/docs/faq/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/docs/faq/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createTextNode("TODO\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/docs/route', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Route.extend({});
});
define("goods-gateway/docs/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/docs/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "outlet", ["loc", [null, [4, 2], [4, 12]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/docs/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["inline", "page-title", [["subexpr", "t", ["titles.docs"], [], ["loc", [null, [1, 8], [1, 25]]], 0, 0]], [], ["loc", [null, [1, 0], [1, 27]]], 0, 0], ["block", "vp-layout", [], [], 0, null, ["loc", [null, [3, 0], [5, 14]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("goods-gateway/docs/terms-of-use/en/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 367,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/docs/terms-of-use/en/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "id", "terms-of-use");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h1");
        var el3 = dom.createTextNode("\n    Groupon Goods Gateway Terms of Use\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    Effective as of: June 17, 2016\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    Welcome to the Groupon Goods Gateway, a business support platform designed specifically to allow participating vendors to, among other things, make offers to sell goods and services to Groupon, track and manage commercial transactions and fulfill orders for goods and services from Groupon’s customers (together with all services, apps, tools, program interfaces and other software in connection therewith, the “Portal”). In order to use the Portal, including any mobile and touch versions and/or other electronic services made available now or in the future to participating vendors, you must agree to these Terms of Use (“Terms of Use”). These Terms of Use are our “rules of the road” for accessing and using the Portal – they are important, apply to all vendors and their End Users (as defined below) and contain many legal disclosures that you should read carefully. Groupon, Inc. and its subsidiaries and affiliates (“Groupon”, “we,” “us”, “our”), each participating vendor (“you”, “your”) and any individual representative accessing and using the Portal on your behalf (each, an “End User”) may be referred to throughout these Terms of Use individually as a “Party” and collectively as the “Parties”.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    1. APPLICABILITY\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    These Terms of Use do not apply to any website, mobile and touch version, or electronic service that is accessed, or products that are purchased, by any individual purely for personal, household, or family use or consumption (i.e., it does not apply to individuals that purchase Groupon products, services or vouchers for use with products or services for personal consumption) through groupon.com, which access, use, purchase, or relationship is governed by the Groupon Terms located\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("a");
        dom.setAttribute(el3, "href", "http://www.groupon.com/terms");
        var el4 = dom.createTextNode("\n      here\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    and the Privacy Statement located\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("a");
        dom.setAttribute(el3, "href", "http://www.groupon.com/privacy");
        var el4 = dom.createTextNode("\n      here.\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("b");
        var el4 = dom.createTextNode("IMPORTANT");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode(". YOU MAY HAVE, NOW OR IN THE FUTURE, ONE OR MORE SEPARATE AGREEMENTS BETWEEN YOU AND GROUPON GOVERNING THE SALE OF GOODS OR SERVICES OR OTHER COMMERCIAL TRANSACTIONS CONDUCTED THROUGH THE PORTAL (EACH, A “VENDOR AGREEMENT”). THESE TERMS OF USE, WHICH GOVERN YOUR ACCESS TO AND USE OF THE PORTAL, SHALL BE IN ADDITION TO ANY VENDOR AGREEMENT, WHICH SHALL GOVERN THE APPLICABLE SALE OF GOODS OR SERVICES OR OTHER COMMERCIAL TRANSACTIONS. IN THE EVENT OF ANY DIRECT CONFLICT BETWEEN THESE TERMS OF USE AND ANY VENDOR AGREEMENT, THE TERMS OF SUCH VENDOR AGREEMENT SHALL GOVERN.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    2. ACCEPTANCE OF TERMS OF USE\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    Groupon owns and operates the Portal. By using the Portal, any service provided through the Portal, or installing mobile or touch versions that allow access to content or services provided through the Portal, you agree to be bound by these Terms of Use, and any additional terms applicable to certain programs in which you may elect to participate, as any of the same may exist from time to time. IF YOU DO NOT AGREE TO THESE TERMS OF USE, IMMEDIATELY STOP ACCESSING THE PORTAL AND DO NOT USE ANY SERVICE OFFERED THROUGH THE PORTAL.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    3. PERMITTED USES\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    You may only create and hold one account on the Portal. When you register to establish an account, each End User will also be asked to choose a login name and password. The Portal will allow you opportunities to upload or submit certain information (including business account information, banking information, product names, product SKUs, proposed pricing and other product information and/or bid details) and materials (including files, images and photographs) (together with any other content or information submitted or uploaded by you or any End User through, or in connection with, the Portal from time to time, \"Your Content\").  You acknowledge that the Vendor Agreement(s) between you and Groupon shall govern the applicable sale of goods or services or other commercial transaction(s) conducted through the Portal, and that the act of submitting Your Content to the Portal alone will not create a binding purchase and/or sale agreement between you and Groupon.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    As a condition of your use of the Portal, you agree that:\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("ul");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        var el4 = dom.createTextNode("\n      Each End User is an individual person at least 18 years of age.\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        var el4 = dom.createTextNode("\n      Each End User possesses the authority to create a binding legal obligation (both individually and on your behalf as your authorized representative).\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        var el4 = dom.createTextNode("\n      Your and each End User’s use of the Portal will at all times comply with these Terms of Use.\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        var el4 = dom.createTextNode("\n      You will restrict and limit access to your account to those End Users validly authorized by you to act on your behalf.\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        var el4 = dom.createTextNode("\n      You and each End User will maintain the confidentiality and security of all login and password information.\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        var el4 = dom.createTextNode("\n      Groupon may assume that anyone transacting through your account on the Portal is an End User validly authorized by you to do so, and you are solely responsible for any such activity.\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        var el4 = dom.createTextNode("\n      You have the right to provide any and all of Your Content, and you will be solely liable for any damage resulting from any infringement of copyrights, trademarks, proprietary rights or any other harm resulting from Groupon’s subsequent use of Your Content as authorized herein.\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        var el4 = dom.createTextNode("\n      All of Your Content is accurate, true, current and complete, and you will update and correct Your Content as necessary to ensure that it remains accurate, true, current and complete at all times. Out-of-date or inaccurate information may invalidate your account and/or constitute a breach of your Vendor Agreement.\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    4. AVAILABILITY OF THE SITE\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    You acknowledge that there may be interruptions in service or events that are beyond our control. While we use reasonable efforts to keep the Portal accessible, the Portal may be unavailable from time to time for any reason including routine maintenance. You understand and acknowledge that due to circumstances both within and outside of our control, Portal access may be interrupted, suspended or terminated. Groupon retains the right, at our sole discretion, to suspend or terminate an account or deny service or use of the Portal to anyone at any time and for any reason.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    5. OWNERSHIP OF THE SITE\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    The Portal, the Portal Content (as defined below) and the infrastructure used to provide the Portal Content is proprietary to Groupon. By using the Portal and accepting these Terms of Use: (a) Groupon grants you a limited, personal, non-transferable, non-sublicenseable, non-exclusive, revocable license to access and use the Portal solely for purposes that are lawful, pursuant to these Terms of Use and pursuant to any additional terms and policies set forth by Groupon; and (b) unless Groupon expressly permits otherwise, you agree not to use, modify, copy, reproduce, distribute, transmit, display, perform, publish, license, create derivative works from, sell or re-sell or otherwise commercially exploit any content whatsoever that we provide and/or you obtain from or through the Portal, including software, services, text, files, information, real-time data, metrics, analytics, statistics, graphics, logos, icons, images, charts, spreadsheets, lists, interfaces, service marks, domain names, video recordings, audio recordings, photographs or artwork (collectively, the “Portal Content”). For the avoidance of doubt, the term “Portal Content” as used herein shall not include any of Your Content. All rights not expressly granted in these Terms of Use are reserved and retained by Groupon and its licensors.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    6. TRANSMISSION OF INFORMATION\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    Because we do not control the security of the Internet or other networks you use to access the Portal or communicate with us, we can’t be, and are not responsible for, the security of information that you choose to communicate with Groupon and the Portal while it is being transmitted. In addition, Groupon is not responsible for any data lost during transmission.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    7. CONDUCT ON THE PORTAL\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    The Portal is private property. All interactions on the Portal must be lawful and must comply with these Terms of Use. To the extent your conduct (as judged by us in our sole discretion) restricts or inhibits any other users from using or enjoying any part of the Portal, we may limit your privileges on the Portal and/or seek other remedies.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("b");
        var el4 = dom.createTextNode("DO NOT ENGAGE IN ANY OF THE FOLLOWING ACTIVITIES");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode(" – they are prohibited on the Portal and constitute express violations of these Terms of Use:\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("ul");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        var el4 = dom.createTextNode("\n      Submitting any of Your Content to the Portal that:\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("ul");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Is inaccurate, commits fraud or falsifies information;\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Violates any applicable international, federal, state and/or local law (including any law relating to intellectual property, privacy, publicity or defamation) and all executive orders, rules and regulations issued thereunder (collectively, “Applicable Laws”); or\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Contains viruses or malware.\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        var el4 = dom.createTextNode("\n      Attempting to do or actually doing any of the following:\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("ul");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Accessing services, apps and/or software not intended for you, such as logging into a server or an account that you are not authorized to access;\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Engaging in any reverse engineering, or otherwise attempting to gain unauthorized access to Groupon’s computer networks or servers, the Portal, or any content, information, data, or other accounts associated with such computer networks, servers or the Portal;\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Scanning or monitoring the Portal for data gathering purposes in an effort to track sales, usage or aggregate pricing information or similar data;\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Scanning or testing the security or configuration of the Portal or breaching security or authentication measures;\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Interfering with the Portal in any manner, including by means of submitting a virus or other malware to the Portal or attempting to overload, “flood,” “spam,” “mail bomb” or “crash” the Portal; or\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Committing conduct that would constitute a criminal offense, give rise to civil liability or otherwise violate any Applicable Laws or otherwise making available any of Your Content that exploits or harms any individual, corporation or other entity.\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        var el4 = dom.createTextNode("\n      Using any of the following:\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("ul");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Frames, framing techniques or framing technology to enclose any Portal Content;\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Any Portal Content in any meta tags or any other “hidden text” techniques or technologies; or\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          The Portal or any Portal Content to advertise or solicit, for any other commercial, political or religious purpose or to compete, directly or indirectly, with Groupon.\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        var el4 = dom.createTextNode("\n      Engaging in any of the following:\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("ul");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Tampering or interfering with the proper functioning of any part, page or area of the Portal or any functions or services provided by Groupon;\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Taking any action that places excessive demand on our services or imposes, or may impose, an unreasonable or disproportionately large load on our servers or other portion of our infrastructure (as determined in our sole discretion);\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Selling or repurposing your access to the Portal;\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Using the Portal or any Portal Content to solicit Groupon customers, merchants or other business partners of Groupon to become users or partners of other online or offline services directly or indirectly competitive or potentially competitive with Groupon;\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Using any Groupon customer or merchant information obtained through the Portal for any commercial purpose, other than as specifically authorized by these Terms of Use or your Vendor Agreement(s);\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Accessing, monitoring or copying any Portal Content using any “robot,” “spider,” “scraper” or other automated means or any manual process for any purpose without our express written permission;\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Violating the restrictions in any robot exclusion headers on the Portal or bypassing or circumventing other measures employed to prevent or limit access to the Portal;\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Aggregating any live or post-feature content or other information from the Portal with material from other sites or on a secondary site without our express written permission;\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Deep-linking to any portion of the Portal;\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Hyperlinking to the Portal from any other website; or\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          Acting illegally or maliciously against the business interests or reputation of Groupon.\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    8. MODIFICATION OF THESE TERMS OF USE\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    We reserve the right at all times to discontinue or modify any part of these Terms of Use as we deem necessary or desirable. If we make changes that materially affect your use of the Portal or our services we will notify you by posting notice of the change on the Portal. Any changes to these Terms of Use will be effective upon our posting of notice of the changes on the Portal. We suggest that you revisit these Terms of Use frequently to ensure that you stay informed of any such notifications. Your use of the Portal after we update these Terms of Use will constitute acceptance of the modified Terms of Use. We also reserve the right to change or discontinue any aspect or feature of our services or the Portal, including requirements for access or use.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    9. COPYRIGHT AND TRADEMARKS\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    The Portal Content (and the selection, coordination, arrangement and enhancement of the Portal Content) is the exclusive property of Groupon (or is being used with permission) and is protected by copyright as a collective work under the United States copyright laws. ANY COPYING, REPRODUCING, DISTRIBUTING, TRANSMITTING, DISPLAYING, PERFORMING, PUBLISHING, LICENSING, CREATING DERIVATIVE WORKS FROM, SELLING, POSTING, LINKING, DEEP LINKING, OR OTHERWISE MODIFYING ANY PORTAL CONTENT WITHOUT THE EXPRESS WRITTEN PERMISSION OF GROUPON IS PROHIBITED. Any violation of this requirement may result in a copyright, trademark or other intellectual property right infringement that may subject you to civil and/or criminal penalties. You acknowledge that you do not acquire any ownership rights by downloading Portal Content.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    “Groupon”, “Groupon Goods” and “Groupon Goods Gateway” are trademarks of Groupon, Inc. They, together with other trademarks that are located within or on the Portal otherwise owned or operated in conjunction with Groupon, shall not be deemed to be in the public domain but rather the exclusive property of Groupon, unless such mark is under license from the trademark owner thereof, in which case, such license is for the exclusive benefit and use of Groupon.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    You will not upload, post or otherwise make available on the Portal any material, including any of Your Content, protected by copyright, trademark or other proprietary right without the express permission of the owner of the copyright, trademark or other proprietary right. Groupon does not have any express burden or responsibility to provide you with indications, markings or anything else that may aid you in determining whether the material in question is copyrighted or trademarked. You will be solely liable for any damage resulting from any infringement of copyrights, trademarks, proprietary rights or any other harm resulting from such submission or Groupon’s use of Your Content. By submitting any of Your Content to the Portal, you warrant that the owner of such material has expressly granted Groupon (or granted you the right to sublicense to Groupon) the non-exclusive, worldwide, royalty free, fully paid-up, perpetual, irrevocable, transferable and sublicensable right and license to use, modify, copy, reproduce, distribute, transmit, display, perform, publish, create derivative works from, transfer, sell or re-sell or otherwise commercially exploit such material (in whole or in part) and/or to incorporate it in other works in any form, media or technology now known or hereafter developed for the full term of any copyright that may exist in such material.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    10. COPYRIGHT POLICY AND DIGITAL MILLENNIUM COPYRIGHT ACT (DMCA) PROCEDURES\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    Groupon reserves the right to terminate your access to the Portal and any Vendor Agreement(s) in the event that you or any End User infringes third-party intellectual property rights.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    If you believe that any material has been posted via the Portal by an End User in a way that constitutes copyright infringement, you shall provide Groupon with the following information: (a) an electronic or physical signature of the person authorized to act on behalf of the owner of the copyrighted work; (b) an identification of the copyrighted work and the location on the Portal of the allegedly infringing work; (c) a written statement that you have a good faith belief that the disputed use is not authorized by the owner, its agent, or Applicable Law; (d) your name and contact information, including telephone number and e-mail address; and (e) a statement by you that the above information in your notice is accurate and, under penalty of perjury, that you are the copyright owner or authorized to act on the copyright owner’s behalf.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    Contact information for Groupon’s DMCA Agent for notice of claims of copyright infringement is: Groupon, Inc., Attn: Copyright Agent, 600 W Chicago Ave., Chicago, IL 60654.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    You may also submit infringement complaints electronically at\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("a");
        dom.setAttribute(el3, "href", "http://www.groupon.com/report_infringement");
        var el4 = dom.createTextNode("\n      www.groupon.com/report_infringement\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode(".\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    11. CONFIDENTIALITY\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    The Portal and all of the Portal Content are proprietary to Groupon and involve highly sensitive information, data and metrics and/or other confidential information, the disclosure, misuse or misappropriation of which would be extremely detrimental and harmful to Groupon. In addition to any other confidentiality obligations and provisions set forth in any Vendor Agreement, you are hereby required to hold and maintain all Portal account information (including usernames and passwords) and all Portal Content in the strictest confidence. Further, access to and use of the Portal and Portal Content is restricted and granted on an “as needed” basis, such that only your End Users with the appropriate level of clearance and permissions are granted access and use, and only as is consistent with the assigned level of clearance and permissions.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    12. UNSOLICITED IDEAS\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    We do not accept or consider, directly or through any Groupon employee or agents, unsolicited ideas of any kind, including ideas or suggestions relating to new or improved products, enhancements, names or technologies, advertising and marketing campaigns, plans or other promotions. Do not send us (or any of our employees) any unsolicited ideas, suggestions, material, images or other work in any form (“Unsolicited Materials”). If you send us Unsolicited Materials, you understand and agree that the following terms will apply, notwithstanding any cover letter or other terms that accompany them:\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("ul");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        var el4 = dom.createTextNode("\n      Groupon has no obligation to review any unsolicited materials, nor to keep any unsolicited materials confidential; and\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        var el4 = dom.createTextNode("\n      Groupon will own, and may use and redistribute unsolicited materials for any purpose, without restriction and free of any obligation to acknowledge or compensate you.\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    12. DISCLAIMER OF WARRANTY\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    YOU EXPRESSLY AGREE THAT USE OF THE PORTAL IS AT YOUR SOLE RISK.  NONE OF GROUPON, ITS SUBSIDIARIES OR AFFILIATES OR ANY OF THEIR RESPECTIVE EMPLOYEES, AGENTS, THIRD-PARTY CONTENT PROVIDERS OR LICENSORS OR ANY OF THEIR OFFICERS, DIRECTORS, EMPLOYEES OR AGENTS, WARRANT THAT USE OF THE PORTAL WILL BE UNINTERRUPTED, SECURE, VIRUS-FREE OR ERROR FREE, NOR DO THEY MAKE ANY WARRANTY AS TO (A) THE RESULTS THAT MAY BE OBTAINED FROM USE OF THE PORTAL, OR (B) THE ACCURACY, COMPLETENESS OR RELIABILITY OF THE PORTAL CONTENT.  THE PORTAL, ALL PORTAL CONTENT AND OTHER INFORMATION CONTAINED ON THE PORTAL ARE MADE ACCESSIBLE OR AVAILABLE ON AN “AS IS” AND “AS AVAILABLE” BASIS.  TO THE EXTENT ALLOWED BY APPLICABLE LAW, GROUPON HEREBY DISCLAIMS ANY AND ALL REPRESENTATIONS, WARRANTIES AND CONDITIONS, WHETHER EXPRESS, IMPLIED, OR STATUTORY, AS TO THE OPERATION OF THE PORTAL, THE PORTAL CONTENT OR OTHER INFORMATION CONTAINED ON THE PORTAL, INCLUDING THOSE OF TITLE, NON-INFRINGEMENT, NON-INTERFERENCE, MERCHANTABILITY, SUITABILITY AND FITNESS FOR A PARTICULAR PURPOSE, AS WELL AS WARRANTIES IMPLIED FROM A COURSE OF PERFORMANCE OR COURSE OF DEALING.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    13. LIMITATION OF LIABILITY\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    IN NO EVENT SHALL GROUPON, ITS SUBSIDIARIES OR AFFILIATES OR ANY OF THEIR RESPECTIVE OFFICERS, DIRECTORS, EMPLOYEES, AGENTS, THIRD-PARTY CONTENT PROVIDERS OR LICENSORS, OR ANY OF THEIR RESPECTIVE OFFICERS, DIRECTORS, EMPLOYEES OR AGENTS, BE LIABLE FOR ANY INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL, LOST PROFIT, LOST BUSINESS, OR PUNITIVE DAMAGES ARISING OUT OF, RELATED TO, OR IN CONNECTION WITH ANY OF THE FOLLOWING: (A) YOUR USE OF THE PORTAL, THE PORTAL CONTENT, STATEMENTS AND/OR ANY OTHER INFORMATION EITHER CONTAINED IN THE PORTAL OR SUBMITTED BY YOU TO THE PORTAL; (B) YOUR INABILITY TO USE THE PORTAL; (C) MODIFICATION OR REMOVAL OF YOUR CONTENT SUBMITTED ON THE PORTAL; OR (D) THESE TERMS OF USE.  IN NO EVENT WILL GROUPON’S LIABILITY IN CONNECTION WITH THESE TERMS OF USE EXCEED THE AMOUNTS PAID BY YOU TO USE AND ACCESS THE PORTAL OR, IN THE ALTERNATIVE, $100 USD IF NO AMOUNTS WERE PAID TO USE AND ACCESS THE PORTAL.  YOU AGREE THAT ANY CAUSE OF ACTION ARISING OUT OF, RELATED TO, OR IN CONNECTION WITH (A)-(D) ABOVE MUST COMMENCE WITHIN ONE (1) YEAR AFTER THE CAUSE OF ACTION ACCRUES, OR THE CAUSE OF ACTION IS PERMANENTLY BARRED.  BECAUSE SOME JURISDICTIONS DO NOT ALLOW LIMITATIONS ON HOW LONG AN IMPLIED WARRANTY (TO THE EXTENT NOT CAPABLE OF BEING DISCLAIMED) LASTS, ALL OR A PORTION OF THE ABOVE LIMITATION MAY NOT APPLY TO YOU.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    14. COMMUNICATIONS AND MARKETING\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    Groupon may allow you to use the Portal to express opinions and communicate through forums, bulletin boards, discussion groups, chat rooms or other communication facilities that may be offered on or through the Portal from time to time (collectively “Communities”). Groupon shall have the right, but not the obligation, to monitor the content within the Communities at any time, for any reason, including to determine compliance with these Terms of Use and any operating rules established by Groupon, as well as to satisfy any applicable law, regulation or authorized government request. Without limiting the foregoing, Groupon shall have the right, but not the obligation, to remove any material from the Communities that Groupon, in its sole discretion, finds to be in violation of these Terms of Use or otherwise objectionable. Any opinions, advice, ratings, discussions, comments, and/or other messages or postings of any kind made by you or any End User to the Communities (collectively, “Statements”), are those of the respective author(s) or distributor(s) and not of Groupon.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    You may have the opportunity to request additional information about Groupon’s services, register for vendor newsletters, or otherwise make inquiries by submitting your business contact information through the Portal. You agree that we may use your contact information to provide you with the information you requested. You also consent to us using your contact information to send you postal and electronic communications (e.g., emails) with information about Groupon’s and our business partner’s products, promotions and/or services that we think may be of interest to you. We may also use your contact information to solicit your views on our services, develop new offers and promotions, and for market research.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    15. COOKIES AND OTHER TRACKING DEVICES\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    When you use the Portal, we may collect certain information by automated or electronic means, using technologies such as cookies, pixel tags and web beacons, browser analysis tools and web server logs. As you use the Portal, your browser and devices communicate with servers operated by us, our business partners and service providers to coordinate and record the interactivity and fill your requests for services and information.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    16. WEBSITES OF OTHERS\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    The Portal may contain links to websites maintained by other parties not affiliated with Groupon. These links are provided solely as a convenience to you and not because we endorse or have an opinion about the contents on such websites. We expressly disclaim any representations regarding the content or accuracy of materials on such websites or the privacy practices of those websites. If you decide to access websites maintained by other parties, you do so at your own risk.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    17. PUBLIC NATURE OF YOUR STATEMENTS\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    You understand and agree that all Statements are public and not private. Other persons (whether or not a user of Groupon’s services) may read your Statements without your knowledge. Please do not include any Personal Information (as defined in our Privacy Statement) in your Statements. Groupon does not control or endorse any Statement found in any part of the Communities, and we specifically disclaim any liability concerning the Statements and the Communities and any actions resulting from your participation in any part of the Communities, including any objectionable content. Any and all Statements you post to the Portal are not confidential.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    18. LICENSE GRANT\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    By submitting Your Content to the Portal and/or posting Statements or other information on or through the Communities, you grant Groupon a non-exclusive, worldwide, royalty free, fully paid-up, perpetual, irrevocable, transferable and sublicensable right and license to use, modify, copy, reproduce, distribute, transmit, display, perform, publish, create derivative works from, transfer, sell or re-sell or otherwise commercially exploit Your Content and/or Statements, as applicable, alone or as part of other works in any form, media, or technology whether now known or hereafter developed without territorial or time limitations, and to sublicense such rights through multiple tiers of sublicensees. Groupon’s license of Your Content and/or any Statements or information submitted above extends to use for promotions, advertising, market research or any other lawful purpose.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    19. INDEMNIFICATION\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    You agree to defend, indemnify and hold harmless Groupon, its subsidiaries and affiliates and their respective directors, officers, employees and agents from and against any and all claims, liabilities, losses, costs and expenses, including attorneys’ fees, arising out of, related to, or in connection with any of the following: (a) your or any End User’s use of the Portal, including the introduction of any malware, viruses or other malicious code; (b) any of Your Content submitted or posted by you or any End User to the Portal; (c) fraud you or any End User commits or your or any End User’s intentional misconduct or gross negligence; or (d) your or any End User’s violation of any Applicable Laws or rights of a third-party.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    20. CHOICE OF LAW; FORUM\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    Any disputes arising out of or related to these Terms of Use and/or any use by you of the Portal or Groupon’s services shall be governed and interpreted by the laws of the State of Illinois, without regard to its choice of law rules and without regard to conflicts of laws principles. You and Groupon irrevocably consent to the exclusive jurisdiction and venue of the state or federal courts located in Cook County, Illinois, USA for all such disputes.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("\n    21. ADDITIONAL DISCLOSURES\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    No waiver by either you or Groupon of any breach or default or failure to exercise any right allowed under these Terms of Use is a waiver of any preceding or subsequent breach or default or a waiver or forfeiture of any similar or future rights hereunder. If a court of competent jurisdiction holds any provision of these Terms of Use invalid, such invalidity shall not affect the enforceability of any other provisions contained in these Terms of Use, and the remaining portions of these Terms of Use shall continue in full force and effect. The section headings used herein are for convenience only and shall be of no legal force or effect. The words “including” and “include” and other words of similar import shall be deemed to be followed by the phrase “without limitation”.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n    The provisions of these Terms of Use apply equally to and are for the benefit of Groupon, its subsidiaries, affiliates and its third-party content providers and licensors, and each shall have the right to assert and enforce such provisions directly or on its own behalf. Groupon will not be liable for any default or delay in the performance of its obligations under these Terms of Use due to acts of God, terrorism, natural disasters, earthquakes, fire, riots, floods, and other similar events, to the extent such event is beyond Groupon’s reasonable control.\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "page-title", [["subexpr", "t", ["titles.terms"], [], ["loc", [null, [1, 8], [1, 26]]], 0, 0]], [], ["loc", [null, [1, 0], [1, 28]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/docs/terms-of-use/route', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {

  var supportedLocales = ['en'];

  exports['default'] = _ember['default'].Route.extend({
    i18n: _ember['default'].inject.service('i18n'),

    renderTemplate: function renderTemplate() {
      var currentLocale = this.get('i18n.locale');
      var template = supportedLocales.includes(currentLocale) ? currentLocale : _goodsGatewayConfigEnvironment['default'].i18n.defaultLocale;
      this.render('docs/terms-of-use/' + template);
    }
  });
});
define("goods-gateway/docs/terms-of-use/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/docs/terms-of-use/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "outlet", ["loc", [null, [1, 0], [1, 10]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/error/model', ['exports', 'ember-data/model'], function (exports, _emberDataModel) {
  exports['default'] = _emberDataModel['default'].extend({});
});
define("goods-gateway/error/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/error/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("img");
          dom.setAttribute(el1, "id", "error-cat");
          dom.setAttribute(el1, "alt", "error");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element0, 'src');
          return morphs;
        },
        statements: [["attribute", "src", ["subexpr", "asset", ["images/error-cat.jpeg"], [], ["loc", [null, [null, null], [2, 59]]], 0, 0], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/error/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "vp-layout", [], [], 0, null, ["loc", [null, [1, 0], [3, 14]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/errors/not-found-error', ['exports', 'ember-data'], function (exports, _emberData) {

  function NotFoundError() {
    var detail = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];

    _emberData['default'].InvalidError.call(this);
    this.errors = [{
      status: 404,
      detail: detail
    }];
  }

  NotFoundError.prototype = Object.create(_emberData['default'].InvalidError.prototype);

  exports['default'] = NotFoundError;
});
define('goods-gateway/export/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/bulk/v1'
  });
});
define('goods-gateway/export/catalog-export-file/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {
  exports['default'] = _modelFragments['default'].Fragment.extend({
    byteSize: _emberData['default'].attr('number'),
    filename: _emberData['default'].attr('string')
  });
});
define('goods-gateway/export/model', ['exports', 'ember-data', 'model-fragments', 'goods-gateway/utils/ember-helpers'], function (exports, _emberData, _modelFragments, _goodsGatewayUtilsEmberHelpers) {
  exports['default'] = _emberData['default'].Model.extend({
    createdAt: _emberData['default'].attr('date'),
    status: _emberData['default'].attr('string'),
    updatedAt: _emberData['default'].attr('date'),
    vendorId: _emberData['default'].attr('string'),
    view: _emberData['default'].attr('string'),
    catalogExportFile: _modelFragments['default'].fragment('export/catalog-export-file', { defaultValue: _goodsGatewayUtilsEmberHelpers.defaultObject })
  });
});
define('goods-gateway/feature/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/v1',

    urlForCreateRecord: function urlForCreateRecord(_modelName, snapshot) {
      return this._productFeaturesBaseUrl(snapshot);
    },

    urlForUpdateRecord: function urlForUpdateRecord(id, _modelName, snapshot) {
      return this._productFeaturesBaseUrl(snapshot) + '/' + id;
    },

    _productFeaturesBaseUrl: function _productFeaturesBaseUrl(snapshot) {
      var productUrl = this.buildURL('product', snapshot.record.get('product.id'));
      return productUrl + '/features';
    }
  });
});
define('goods-gateway/feature/controller', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Controller.extend({
    orderBy: 'startDate',
    sort: 'asc'
  });
});
define('goods-gateway/feature/feature-states-mixin', ['exports', 'ember', 'goods-gateway/constants/feature-states'], function (exports, _ember, _goodsGatewayConstantsFeatureStates) {
  exports['default'] = _ember['default'].Mixin.create({
    isActive: _ember['default'].computed.equal('state', _goodsGatewayConstantsFeatureStates.ACTIVE),

    isScheduled: _ember['default'].computed.equal('state', _goodsGatewayConstantsFeatureStates.SCHEDULED),

    isEnded: _ember['default'].computed.equal('state', _goodsGatewayConstantsFeatureStates.ENDED),

    isFailed: _ember['default'].computed.equal('state', _goodsGatewayConstantsFeatureStates.FAILED)
  });
});
define("goods-gateway/feature/index-loading/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/feature/index-loading/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "vp-loading-spinner", ["loc", [null, [1, 0], [1, 22]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/feature/index/edit/route', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Route.extend({
    model: function model(params) {
      return this.store.findRecord('feature', params.id).then(function (feature) {
        return feature.get('product').then(function () {
          return feature;
        });
      });
    },

    actions: {
      saveFeature: function saveFeature() {
        var _this = this;

        var feature = this.modelFor(this.routeName);

        feature.save().then(function () {
          var flashMessages = _this.get('flashMessages');
          var i18n = _this.get('i18n');
          flashMessages.add({
            message: i18n.t('feature.updateSuccess'),
            type: 'alert-success'
          });

          _this.transitionTo('feature');
          _this.container.lookup('route:feature').refresh();
        })['catch'](function () {
          _this._close();
        });
      },

      redirectToIndex: function redirectToIndex() {
        this._close();
      }
    },

    _close: function _close() {
      this.modelFor(this.routeName).rollbackAttributes();
      this.transitionTo('feature');
    }
  });
});
define("goods-gateway/feature/index/edit/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/feature/index/edit/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-feature-modal", [], ["title", ["subexpr", "t", ["feature.editFeature"], [], ["loc", [null, [2, 8], [2, 33]]], 0, 0], "feature", ["subexpr", "@mut", [["get", "model", ["loc", [null, [3, 10], [3, 15]]], 0, 0, 0, 0]], [], [], 0, 0], "close", "redirectToIndex", "submit", "saveFeature"], ["loc", [null, [1, 0], [5, 24]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/feature/index/new/route', ['exports', 'ember', 'goods-gateway/utils/date-helpers', 'goods-gateway/feature/model'], function (exports, _ember, _goodsGatewayUtilsDateHelpers, _goodsGatewayFeatureModel) {
  var DEFAULT_FEATURE_LENGTH = 7;
  exports.DEFAULT_FEATURE_LENGTH = DEFAULT_FEATURE_LENGTH;
  exports['default'] = _ember['default'].Route.extend({
    i18n: _ember['default'].inject.service(),

    model: function model() {
      var _this = this;

      return this.store.findRecord('product', this.paramsFor('feature').productId).then(function (product) {
        var newFeature = _this.store.createRecord('feature', {
          product: product,
          startDate: (0, _goodsGatewayUtilsDateHelpers.addWeekDays)(moment(), _goodsGatewayFeatureModel.MINIMUM_WEEK_DAYS_FROM_NOW_TO_START).toDate(),
          endDate: (0, _goodsGatewayUtilsDateHelpers.addWeekDays)(moment(), _goodsGatewayFeatureModel.MINIMUM_WEEK_DAYS_FROM_NOW_TO_START).add(DEFAULT_FEATURE_LENGTH, 'days').toDate(),
          state: 'scheduled'
        });
        return newFeature;
      });
    },

    actions: {
      createFeature: function createFeature() {
        var _this2 = this;

        var feature = this.modelFor(this.routeName);

        feature.save().then(function () {
          var flashMessages = _this2.get('flashMessages');
          var i18n = _this2.get('i18n');
          flashMessages.add({
            message: i18n.t('feature.createSuccess'),
            type: 'alert-success'
          });

          _this2.transitionTo('feature');
          _this2.container.lookup('route:feature').refresh();
        })['catch'](function () {
          _this2.transitionTo('feature');
        });
      },

      redirectToIndex: function redirectToIndex() {
        this.transitionTo('feature');
      }
    }
  });
});
define("goods-gateway/feature/index/new/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/feature/index/new/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-feature-modal", [], ["title", ["subexpr", "t", ["feature.addNewFeature"], [], ["loc", [null, [2, 8], [2, 35]]], 0, 0], "feature", ["subexpr", "@mut", [["get", "model", ["loc", [null, [3, 10], [3, 15]]], 0, 0, 0, 0]], [], [], 0, 0], "close", "redirectToIndex", "submit", "createFeature"], ["loc", [null, [1, 0], [5, 26]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/feature/index/route', ['exports', 'ember', 'goods-gateway/constants/error-codes', 'goods-gateway/mixins/gateway-route'], function (exports, _ember, _goodsGatewayConstantsErrorCodes, _goodsGatewayMixinsGatewayRoute) {

  var PAGE_LIMIT = 10;
  var defaultSort = 'asc';

  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsGatewayRoute['default'], {
    // dependencies
    authorization: _ember['default'].inject.service('authorization'),
    flash: _ember['default'].inject.service('flashMessages'),

    model: function model() {
      var searchParams = this.paramsFor('feature');
      var features = this._getEagerLoadedFeatures(searchParams);

      return _ember['default'].RSVP.hash({
        features: features,
        hasProductContext: _ember['default'].isPresent(searchParams.productId)
      });
    },

    _getEagerLoadedFeatures: function _getEagerLoadedFeatures(params) {
      return this._getFeatures(params).then(function (features) {
        var eagerPromises = features.map(function (feature) {
          return feature.get('productCategory');
        });

        eagerPromises.pushObjects(features.map(function (feature) {
          return feature.get('product');
        }));

        return _ember['default'].RSVP.all(eagerPromises).then(function () {
          return features;
        }, function (reason) {
          if (reason.errors.isEvery('code', _goodsGatewayConstantsErrorCodes.NOT_FOUND_CODE)) {
            return features;
          }
          throw reason;
        });
      });
    },

    _getFeatures: function _getFeatures(params) {
      var page = params.page || 1;
      var offset = (page - 1) * PAGE_LIMIT;

      var order = {};
      order[params.orderBy] = params.sort;

      var filter = _ember['default'].copy(params);
      delete filter.orderBy;
      delete filter.sort;
      delete filter.page;

      var query = {
        filter: filter,
        page: {
          limit: PAGE_LIMIT,
          offset: offset
        },
        order: order
      };

      var vendorId = this.get('authorization.isExternal') ? this.get('authorization.vendors.firstObject.id') : params.vendorId;
      if (vendorId) {
        query.filter.vendorId = vendorId;
      }

      return this.get('store').query('feature/search', query);
    },

    actions: {
      goToPage: function goToPage(page) {
        this.transitionTo({ queryParams: { page: page } });
      },

      sort: function sort(field) {
        var params = this.paramsFor('feature');
        var currentOrderBy = params.orderBy;
        var currentSort = params.sort;
        var newSort = defaultSort;

        if (field === currentOrderBy) {
          newSort = 'asc' === currentSort ? 'desc' : 'asc';
        }

        this.transitionTo({
          queryParams: {
            orderBy: field,
            page: undefined,
            sort: newSort
          }
        });
      },

      'delete': function _delete(featureSearchRecord) {
        var _this = this;

        featureSearchRecord.destroyRecord().then(function () {
          _this.get('flash').add({
            message: _this.get('i18n').t('feature.deleteSuccess'),
            type: 'alert-success'
          });
        }, function () {
          _this.get('flash').add({
            message: _this.get('i18n').t('feature.deleteFailure'),
            type: 'alert-error'
          });
        });
      }
    }
  });
});
define("goods-gateway/feature/index/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 6
            },
            "end": {
              "line": 6,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/feature/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [5, 20], [5, 35]]], 0, 0, 0, 0], "name"], [], ["loc", [null, [5, 12], [5, 43]]], 0, 0]], [], ["loc", [null, [5, 8], [5, 45]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 6
            },
            "end": {
              "line": 10,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/feature/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [9, 20], [9, 35]]], 0, 0, 0, 0], "vendor"], [], ["loc", [null, [9, 12], [9, 45]]], 0, 0]], [], ["loc", [null, [9, 8], [9, 47]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 14,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/feature/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [13, 20], [13, 35]]], 0, 0, 0, 0], "state"], [], ["loc", [null, [13, 12], [13, 44]]], 0, 0]], [], ["loc", [null, [13, 8], [13, 46]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 17,
                "column": 8
              },
              "end": {
                "line": 19,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/feature/index/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [18, 22], [18, 37]]], 0, 0, 0, 0], "productGroupState"], [], ["loc", [null, [18, 14], [18, 58]]], 0, 0]], [], ["loc", [null, [18, 10], [18, 60]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 16,
              "column": 6
            },
            "end": {
              "line": 20,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/feature/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-table-header", [], [], 0, null, ["loc", [null, [17, 8], [19, 28]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 22,
              "column": 6
            },
            "end": {
              "line": 24,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/feature/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [23, 20], [23, 35]]], 0, 0, 0, 0], "startDate"], [], ["loc", [null, [23, 12], [23, 48]]], 0, 0]], [], ["loc", [null, [23, 8], [23, 50]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child5 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 26,
              "column": 6
            },
            "end": {
              "line": 28,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/feature/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [27, 20], [27, 35]]], 0, 0, 0, 0], "endDate"], [], ["loc", [null, [27, 12], [27, 46]]], 0, 0]], [], ["loc", [null, [27, 8], [27, 48]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child6 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 41,
                    "column": 16
                  },
                  "end": {
                    "line": 43,
                    "column": 16
                  }
                },
                "moduleName": "goods-gateway/feature/index/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                  ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["content", "content.title", ["loc", [null, [42, 18], [42, 35]]], 0, 0, 0, 0]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 40,
                  "column": 14
                },
                "end": {
                  "line": 44,
                  "column": 14
                }
              },
              "moduleName": "goods-gateway/feature/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "link-to", ["feature.index.edit", ["get", "feature.id", ["loc", [null, [41, 48], [41, 58]]], 0, 0, 0, 0]], ["class", "edit-feature"], 0, null, ["loc", [null, [41, 16], [43, 28]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 44,
                  "column": 14
                },
                "end": {
                  "line": 46,
                  "column": 14
                }
              },
              "moduleName": "goods-gateway/feature/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "content.title", ["loc", [null, [45, 16], [45, 33]]], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 39,
                "column": 12
              },
              "end": {
                "line": 47,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/feature/index/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "vp-can", ["write_default"], [], 0, 1, ["loc", [null, [40, 14], [46, 25]]]]],
          locals: ["content"],
          templates: [child0, child1]
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 60,
                "column": 10
              },
              "end": {
                "line": 64,
                "column": 10
              }
            },
            "moduleName": "goods-gateway/feature/index/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element1, 'class');
            morphs[1] = dom.createMorphAt(element1, 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["mx-dot ", ["subexpr", "get", [["get", "colorMap", ["loc", [null, [61, 37], [61, 45]]], 0, 0, 0, 0], ["get", "feature.state", ["loc", [null, [61, 46], [61, 59]]], 0, 0, 0, 0]], [], ["loc", [null, [61, 31], [61, 61]]], 0, 0], " state ", ["get", "feature.state", ["loc", [null, [61, 70], [61, 83]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", [["subexpr", "concat", ["constants.featureStates.", ["get", "feature.state", ["loc", [null, [62, 53], [62, 66]]], 0, 0, 0, 0]], [], ["loc", [null, [62, 18], [62, 67]]], 0, 0]], [], ["loc", [null, [62, 14], [62, 69]]], 0, 0]],
          locals: ["colorMap"],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 67,
                "column": 8
              },
              "end": {
                "line": 71,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/feature/index/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "vp-product-state", [["get", "feature.productState", ["loc", [null, [69, 31], [69, 51]]], 0, 0, 0, 0]], [], ["loc", [null, [69, 12], [69, 53]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child3 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 83,
                  "column": 12
                },
                "end": {
                  "line": 87,
                  "column": 12
                }
              },
              "moduleName": "goods-gateway/feature/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [86, 26], [86, 41]]], 0, 0, 0, 0], "viewProductGroup"], [], ["loc", [null, [86, 18], [86, 61]]], 0, 0]], [], ["loc", [null, [86, 14], [86, 63]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 89,
                  "column": 12
                },
                "end": {
                  "line": 94,
                  "column": 12
                }
              },
              "moduleName": "goods-gateway/feature/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [93, 26], [93, 41]]], 0, 0, 0, 0], "viewContracts"], [], ["loc", [null, [93, 18], [93, 58]]], 0, 0]], [], ["loc", [null, [93, 14], [93, 60]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 97,
                    "column": 14
                  },
                  "end": {
                    "line": 101,
                    "column": 14
                  }
                },
                "moduleName": "goods-gateway/feature/index/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "class", "delete");
                var el2 = dom.createTextNode("\n                  ");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element0 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createElementMorph(element0);
                morphs[1] = dom.createMorphAt(element0, 1, 1);
                return morphs;
              },
              statements: [["element", "action", ["delete", ["get", "feature", ["loc", [null, [98, 57], [98, 64]]], 0, 0, 0, 0]], [], ["loc", [null, [98, 39], [98, 66]]], 0, 0], ["inline", "t", ["feature.delete"], [], ["loc", [null, [99, 18], [99, 40]]], 0, 0]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 96,
                  "column": 12
                },
                "end": {
                  "line": 102,
                  "column": 12
                }
              },
              "moduleName": "goods-gateway/feature/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "feature.canBeDeleted", ["loc", [null, [97, 20], [97, 40]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [97, 14], [101, 21]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 82,
                "column": 10
              },
              "end": {
                "line": 103,
                "column": 10
              }
            },
            "moduleName": "goods-gateway/feature/index/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(3);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
            morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "link-to", ["product.edit", ["get", "feature.productId", ["loc", [null, [83, 38], [83, 55]]], 0, 0, 0, 0]], ["class", "product-group button-secondary button-small"], 0, null, ["loc", [null, [83, 12], [87, 24]]]], ["block", "link-to", ["contract.index", ["subexpr", "query-params", [], ["productId", ["get", "feature.productId", ["loc", [null, [90, 38], [90, 55]]], 0, 0, 0, 0]], ["loc", [null, [90, 14], [90, 56]]], 0, 0]], ["class", "related-contracts button-secondary button-small"], 1, null, ["loc", [null, [89, 12], [94, 24]]]], ["block", "vp-can", ["write_default"], [], 2, null, ["loc", [null, [96, 12], [102, 23]]]]],
          locals: [],
          templates: [child0, child1, child2]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 106,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/feature/index/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("span");
          dom.setAttribute(el3, "class", "product-title");
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("span");
          dom.setAttribute(el3, "class", "category");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "vendor-name");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "start-date number");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "end-date number");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element2 = dom.childAt(fragment, [1]);
          var element3 = dom.childAt(element2, [1]);
          var morphs = new Array(8);
          morphs[0] = dom.createMorphAt(dom.childAt(element3, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element3, [3]), 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(element2, [3]), 1, 1);
          morphs[3] = dom.createMorphAt(dom.childAt(element2, [5]), 1, 1);
          morphs[4] = dom.createMorphAt(element2, 7, 7);
          morphs[5] = dom.createMorphAt(dom.childAt(element2, [9]), 1, 1);
          morphs[6] = dom.createMorphAt(dom.childAt(element2, [11]), 1, 1);
          morphs[7] = dom.createMorphAt(dom.childAt(element2, [13]), 1, 1);
          return morphs;
        },
        statements: [["block", "vp-localized-content", [], ["contents", ["subexpr", "@mut", [["get", "feature.productLocalizedContents", ["loc", [null, [39, 45], [39, 77]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [39, 12], [47, 37]]]], ["inline", "vp-category-display", [], ["category", ["subexpr", "@mut", [["get", "feature.productCategory", ["loc", [null, [51, 43], [51, 66]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [51, 12], [51, 68]]], 0, 0], ["content", "feature.productVendorName", ["loc", [null, [56, 10], [56, 39]]], 0, 0, 0, 0], ["block", "with", [["subexpr", "hash", [], ["active", "green", "ended", "blue", "scheduled", "yellow", "failed", "red"], ["loc", [null, [60, 18], [60, 84]]], 0, 0]], [], 1, null, ["loc", [null, [60, 10], [64, 19]]]], ["block", "if", [["subexpr", "enabled", ["searchProductStates"], [], ["loc", [null, [67, 14], [67, 45]]], 0, 0]], [], 2, null, ["loc", [null, [67, 8], [71, 15]]]], ["inline", "moment-format", [["get", "feature.startDate", ["loc", [null, [74, 26], [74, 43]]], 0, 0, 0, 0], "M/D/YYYY"], [], ["loc", [null, [74, 10], [74, 56]]], 0, 0], ["inline", "moment-format", [["get", "feature.endDate", ["loc", [null, [78, 26], [78, 41]]], 0, 0, 0, 0], "M/D/YYYY"], [], ["loc", [null, [78, 10], [78, 54]]], 0, 0], ["block", "vp-dropdown", [], ["icon", "mx-icon-gear mx-icon-24"], 3, null, ["loc", [null, [82, 10], [103, 26]]]]],
        locals: ["feature"],
        templates: [child0, child1, child2, child3]
      };
    })();
    var child7 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 110,
              "column": 0
            },
            "end": {
              "line": 118,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/feature/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("p");
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1, 1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [114, 20], [114, 35]]], 0, 0, 0, 0], "noFeaturesFound"], [], ["loc", [null, [114, 12], [114, 54]]], 0, 0]], [], ["loc", [null, [114, 8], [114, 56]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child8 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 125,
                    "column": 10
                  },
                  "end": {
                    "line": 127,
                    "column": 10
                  }
                },
                "moduleName": "goods-gateway/feature/index/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("            ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [126, 24], [126, 39]]], 0, 0, 0, 0], "newFeature"], [], ["loc", [null, [126, 16], [126, 53]]], 0, 0]], [], ["loc", [null, [126, 12], [126, 55]]], 0, 0]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 124,
                  "column": 8
                },
                "end": {
                  "line": 128,
                  "column": 8
                }
              },
              "moduleName": "goods-gateway/feature/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "link-to", ["feature.index.new"], ["id", "new-feature"], 0, null, ["loc", [null, [125, 10], [127, 22]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 122,
                "column": 4
              },
              "end": {
                "line": 130,
                "column": 4
              }
            },
            "moduleName": "goods-gateway/feature/index/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "md-column");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["block", "vp-add", [], [], 0, null, ["loc", [null, [124, 8], [128, 19]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 121,
              "column": 2
            },
            "end": {
              "line": 131,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/feature/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "model.hasProductContext", ["loc", [null, [122, 10], [122, 33]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [122, 4], [130, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child9 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 137,
              "column": 2
            }
          },
          "moduleName": "goods-gateway/feature/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "md-column");
          dom.setAttribute(el1, "id", "features-paginator");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "mx-paginator", [], ["action", "goToPage", "meta", ["subexpr", "@mut", [["get", "model.features.meta", ["loc", [null, [135, 44], [135, 63]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [135, 6], [135, 65]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 141,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/feature/index/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("table");
        dom.setAttribute(el1, "id", "features-table");
        dom.setAttribute(el1, "class", "search-results table-lined");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("thead");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("tr");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode(" ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment(" actions ");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("tbody");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element4 = dom.childAt(fragment, [0]);
        var element5 = dom.childAt(element4, [1, 1]);
        var element6 = dom.childAt(fragment, [4]);
        var morphs = new Array(12);
        morphs[0] = dom.createMorphAt(element5, 1, 1);
        morphs[1] = dom.createMorphAt(element5, 3, 3);
        morphs[2] = dom.createMorphAt(element5, 5, 5);
        morphs[3] = dom.createMorphAt(element5, 7, 7);
        morphs[4] = dom.createMorphAt(element5, 9, 9);
        morphs[5] = dom.createMorphAt(element5, 11, 11);
        morphs[6] = dom.createMorphAt(element5, 13, 13);
        morphs[7] = dom.createMorphAt(dom.childAt(element4, [3]), 1, 1);
        morphs[8] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[9] = dom.createMorphAt(element6, 1, 1);
        morphs[10] = dom.createMorphAt(element6, 3, 3);
        morphs[11] = dom.createMorphAt(fragment, 6, 6, contextualElement);
        return morphs;
      },
      statements: [["block", "mx-table-header", [], [], 0, null, ["loc", [null, [4, 6], [6, 26]]]], ["block", "mx-table-header", [], [], 1, null, ["loc", [null, [8, 6], [10, 26]]]], ["block", "mx-table-header", [], [], 2, null, ["loc", [null, [12, 6], [14, 26]]]], ["block", "if", [["subexpr", "enabled", ["searchProductStates"], [], ["loc", [null, [16, 12], [16, 43]]], 0, 0]], [], 3, null, ["loc", [null, [16, 6], [20, 13]]]], ["block", "mx-table-header", [], ["sort", "sort", "controllerName", "feature", "field", "startDate", "isNumber", true], 4, null, ["loc", [null, [22, 6], [24, 26]]]], ["block", "mx-table-header", [], ["sort", "sort", "controllerName", "feature", "field", "endDate", "isNumber", true], 5, null, ["loc", [null, [26, 6], [28, 26]]]], ["content", "mx-table-header", ["loc", [null, [30, 6], [30, 25]]], 0, 0, 0, 0], ["block", "each", [["get", "model.features", ["loc", [null, [35, 12], [35, 26]]], 0, 0, 0, 0]], [], 6, null, ["loc", [null, [35, 4], [106, 13]]]], ["block", "unless", [["get", "model.features", ["loc", [null, [110, 10], [110, 24]]], 0, 0, 0, 0]], [], 7, null, ["loc", [null, [110, 0], [118, 11]]]], ["block", "vp-can", ["write_default"], [], 8, null, ["loc", [null, [121, 2], [131, 13]]]], ["block", "if", [["get", "model.features", ["loc", [null, [133, 8], [133, 22]]], 0, 0, 0, 0]], [], 9, null, ["loc", [null, [133, 2], [137, 9]]]], ["content", "outlet", ["loc", [null, [140, 0], [140, 10]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9]
    };
  })());
});
define('goods-gateway/feature/model', ['exports', 'ember', 'ember-data', 'goods-gateway/feature/feature-states-mixin', 'ember-validations', 'moment', 'goods-gateway/utils/date-helpers'], function (exports, _ember, _emberData, _goodsGatewayFeatureFeatureStatesMixin, _emberValidations, _moment, _goodsGatewayUtilsDateHelpers) {
  var MINIMUM_WEEK_DAYS_FROM_NOW_TO_START = 7;

  exports.MINIMUM_WEEK_DAYS_FROM_NOW_TO_START = MINIMUM_WEEK_DAYS_FROM_NOW_TO_START;
  exports['default'] = _emberData['default'].Model.extend(_goodsGatewayFeatureFeatureStatesMixin['default'], _emberValidations['default'], {
    applyStartDateToProduct: _emberData['default'].attr('boolean'),
    product: _emberData['default'].belongsTo('product', {
      inverse: 'features'
    }),
    startDate: _emberData['default'].attr('date'),
    endDate: _emberData['default'].attr('date'),
    imageNotes: _emberData['default'].attr('string'),
    needEditorialReview: _emberData['default'].attr('boolean'),
    salesPoints: _emberData['default'].attr('string'),

    state: _emberData['default'].attr('string'), // active, ended, scheduled or failed
    validations: {
      startDate: {
        date: true,
        dateRange: {
          relatedProperties: ['endDate'],
          before: function before(model) {
            var date = model.get('endDate');
            return _moment['default'].isDate(date) ? (0, _moment['default'])(date) : null;
          },
          after: function after(model) {
            if (model.get('isScheduled')) {
              return (0, _goodsGatewayUtilsDateHelpers.todayAtMidnight)();
            }
          }
        }
      },
      endDate: {
        date: true,
        dateRange: {
          relatedProperties: [],
          before: function before() {},
          after: function after(model) {
            if (model.get('isActive')) {
              return (0, _goodsGatewayUtilsDateHelpers.todayAtMidnight)();
            }
          }
        }
      }
    },

    warnings: _ember['default'].computed('startDate', 'needEditorialReview', function () {
      var warnings = [];
      if (this.get('needEditorialReview')) {
        var startDate = (0, _moment['default'])(this.get('startDate'));
        var targetDate = (0, _goodsGatewayUtilsDateHelpers.addWeekDays)((0, _moment['default'])(), MINIMUM_WEEK_DAYS_FROM_NOW_TO_START).startOf('day');

        if (startDate.isBefore(targetDate)) {
          warnings.push({
            key: 'startDateWarning',
            data: {
              targetDate: targetDate
            }
          });
        }
      }
      return warnings;
    })
  });
});
define('goods-gateway/feature/route', ['exports', 'ember', 'goods-gateway/mixins/gateway-route', 'goods-gateway/mixins/search', 'goods-gateway/mixins/params'], function (exports, _ember, _goodsGatewayMixinsGatewayRoute, _goodsGatewayMixinsSearch, _goodsGatewayMixinsParams) {
  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsGatewayRoute['default'], _goodsGatewayMixinsSearch['default'], _goodsGatewayMixinsParams['default'], {
    authorization: _ember['default'].inject.service('authorization'),

    queryParams: {
      page: {
        refreshModel: true
      },
      sort: {
        refreshModel: true
      },
      orderBy: {
        refreshModel: true
      }
    },
    searchConfig: {
      categoryIds: {},
      featureState: {},
      productId: {},
      productState: {},
      reviewedBy: {},
      title: {},
      vendorId: {}
    },
    searchParamOverrides: {
      featureState: 'states',
      reviewedBy: 'ownerId'
    },

    init: function init() {
      this._super.apply(this, arguments);
      this.initRouteSearch();
    },

    model: function model(params) {
      return _ember['default'].RSVP.hash({
        searchFilters: this.getSearchFilters(params),
        searchEngines: this.get('activeSearchEngines')
      });
    },

    _transition: function _transition(params) {
      params.page = undefined;
      this.transitionTo({ queryParams: params });
    },

    actions: {
      removeAllSearches: function removeAllSearches() {
        var currentParams = this.paramsFor('feature');
        var newParams = this.removeAllSearchParams(currentParams);
        this._transition(newParams);
      },

      removeSearch: function removeSearch(searchKey, searchValue) {
        var currentParams = this.paramsFor('feature');
        var newParams = this.removeSearchParam(searchKey, searchValue, currentParams);
        this._transition(newParams);
      },

      search: function search(criteria) {
        var currentParams = this.paramsFor('feature');
        var newParams = this.addSearchParam(criteria, currentParams);
        this._transition(newParams);
      }
    }
  });
});
define('goods-gateway/feature/search/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/v1',

    queryParams: {},

    urlForQuery: function urlForQuery() {
      return this.get('namespace') + '/features/search';
    },

    urlForDeleteRecord: function urlForDeleteRecord(id, _modelName, snapshot) {
      return this._productFeaturesBaseUrl(snapshot) + '/' + id;
    },

    _productFeaturesBaseUrl: function _productFeaturesBaseUrl(snapshot) {
      var productUrl = this.buildURL('product', snapshot.record.get('productId'));
      return productUrl + '/features';
    }
  });
});
define('goods-gateway/feature/search/model', ['exports', 'ember', 'ember-data', 'model-fragments', 'goods-gateway/feature/feature-states-mixin'], function (exports, _ember, _emberData, _modelFragments, _goodsGatewayFeatureFeatureStatesMixin) {
  exports['default'] = _emberData['default'].Model.extend(_goodsGatewayFeatureFeatureStatesMixin['default'], {
    state: _emberData['default'].attr('string'),
    startDate: _emberData['default'].attr('date'),
    endDate: _emberData['default'].attr('date'),

    productCategory: _emberData['default'].belongsTo('category'),
    productId: _emberData['default'].attr('string'),
    productState: _emberData['default'].attr('string'),
    productVendorName: _emberData['default'].attr('string'),
    productLocalizedContents: _modelFragments['default'].fragmentArray('product/localized-content'),

    canBeDeleted: _ember['default'].computed('state', function () {
      var state = this.get('state');
      return ['scheduled', 'failed'].includes(state);
    })
  });
});
define('goods-gateway/feature/search/serializer', ['exports', 'ember-data', 'goods-gateway/application/serializer'], function (exports, _emberData, _goodsGatewayApplicationSerializer) {
  exports['default'] = _goodsGatewayApplicationSerializer['default'].extend(_emberData['default'].EmbeddedRecordsMixin, {
    keyForRelationship: function keyForRelationship(key) {
      if (key === 'productCategory') {
        return 'productCategoryId';
      } else {
        return this._super.apply(this, arguments);
      }
    },

    modelNameFromPayloadKey: function modelNameFromPayloadKey(key) {
      if (key === 'features') {
        return 'feature/search';
      } else {
        return this._super.apply(this, arguments);
      }
    }
  });
});
define('goods-gateway/feature/serializer', ['exports', 'ember-data', 'goods-gateway/application/serializer'], function (exports, _emberData, _goodsGatewayApplicationSerializer) {
  exports['default'] = _goodsGatewayApplicationSerializer['default'].extend(_emberData['default'].EmbeddedRecordsMixin, {
    keyForRelationship: function keyForRelationship(key) {
      if (key === 'product') {
        return 'productId';
      } else {
        return this._super.apply(this, arguments);
      }
    }
  });
});
define("goods-gateway/feature/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/feature/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("h1");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "feature-search");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "feature-actions");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "id", "date-filter");
        dom.setAttribute(el3, "class", "tag-item");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("label");
        dom.setAttribute(el5, "for", "start-date");
        dom.setAttribute(el5, "class", "date-label");
        var el6 = dom.createTextNode("Start");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n        ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("label");
        dom.setAttribute(el5, "for", "end-date");
        dom.setAttribute(el5, "class", "date-label");
        var el6 = dom.createTextNode("End");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [2]);
        var element1 = dom.childAt(element0, [5]);
        var element2 = dom.childAt(element1, [3]);
        var morphs = new Array(7);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(element0, [1, 1, 1]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element0, [3, 1]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element2, [1]), 3, 3);
        morphs[5] = dom.createMorphAt(dom.childAt(element2, [3]), 3, 3);
        morphs[6] = dom.createMorphAt(element0, 7, 7);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "page-title", [["subexpr", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [1, 19], [1, 34]]], 0, 0, 0, 0], "title"], [], ["loc", [null, [1, 11], [1, 43]]], 0, 0]], [], ["loc", [null, [1, 8], [1, 44]]], 0, 0]], [], ["loc", [null, [1, 0], [1, 46]]], 0, 0], ["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [7, 20], [7, 35]]], 0, 0, 0, 0], "title"], [], ["loc", [null, [7, 12], [7, 44]]], 0, 0]], [], ["loc", [null, [7, 8], [7, 46]]], 0, 0], ["inline", "vp-x-search", [], ["select", "search", "searches", ["subexpr", "@mut", [["get", "model.searchEngines", ["loc", [null, [16, 17], [16, 36]]], 0, 0, 0, 0]], [], [], 0, 0], "debounceTime", 200], ["loc", [null, [14, 6], [18, 8]]], 0, 0], ["inline", "vp-x-search-current-filters", [], ["removeAllSearches", "removeAllSearches", "removeSearch", "removeSearch", "restoreSearch", "restoreSearch", "saveSearch", "saveSearch", "searches", ["subexpr", "@mut", [["get", "model.searchFilters", ["loc", [null, [29, 17], [29, 36]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [24, 6], [30, 8]]], 0, 0], ["inline", "pikaday-input", [], ["name", "start-date", "class", "date-filter", "value", "1/2/2016", "format", "MM/DD/YYYY"], ["loc", [null, [35, 6], [39, 29]]], 0, 0], ["inline", "pikaday-input", [], ["name", "end-date", "class", "date-filter", "value", "1/4/2016", "format", "MM/DD/YYYY"], ["loc", [null, [43, 6], [47, 29]]], 0, 0], ["content", "outlet", ["loc", [null, [52, 2], [52, 12]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define("goods-gateway/features/-main", ["exports", "ember-feature-flags/features", "goods-gateway/config/environment"], function (exports, _emberFeatureFlagsFeatures, _goodsGatewayConfigEnvironment) {
  exports["default"] = _emberFeatureFlagsFeatures["default"].extend({

    init: function init() {
      this._super.apply(this, arguments);

      if (this.application && !Ember.isNone(this.application.FEATURES)) {
        Ember.deprecate('[ember-feature-flags] Setting feature flags via `APP.FEATURES` is deprecated and will be removed.');
        this.setup(this.application.FEATURES);
      } else if (_goodsGatewayConfigEnvironment["default"].featureFlags) {
        this.setup(_goodsGatewayConfigEnvironment["default"].featureFlags);
      }
    }

  });
});
define('goods-gateway/flash/object', ['exports', 'ember-cli-flash/flash/object'], function (exports, _emberCliFlashFlashObject) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberCliFlashFlashObject['default'];
    }
  });
});
define("goods-gateway/helpers/allowance-calculator", ["exports", "ember"], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; })();

  exports["default"] = _ember["default"].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2);

    var base = _ref2[0];
    var percentage = _ref2[1];

    return (base || 0) * 0.01 * (percentage || 0);
  });
});
define('goods-gateway/helpers/and', ['exports', 'ember', 'ember-truth-helpers/helpers/and'], function (exports, _ember, _emberTruthHelpersHelpersAnd) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersAnd.andHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersAnd.andHelper);
  }

  exports['default'] = forExport;
});
define('goods-gateway/helpers/array-to-string', ['exports', 'ember'], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  exports.arrayToString = arrayToString;

  function arrayToString(_ref) {
    var _ref2 = _slicedToArray(_ref, 2);

    var array = _ref2[0];
    var key = _ref2[1];

    var mapped = array.map(function (val) {
      if (key) {
        return val.get(key);
      } else {
        return val;
      }
    });
    return mapped.join(', ');
  }

  exports['default'] = _ember['default'].Helper.helper(arrayToString);
});
define('goods-gateway/helpers/array', ['exports', 'ember'], function (exports, _ember) {
  exports.array = array;

  function array(anonymous_arguments) {
    return anonymous_arguments;
  }

  exports['default'] = _ember['default'].Helper.helper(array);
});
define('goods-gateway/helpers/asset', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  exports.asset = asset;

  function asset(_ref) {
    var _ref2 = _slicedToArray(_ref, 1);

    var path = _ref2[0];

    return _goodsGatewayConfigEnvironment['default'].rootURL + '/assets/' + path;
  }

  exports['default'] = _ember['default'].Helper.helper(asset);
});
define('goods-gateway/helpers/can', ['exports', 'ember', 'goods-gateway/utils/can'], function (exports, _ember, _goodsGatewayUtilsCan) {
  exports['default'] = _ember['default'].Helper.extend({
    authorization: _ember['default'].inject.service(),

    permissionWatcher: _ember['default'].observer('authorization.userInfo.permissions.[]', function () {
      this.recompute();
    }),

    compute: function compute(permissions, options) {
      return (0, _goodsGatewayUtilsCan['default'])(this.get('authorization'), permissions, options);
    }
  });
});
define('goods-gateway/helpers/concatenated-list', ['exports', 'ember'], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  exports.concatenatedList = concatenatedList;

  function concatenatedList(_ref) {
    var _ref2 = _slicedToArray(_ref, 3);

    var list = _ref2[0];
    var key = _ref2[1];
    var delimiter = _ref2[2];

    if (!list) {
      return '';
    }
    return list.map(function (item) {
      return item.get(key);
    }).join(delimiter);
  }

  exports['default'] = _ember['default'].Helper.helper(concatenatedList);
});
define('goods-gateway/helpers/contextual-params', ['exports', 'ember'], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  exports.contextualParams = contextualParams;

  function contextualParams(_ref, explicitParams) {
    var _ref2 = _slicedToArray(_ref, 1);

    var paramsFromContext = _ref2[0];

    var contextualParams = _ember['default'].Object.create({});
    for (var key in paramsFromContext) {
      var value = paramsFromContext[key];
      if (value) {
        contextualParams.set(key, value);
      }
    }
    var allParams = _ember['default'].$.extend(contextualParams, explicitParams);

    return _ember['default'].Object.create({
      isQueryParams: true,
      values: allParams
    });
  }

  exports['default'] = _ember['default'].Helper.helper(contextualParams);
});
define('goods-gateway/helpers/currency-converter', ['exports', 'ember', 'goods-gateway/constants/currencies'], function (exports, _ember, _goodsGatewayConstantsCurrencies) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  exports.currencyConverter = currencyConverter;

  function currencyConverter(_ref) {
    var _ref2 = _slicedToArray(_ref, 1);

    var currencyCode = _ref2[0];

    var currency = _goodsGatewayConstantsCurrencies['default'].find(function (c) {
      return c.value === currencyCode;
    });
    if (!currency) {
      return currencyCode;
    }
    return currency.symbol;
  }

  exports['default'] = _ember['default'].Helper.helper(currencyConverter);
});
define('goods-gateway/helpers/deal-estate-link', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  exports['default'] = _ember['default'].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 1);

    var dealUuid = _ref2[0];

    if (dealUuid) {
      return _goodsGatewayConfigEnvironment['default'].dealEstateLink + dealUuid + '/edit';
    }
  });
});
define("goods-gateway/helpers/decimal-percentage", ["exports", "ember"], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; })();

  exports["default"] = _ember["default"].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 1);

    var percentage = _ref2[0];

    return (percentage || 0) * 0.01;
  });
});
define("goods-gateway/helpers/divide", ["exports", "ember"], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; })();

  exports["default"] = _ember["default"].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2);

    var numerator = _ref2[0];
    var denominator = _ref2[1];

    numerator = numerator || 0;

    return denominator ? numerator / denominator : 0;
  });
});
define("goods-gateway/helpers/effective-shipping-cost", ["exports", "ember"], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; })();

  exports["default"] = _ember["default"].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 3);

    var shipOnVendor = _ref2[0];
    var shippingCost = _ref2[1];
    var estimatedShippingCost = _ref2[2];

    return shipOnVendor ? shippingCost || 0 : estimatedShippingCost || 0;
  });
});
define('goods-gateway/helpers/enabled', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  exports.enabled = enabled;

  function enabled(_ref) {
    var _ref2 = _slicedToArray(_ref, 1);

    var featureName = _ref2[0];

    return _goodsGatewayConfigEnvironment['default'].featureFlags[featureName];
  }

  exports['default'] = _ember['default'].Helper.helper(enabled);
});
define('goods-gateway/helpers/eq', ['exports', 'ember', 'ember-truth-helpers/helpers/equal'], function (exports, _ember, _emberTruthHelpersHelpersEqual) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersEqual.equalHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersEqual.equalHelper);
  }

  exports['default'] = forExport;
});
define('goods-gateway/helpers/format-currency', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Helper.extend({
    money: _ember['default'].inject.service('money'),

    compute: function compute(params) {
      var amount = params[0];
      var currencyCode = params[1];
      return this.get('money').toFormattedAmount(amount, currencyCode);
    }
  });
});
define('goods-gateway/helpers/format-money', ['exports', 'accounting/helpers/format-money'], function (exports, _accountingHelpersFormatMoney) {
  exports['default'] = _accountingHelpersFormatMoney['default'];
});
define('goods-gateway/helpers/format-number', ['exports', 'accounting/helpers/format-number'], function (exports, _accountingHelpersFormatNumber) {
  exports['default'] = _accountingHelpersFormatNumber['default'];
});
define('goods-gateway/helpers/gc-link', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  exports['default'] = _ember['default'].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 1);

    var dealUuid = _ref2[0];

    if (dealUuid) {
      return _goodsGatewayConfigEnvironment['default'].gcLink + dealUuid;
    }
  });
});
define("goods-gateway/helpers/gross-revenue", ["exports", "ember"], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; })();

  exports["default"] = _ember["default"].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 4);

    var cost = _ref2[0];
    var allowance = _ref2[1];
    var shippingCost = _ref2[2];
    var price = _ref2[3];

    var totalCost = (cost || 0) - (allowance || 0) + (shippingCost || 0);

    return (price || 0) - totalCost;
  });
});
define('goods-gateway/helpers/gt', ['exports', 'ember', 'ember-truth-helpers/helpers/gt'], function (exports, _ember, _emberTruthHelpersHelpersGt) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersGt.gtHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersGt.gtHelper);
  }

  exports['default'] = forExport;
});
define('goods-gateway/helpers/gte', ['exports', 'ember', 'ember-truth-helpers/helpers/gte'], function (exports, _ember, _emberTruthHelpersHelpersGte) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersGte.gteHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersGte.gteHelper);
  }

  exports['default'] = forExport;
});
define('goods-gateway/helpers/is-array', ['exports', 'ember', 'ember-truth-helpers/helpers/is-array'], function (exports, _ember, _emberTruthHelpersHelpersIsArray) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersIsArray.isArrayHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersIsArray.isArrayHelper);
  }

  exports['default'] = forExport;
});
define("goods-gateway/helpers/is-equal", ["exports", "ember"], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; })();

  exports["default"] = _ember["default"].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2);

    var leftSide = _ref2[0];
    var rightSide = _ref2[1];

    return leftSide === rightSide;
  });
});
define("goods-gateway/helpers/is-ship-on-vendor", ["exports", "ember"], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; })();

  exports["default"] = _ember["default"].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 1);

    var fulfillmentMethod = _ref2[0];

    var shipOnVendor = 'Drop ship (Supplier small parcel)';
    return (fulfillmentMethod || false) && fulfillmentMethod.toString() === shipOnVendor;
  });
});
define('goods-gateway/helpers/item-attribute', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Helper.extend({
    i18n: _ember['default'].inject.service('i18n'),

    compute: function compute(params) {
      var attribute = params[0];
      var selectedMRT = params[1];
      if (_ember['default'].isBlank(selectedMRT)) {
        return '';
      }
      var variantCategory = selectedMRT.get('variantCategories').findBy('id', attribute.attrNameId);
      if (_ember['default'].isBlank(variantCategory)) {
        return '';
      }
      var variantValueCategory = variantCategory.get('values').findBy('id', attribute.attrValueId);
      if (_ember['default'].isBlank(variantValueCategory)) {
        return '';
      }

      var variantName = this.forLocale(variantCategory.get('localizedContents')).get('name');
      var variantValueName = this.forLocale(variantValueCategory.get('localizedContents')).get('name');

      return this.get('i18n').t('helpers.item-attribute.title', { name: variantName, value: variantValueName });
    },

    forLocale: function forLocale(contents) {
      var locale = this.get('i18n.locale');
      return contents.find(function (content) {
        return content.get('locale').match(locale);
      });
    }
  });
});
define('goods-gateway/helpers/lt', ['exports', 'ember', 'ember-truth-helpers/helpers/lt'], function (exports, _ember, _emberTruthHelpersHelpersLt) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersLt.ltHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersLt.ltHelper);
  }

  exports['default'] = forExport;
});
define('goods-gateway/helpers/lte', ['exports', 'ember', 'ember-truth-helpers/helpers/lte'], function (exports, _ember, _emberTruthHelpersHelpersLte) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersLte.lteHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersLte.lteHelper);
  }

  exports['default'] = forExport;
});
define('goods-gateway/helpers/moment-duration', ['exports', 'ember-moment/helpers/moment-duration'], function (exports, _emberMomentHelpersMomentDuration) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberMomentHelpersMomentDuration['default'];
    }
  });
});
define('goods-gateway/helpers/moment-format', ['exports', 'ember', 'goods-gateway/config/environment', 'ember-moment/helpers/moment-format'], function (exports, _ember, _goodsGatewayConfigEnvironment, _emberMomentHelpersMomentFormat) {
  exports['default'] = _emberMomentHelpersMomentFormat['default'].extend({
    globalOutputFormat: _ember['default'].get(_goodsGatewayConfigEnvironment['default'], 'moment.outputFormat'),
    globalAllowEmpty: !!_ember['default'].get(_goodsGatewayConfigEnvironment['default'], 'moment.allowEmpty')
  });
});
define('goods-gateway/helpers/moment-from-now', ['exports', 'ember', 'goods-gateway/config/environment', 'ember-moment/helpers/moment-from-now'], function (exports, _ember, _goodsGatewayConfigEnvironment, _emberMomentHelpersMomentFromNow) {
  exports['default'] = _emberMomentHelpersMomentFromNow['default'].extend({
    globalAllowEmpty: !!_ember['default'].get(_goodsGatewayConfigEnvironment['default'], 'moment.allowEmpty')
  });
});
define('goods-gateway/helpers/moment-to-now', ['exports', 'ember', 'goods-gateway/config/environment', 'ember-moment/helpers/moment-to-now'], function (exports, _ember, _goodsGatewayConfigEnvironment, _emberMomentHelpersMomentToNow) {
  exports['default'] = _emberMomentHelpersMomentToNow['default'].extend({
    globalAllowEmpty: !!_ember['default'].get(_goodsGatewayConfigEnvironment['default'], 'moment.allowEmpty')
  });
});
define("goods-gateway/helpers/money-converter", ["exports", "ember", "goods-gateway/utils/money-converter"], function (exports, _ember, _goodsGatewayUtilsMoneyConverter) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; })();

  exports["default"] = _ember["default"].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2);

    var price = _ref2[0];
    var currencyCode = _ref2[1];

    return _goodsGatewayUtilsMoneyConverter["default"].convertMinorToMajor(price, currencyCode);
  });
});
define("goods-gateway/helpers/multiply", ["exports", "ember"], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; })();

  exports["default"] = _ember["default"].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2);

    var num1 = _ref2[0];
    var num2 = _ref2[1];

    return (num1 || 0) * (num2 || 0);
  });
});
define("goods-gateway/helpers/net-price", ["exports", "ember"], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; })();

  // net price is a projected amount of money that Groupon would pay to a vendor if quantity # of items was sold
  exports["default"] = _ember["default"].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 6);

    var cost = _ref2[0];
    var freightAllowance = _ref2[1];
    var discountAllowance = _ref2[2];
    var quantity = _ref2[3];
    var shipOnVendor = _ref2[4];
    var shippingCost = _ref2[5];

    cost = cost || 0;
    freightAllowance = freightAllowance || 0;
    discountAllowance = discountAllowance || 0;
    quantity = quantity || 0;
    shippingCost = shippingCost || 0;

    var unitBuyPrice = shipOnVendor ? cost + shippingCost : cost;
    return quantity * (unitBuyPrice - cost * 0.01 * (freightAllowance + discountAllowance));
  });
});
define('goods-gateway/helpers/not-eq', ['exports', 'ember', 'ember-truth-helpers/helpers/not-equal'], function (exports, _ember, _emberTruthHelpersHelpersNotEqual) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersNotEqual.notEqualHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersNotEqual.notEqualHelper);
  }

  exports['default'] = forExport;
});
define('goods-gateway/helpers/not', ['exports', 'ember', 'ember-truth-helpers/helpers/not'], function (exports, _ember, _emberTruthHelpersHelpersNot) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersNot.notHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersNot.notHelper);
  }

  exports['default'] = forExport;
});
define('goods-gateway/helpers/options-for', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Helper.extend({
    // dependencies
    localizedConstants: _ember['default'].inject.service('localized-constants'),

    compute: function compute(name) {
      return this.get('localizedConstants.options.' + name);
    }
  });
});
define('goods-gateway/helpers/or', ['exports', 'ember', 'ember-truth-helpers/helpers/or'], function (exports, _ember, _emberTruthHelpersHelpersOr) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersOr.orHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersOr.orHelper);
  }

  exports['default'] = forExport;
});
define('goods-gateway/helpers/page-title', ['exports', 'ember-page-title/helpers/page-title'], function (exports, _emberPageTitleHelpersPageTitle) {
  exports['default'] = _emberPageTitleHelpersPageTitle['default'];
});
define('goods-gateway/helpers/pct', ['exports', 'ember-percentages/helpers/percentage'], function (exports, _emberPercentagesHelpersPercentage) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPercentagesHelpersPercentage['default'];
    }
  });
});
define('goods-gateway/helpers/percentage', ['exports', 'ember-percentages/helpers/percentage'], function (exports, _emberPercentagesHelpersPercentage) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPercentagesHelpersPercentage['default'];
    }
  });
  Object.defineProperty(exports, 'percentage', {
    enumerable: true,
    get: function get() {
      return _emberPercentagesHelpersPercentage.percentage;
    }
  });
});
define('goods-gateway/helpers/permalink', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  var noPermalinkError = 'No permalink yet';
  exports['default'] = _ember['default'].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 1);

    var slug = _ref2[0];

    if (slug) {
      return _goodsGatewayConfigEnvironment['default'].dealLink + slug;
    }
    return noPermalinkError;
  });
});
define('goods-gateway/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _emberInflectorLibHelpersPluralize) {
  exports['default'] = _emberInflectorLibHelpersPluralize['default'];
});
define('goods-gateway/helpers/presented-description', ['exports', 'ember', 'goods-gateway/utils/replace-underscores-with-pipes'], function (exports, _ember, _goodsGatewayUtilsReplaceUnderscoresWithPipes) {
  exports['default'] = _ember['default'].Helper.helper(_goodsGatewayUtilsReplaceUnderscoresWithPipes['default']);
});
define('goods-gateway/helpers/product-from-option', ['exports', 'ember'], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  exports.productFromOption = productFromOption;

  function productFromOption(_ref) {
    var _ref2 = _slicedToArray(_ref, 2);

    var marketPricingOption = _ref2[0];
    var products = _ref2[1];

    return products.filter(function (product) {
      return product.get('inventoryProductId') === marketPricingOption.get('inventoryProductId');
    })[0];
  }

  exports['default'] = _ember['default'].Helper.helper(productFromOption);
});
define('goods-gateway/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _emberInflectorLibHelpersSingularize) {
  exports['default'] = _emberInflectorLibHelpersSingularize['default'];
});
define("goods-gateway/helpers/sum", ["exports", "ember"], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; })();

  exports["default"] = _ember["default"].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2);

    var num1 = _ref2[0];
    var num2 = _ref2[1];

    return (num1 || 0) + (num2 || 0);
  });
});
define('goods-gateway/helpers/t', ['exports', 'ember-i18n/helper'], function (exports, _emberI18nHelper) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberI18nHelper['default'];
    }
  });
});
define('goods-gateway/helpers/titleize', ['exports', 'ember'], function (exports, _ember) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  exports['default'] = _ember['default'].Helper.helper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 1);

    var string = _ref2[0];

    if (!string) {
      return '';
    }
    return string.split('_').map(function (word) {
      return word.capitalize();
    }).join(' ');
  });
});
define('goods-gateway/helpers/xor', ['exports', 'ember', 'ember-truth-helpers/helpers/xor'], function (exports, _ember, _emberTruthHelpersHelpersXor) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersXor.xorHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersXor.xorHelper);
  }

  exports['default'] = forExport;
});
define('goods-gateway/index/index/route', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  exports['default'] = _ember['default'].Route.extend({
    beforeModel: function beforeModel() {
      this.transitionTo(_goodsGatewayConfigEnvironment['default']['ember-simple-auth'].routeIfAlreadyAuthenticated);
    }
  });
});
define("goods-gateway/index/index/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/index/index/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "class", "content md-column--3of4 center");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h1");
        dom.setAttribute(el2, "class", "text-center");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("span");
        dom.setAttribute(el3, "class", "logo icon-groupon groupon-green");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "cat-logo");
        dom.setAttribute(el2, "class", "text-center icon-groupon-cat");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0, 1, 1]), 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["app.title"], [], ["loc", [null, [4, 6], [4, 23]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define("goods-gateway/index/loading/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/index/loading/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "vp-loading-spinner", ["loc", [null, [1, 0], [1, 22]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/index/route', ['exports', 'ember', 'ember-simple-auth/mixins/authenticated-route-mixin'], function (exports, _ember, _emberSimpleAuthMixinsAuthenticatedRouteMixin) {
  exports['default'] = _ember['default'].Route.extend(_emberSimpleAuthMixinsAuthenticatedRouteMixin['default'], {});
});
define("goods-gateway/index/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "goods-gateway/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "outlet", ["loc", [null, [2, 2], [2, 12]]], 0, 0, 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/index/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "vp-layout", [], [], 0, null, ["loc", [null, [1, 0], [3, 14]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'goods-gateway/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _goodsGatewayConfigEnvironment) {
  exports['default'] = {
    name: 'App Version',
    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(_goodsGatewayConfigEnvironment['default'].APP.name, _goodsGatewayConfigEnvironment['default'].APP.version)
  };
});
define('goods-gateway/initializers/container-debug-adapter', ['exports', 'ember-resolver/container-debug-adapter'], function (exports, _emberResolverContainerDebugAdapter) {
  exports['default'] = {
    name: 'container-debug-adapter',

    initialize: function initialize() {
      var app = arguments[1] || arguments[0];

      app.register('container-debug-adapter:main', _emberResolverContainerDebugAdapter['default']);
      app.inject('container-debug-adapter:main', 'namespace', 'application:main');
    }
  };
});
define('goods-gateway/initializers/data-adapter', ['exports', 'ember'], function (exports, _ember) {

  /*
    This initializer is here to keep backwards compatibility with code depending
    on the `data-adapter` initializer (before Ember Data was an addon).
  
    Should be removed for Ember Data 3.x
  */

  exports['default'] = {
    name: 'data-adapter',
    before: 'store',
    initialize: _ember['default'].K
  };
});
define('goods-gateway/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data/-private/core'], function (exports, _emberDataSetupContainer, _emberDataPrivateCore) {

  /*
  
    This code initializes Ember-Data onto an Ember application.
  
    If an Ember.js developer defines a subclass of DS.Store on their application,
    as `App.StoreService` (or via a module system that resolves to `service:store`)
    this code will automatically instantiate it and make it available on the
    router.
  
    Additionally, after an application's controllers have been injected, they will
    each have the store made available to them.
  
    For example, imagine an Ember.js application with the following classes:
  
    App.StoreService = DS.Store.extend({
      adapter: 'custom'
    });
  
    App.PostsController = Ember.Controller.extend({
      // ...
    });
  
    When the application is initialized, `App.ApplicationStore` will automatically be
    instantiated, and the instance of `App.PostsController` will have its `store`
    property set to that instance.
  
    Note that this code will only be run if the `ember-application` package is
    loaded. If Ember Data is being used in an environment other than a
    typical application (e.g., node.js where only `ember-runtime` is available),
    this code will be ignored.
  */

  exports['default'] = {
    name: 'ember-data',
    initialize: _emberDataSetupContainer['default']
  };
});
define('goods-gateway/initializers/ember-feature-flags', ['exports', 'goods-gateway/config/environment', 'goods-gateway/features/-main'], function (exports, _goodsGatewayConfigEnvironment, _goodsGatewayFeaturesMain) {
  exports.initialize = initialize;

  function initialize() {
    var application = arguments[1] || arguments[0];
    var serviceName = _goodsGatewayConfigEnvironment['default'].featureFlagsService || 'features';

    application.register('features:-main', _goodsGatewayFeaturesMain['default']);
    application.inject('route', serviceName, 'features:-main');
    application.inject('controller', serviceName, 'features:-main');
    application.inject('component', serviceName, 'features:-main');
    application.inject('features:-main', 'application', 'application:main');
  }

  exports['default'] = {
    name: 'ember-feature-flags',
    initialize: initialize
  };
});
define('goods-gateway/initializers/ember-i18n', ['exports', 'ember-i18n/initializers/ember-i18n'], function (exports, _emberI18nInitializersEmberI18n) {
  exports['default'] = _emberI18nInitializersEmberI18n['default'];
});
define('goods-gateway/initializers/ember-simple-auth', ['exports', 'ember', 'goods-gateway/config/environment', 'ember-simple-auth/configuration', 'ember-simple-auth/initializers/setup-session', 'ember-simple-auth/initializers/setup-session-service'], function (exports, _ember, _goodsGatewayConfigEnvironment, _emberSimpleAuthConfiguration, _emberSimpleAuthInitializersSetupSession, _emberSimpleAuthInitializersSetupSessionService) {
  exports['default'] = {
    name: 'ember-simple-auth',
    initialize: function initialize(registry) {
      var config = _goodsGatewayConfigEnvironment['default']['ember-simple-auth'] || {};
      config.baseURL = _goodsGatewayConfigEnvironment['default'].baseURL;
      _emberSimpleAuthConfiguration['default'].load(config);

      (0, _emberSimpleAuthInitializersSetupSession['default'])(registry);
      (0, _emberSimpleAuthInitializersSetupSessionService['default'])(registry);
    }
  };
});
define('goods-gateway/initializers/export-application-global', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  exports.initialize = initialize;

  function initialize() {
    var application = arguments[1] || arguments[0];
    if (_goodsGatewayConfigEnvironment['default'].exportApplicationGlobal !== false) {
      var value = _goodsGatewayConfigEnvironment['default'].exportApplicationGlobal;
      var globalName;

      if (typeof value === 'string') {
        globalName = value;
      } else {
        globalName = _ember['default'].String.classify(_goodsGatewayConfigEnvironment['default'].modulePrefix);
      }

      if (!window[globalName]) {
        window[globalName] = application;

        application.reopen({
          willDestroy: function willDestroy() {
            this._super.apply(this, arguments);
            delete window[globalName];
          }
        });
      }
    }
  }

  exports['default'] = {
    name: 'export-application-global',

    initialize: initialize
  };
});
define('goods-gateway/initializers/flash-messages', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  exports.initialize = initialize;
  var deprecate = _ember['default'].deprecate;

  var merge = _ember['default'].assign || _ember['default'].merge;
  var INJECTION_FACTORIES_DEPRECATION_MESSAGE = '[ember-cli-flash] Future versions of ember-cli-flash will no longer inject the service automatically. Instead, you should explicitly inject it into your Route, Controller or Component with `Ember.inject.service`.';
  var addonDefaults = {
    timeout: 3000,
    extendedTimeout: 0,
    priority: 100,
    sticky: false,
    showProgress: false,
    type: 'info',
    types: ['success', 'info', 'warning', 'danger', 'alert', 'secondary'],
    injectionFactories: ['route', 'controller', 'view', 'component'],
    preventDuplicates: false
  };

  function initialize() {
    var application = arguments[1] || arguments[0];

    var _ref = _goodsGatewayConfigEnvironment['default'] || {};

    var flashMessageDefaults = _ref.flashMessageDefaults;

    var _ref2 = flashMessageDefaults || [];

    var injectionFactories = _ref2.injectionFactories;

    var options = merge(addonDefaults, flashMessageDefaults);
    var shouldShowDeprecation = !(injectionFactories && injectionFactories.length);

    application.register('config:flash-messages', options, { instantiate: false });
    application.inject('service:flash-messages', 'flashMessageDefaults', 'config:flash-messages');

    deprecate(INJECTION_FACTORIES_DEPRECATION_MESSAGE, shouldShowDeprecation, {
      id: 'ember-cli-flash.deprecate-injection-factories',
      until: '2.0.0'
    });

    options.injectionFactories.forEach(function (factory) {
      application.inject(factory, 'flashMessages', 'service:flash-messages');
    });
  }

  exports['default'] = {
    name: 'flash-messages',
    initialize: initialize
  };
});
define('goods-gateway/initializers/i18n', ['exports'], function (exports) {
  exports.initialize = initialize;

  function initialize(app) {
    app.inject('component', 'i18n', 'service:i18n');
    app.inject('route', 'i18n', 'service:i18n');
    app.inject('adapter', 'i18n', 'service:i18n');
    app.inject('model', 'i18n', 'service:i18n');
    app.inject('validator:local', 'i18n', 'service:i18n');
    app.inject('model-fragments', 'i18n', 'service:i18n');
  }

  exports['default'] = {
    name: 'i18n',
    after: 'ember-i18n',
    initialize: initialize
  };
});
define('goods-gateway/initializers/injectStore', ['exports', 'ember'], function (exports, _ember) {

  /*
    This initializer is here to keep backwards compatibility with code depending
    on the `injectStore` initializer (before Ember Data was an addon).
  
    Should be removed for Ember Data 3.x
  */

  exports['default'] = {
    name: 'injectStore',
    before: 'store',
    initialize: _ember['default'].K
  };
});
define('goods-gateway/initializers/model-fragments', ['exports', 'model-fragments', 'model-fragments/transforms/fragment', 'model-fragments/transforms/fragment-array', 'model-fragments/transforms/array'], function (exports, _modelFragments, _modelFragmentsTransformsFragment, _modelFragmentsTransformsFragmentArray, _modelFragmentsTransformsArray) {
  exports['default'] = {
    name: "fragmentTransform",
    before: "store",

    initialize: function initialize(application) {
      application.register('transform:fragment', _modelFragmentsTransformsFragment['default']);
      application.register('transform:fragment-array', _modelFragmentsTransformsFragmentArray['default']);
      application.register('transform:array', _modelFragmentsTransformsArray['default']);
    }
  };
});
// Import the full module to ensure monkey-patchs are applied before any store
// instances are created. Sad face for side-effects :(
define('goods-gateway/initializers/services', ['exports', 'goods-gateway/models/deal-category-update', 'goods-gateway/models/product-status-update', 'goods-gateway/models/deal-boost', 'goods-gateway/models/product-mrt-update', 'goods-gateway/models/search/approval-status', 'goods-gateway/models/search/auto-approval-status', 'goods-gateway/models/search/brand', 'goods-gateway/models/search/category-ids', 'goods-gateway/models/search/reviewed-by', 'goods-gateway/models/search/contract-status', 'goods-gateway/models/search/deal-state', 'goods-gateway/models/search/feature-state', 'goods-gateway/models/search/group-id', 'goods-gateway/models/search/manual-approval-status', 'goods-gateway/models/search/permalink', 'goods-gateway/models/search/product-id', 'goods-gateway/models/search/product-state', 'goods-gateway/models/search/rejection-reason', 'goods-gateway/models/search/source', 'goods-gateway/models/search/title', 'goods-gateway/models/search/universal-id', 'goods-gateway/models/search/vendor-id', 'goods-gateway/models/search/vendor-sku'], function (exports, _goodsGatewayModelsDealCategoryUpdate, _goodsGatewayModelsProductStatusUpdate, _goodsGatewayModelsDealBoost, _goodsGatewayModelsProductMrtUpdate, _goodsGatewayModelsSearchApprovalStatus, _goodsGatewayModelsSearchAutoApprovalStatus, _goodsGatewayModelsSearchBrand, _goodsGatewayModelsSearchCategoryIds, _goodsGatewayModelsSearchReviewedBy, _goodsGatewayModelsSearchContractStatus, _goodsGatewayModelsSearchDealState, _goodsGatewayModelsSearchFeatureState, _goodsGatewayModelsSearchGroupId, _goodsGatewayModelsSearchManualApprovalStatus, _goodsGatewayModelsSearchPermalink, _goodsGatewayModelsSearchProductId, _goodsGatewayModelsSearchProductState, _goodsGatewayModelsSearchRejectionReason, _goodsGatewayModelsSearchSource, _goodsGatewayModelsSearchTitle, _goodsGatewayModelsSearchUniversalId, _goodsGatewayModelsSearchVendorId, _goodsGatewayModelsSearchVendorSku) {
  exports['default'] = {
    name: 'services',
    initialize: function initialize(app) {
      app.inject('route', 'errorAggregator', 'service:error-aggregator');
      app.inject('router', 'errorAggregator', 'service:error-aggregator');
      app.register('bulk-job:deal-boost', _goodsGatewayModelsDealBoost['default'], { singleton: false });
      app.register('bulk-job:deal-category-update', _goodsGatewayModelsDealCategoryUpdate['default'], { singleton: false });
      app.register('bulk-job:product-mrt-update', _goodsGatewayModelsProductMrtUpdate['default'], { singleton: false });
      app.register('bulk-job:product-status-update', _goodsGatewayModelsProductStatusUpdate['default'], { singleton: false });

      var searchOptions = { instantiate: false, singleton: false };
      app.register('search:approval-status', _goodsGatewayModelsSearchApprovalStatus['default'], searchOptions);
      app.register('search:auto-approval-status', _goodsGatewayModelsSearchAutoApprovalStatus['default'], searchOptions);
      app.register('search:brand', _goodsGatewayModelsSearchBrand['default'], searchOptions);
      app.register('search:category-ids', _goodsGatewayModelsSearchCategoryIds['default'], searchOptions);
      app.register('search:contract-status', _goodsGatewayModelsSearchContractStatus['default'], searchOptions);
      app.register('search:deal-state', _goodsGatewayModelsSearchDealState['default'], searchOptions);
      app.register('search:feature-state', _goodsGatewayModelsSearchFeatureState['default'], searchOptions);
      app.register('search:group-id', _goodsGatewayModelsSearchGroupId['default'], searchOptions);
      app.register('search:manual-approval-status', _goodsGatewayModelsSearchManualApprovalStatus['default'], searchOptions);
      app.register('search:permalink', _goodsGatewayModelsSearchPermalink['default'], searchOptions);
      app.register('search:product-id', _goodsGatewayModelsSearchProductId['default'], searchOptions);
      app.register('search:product-state', _goodsGatewayModelsSearchProductState['default'], searchOptions);
      app.register('search:rejection-reason', _goodsGatewayModelsSearchRejectionReason['default'], searchOptions);
      app.register('search:reviewed-by', _goodsGatewayModelsSearchReviewedBy['default'], searchOptions);
      app.register('search:source', _goodsGatewayModelsSearchSource['default'], searchOptions);
      app.register('search:title', _goodsGatewayModelsSearchTitle['default'], searchOptions);
      app.register('search:universal-id', _goodsGatewayModelsSearchUniversalId['default'], searchOptions);
      app.register('search:vendor-id', _goodsGatewayModelsSearchVendorId['default'], searchOptions);
      app.register('search:vendor-sku', _goodsGatewayModelsSearchVendorSku['default'], searchOptions);
    }
  };
});
define('goods-gateway/initializers/setup-pikaday-i18n', ['exports', 'ember', 'moment'], function (exports, _ember, _moment) {
  exports['default'] = {
    name: 'setup-pikaday-i18n',
    initialize: function initialize(application) {
      var i18n = _ember['default'].Object.extend({
        months: _moment['default'].localeData()._months,
        weekdays: _moment['default'].localeData()._weekdays,
        weekdaysShort: _moment['default'].localeData()._weekdaysShort
      });

      application.register('pikaday-i18n:main', i18n, { singleton: true });
      application.inject('component:pikaday-input', 'i18n', 'pikaday-i18n:main');
    }
  };
});
define('goods-gateway/initializers/store', ['exports', 'ember'], function (exports, _ember) {

  /*
    This initializer is here to keep backwards compatibility with code depending
    on the `store` initializer (before Ember Data was an addon).
  
    Should be removed for Ember Data 3.x
  */

  exports['default'] = {
    name: 'store',
    after: 'ember-data',
    initialize: _ember['default'].K
  };
});
define('goods-gateway/initializers/transforms', ['exports', 'ember'], function (exports, _ember) {

  /*
    This initializer is here to keep backwards compatibility with code depending
    on the `transforms` initializer (before Ember Data was an addon).
  
    Should be removed for Ember Data 3.x
  */

  exports['default'] = {
    name: 'transforms',
    before: 'store',
    initialize: _ember['default'].K
  };
});
define('goods-gateway/initializers/truth-helpers', ['exports', 'ember', 'ember-truth-helpers/utils/register-helper', 'ember-truth-helpers/helpers/and', 'ember-truth-helpers/helpers/or', 'ember-truth-helpers/helpers/equal', 'ember-truth-helpers/helpers/not', 'ember-truth-helpers/helpers/is-array', 'ember-truth-helpers/helpers/not-equal', 'ember-truth-helpers/helpers/gt', 'ember-truth-helpers/helpers/gte', 'ember-truth-helpers/helpers/lt', 'ember-truth-helpers/helpers/lte'], function (exports, _ember, _emberTruthHelpersUtilsRegisterHelper, _emberTruthHelpersHelpersAnd, _emberTruthHelpersHelpersOr, _emberTruthHelpersHelpersEqual, _emberTruthHelpersHelpersNot, _emberTruthHelpersHelpersIsArray, _emberTruthHelpersHelpersNotEqual, _emberTruthHelpersHelpersGt, _emberTruthHelpersHelpersGte, _emberTruthHelpersHelpersLt, _emberTruthHelpersHelpersLte) {
  exports.initialize = initialize;

  function initialize() /* container, application */{

    // Do not register helpers from Ember 1.13 onwards, starting from 1.13 they
    // will be auto-discovered.
    if (_ember['default'].Helper) {
      return;
    }

    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('and', _emberTruthHelpersHelpersAnd.andHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('or', _emberTruthHelpersHelpersOr.orHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('eq', _emberTruthHelpersHelpersEqual.equalHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('not', _emberTruthHelpersHelpersNot.notHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('is-array', _emberTruthHelpersHelpersIsArray.isArrayHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('not-eq', _emberTruthHelpersHelpersNotEqual.notEqualHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('gt', _emberTruthHelpersHelpersGt.gtHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('gte', _emberTruthHelpersHelpersGte.gteHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('lt', _emberTruthHelpersHelpersLt.ltHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('lte', _emberTruthHelpersHelpersLte.lteHelper);
  }

  exports['default'] = {
    name: 'truth-helpers',
    initialize: initialize
  };
});
define('goods-gateway/instance-initializers/browser/head', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  exports.initialize = initialize;

  function initialize(instance) {
    if (_goodsGatewayConfigEnvironment['default']['ember-cli-head'] && _goodsGatewayConfigEnvironment['default']['ember-cli-head']['suppressBrowserRender']) {
      return true;
    }

    // clear fast booted head (if any)
    _ember['default'].$('meta[name="ember-cli-head-start"]').nextUntil('meta[name="ember-cli-head-end"] ~').addBack().remove();
    var container = instance.lookup ? instance : instance.container;
    // const renderer = container.lookup('renderer:-dom');
    var component = container.lookup('component:head-layout');
    component.appendTo(document.head);
  }

  exports['default'] = {
    name: 'head-browser',
    initialize: initialize
  };
});
define("goods-gateway/instance-initializers/ember-data", ["exports", "ember-data/-private/instance-initializers/initialize-store-service"], function (exports, _emberDataPrivateInstanceInitializersInitializeStoreService) {
  exports["default"] = {
    name: "ember-data",
    initialize: _emberDataPrivateInstanceInitializersInitializeStoreService["default"]
  };
});
define('goods-gateway/instance-initializers/ember-i18n', ['exports', 'ember-i18n/instance-initializers/ember-i18n'], function (exports, _emberI18nInstanceInitializersEmberI18n) {
  exports['default'] = _emberI18nInstanceInitializersEmberI18n['default'];
});
define('goods-gateway/instance-initializers/ember-simple-auth', ['exports', 'ember-simple-auth/instance-initializers/setup-session-restoration'], function (exports, _emberSimpleAuthInstanceInitializersSetupSessionRestoration) {
  exports['default'] = {
    name: 'ember-simple-auth',
    initialize: function initialize(instance) {
      (0, _emberSimpleAuthInstanceInitializersSetupSessionRestoration['default'])(instance);
    }
  };
});
define('goods-gateway/instance-initializers/i18n-validations', ['exports', 'ember'], function (exports, _ember) {
  exports.initialize = initialize;

  function initialize(appInstance) {
    var i18n = appInstance.lookup('service:i18n');
    _ember['default'].I18n = {
      t: function t() {
        // unless we want to couple many of our unit tests with an i18n initialization, let's do a quick check
        return i18n && i18n.get('locale') ? i18n.t.apply(i18n, arguments) : '';
      }
    };
  }

  exports['default'] = {
    name: 'i18n-validations',
    initialize: initialize
  };
});
// ember-validations anticipates an I18n property on Ember
// https://github.com/DockYard/ember-validations/blob/master/addon/messages.js#L6
define("goods-gateway/inventory/index-loading/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/inventory/index-loading/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "vp-loading-spinner", ["loc", [null, [1, 0], [1, 22]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/inventory/index/route', ['exports', 'ember', 'goods-gateway/constants/error-codes', 'goods-gateway/mixins/approval-actions'], function (exports, _ember, _goodsGatewayConstantsErrorCodes, _goodsGatewayMixinsApprovalActions) {

  var PAGE_LIMIT = 10;

  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsApprovalActions['default'], {
    // dependencies
    authorization: _ember['default'].inject.service('authorization'),
    flashMessages: _ember['default'].inject.service(),

    model: function model() {
      var searchParams = this.paramsFor('inventory');
      var items = this._getEagerLoadedItems(searchParams);

      return _ember['default'].RSVP.hash({
        authorization: this.get('authorization'),
        items: items
      });
    },

    _getEagerLoadedItems: function _getEagerLoadedItems(params) {
      return this._getItems(params).then(function (items) {
        var eagerCategoryPromises = items.map(function (item) {
          return item.get('category');
        });

        return _ember['default'].RSVP.all(eagerCategoryPromises).then(function () {
          return items;
        }, function (reason) {
          if (reason.errors.isEvery('code', _goodsGatewayConstantsErrorCodes.NOT_FOUND_CODE)) {
            return items;
          }
          throw reason;
        });
      });
    },

    _getItems: function _getItems(params) {
      var page = params.page || 1;
      var offset = (page - 1) * PAGE_LIMIT;

      var query = {
        filter: _ember['default'].copy(params),
        page: {
          limit: PAGE_LIMIT,
          offset: offset
        }
      };

      delete query.filter.page;

      if (query.filter.universalId) {
        query.filter['universalId.value'] = query.filter.universalId;
        delete query.filter.universalId;
      }

      if (!this.get('authorization').can('read_default')) {
        query.filter.vendorId = this.get('authorization.vendors.firstObject.id');
      }

      return this.get('store').query('product/item', query);
    },

    actions: {
      goToPage: function goToPage(page) {
        this.transitionTo({ queryParams: { page: page } });
      },

      autoPrice: function autoPrice(items) {
        var flashMessages = this.get('flashMessages');
        var i18n = this.get('i18n');
        items.forEach(function (item) {
          var oldIsStickyPrice = item.get('offers.firstObject.isStickyPrice');
          item.set('offers.firstObject.isStickyPrice', false);
          item.save().then(function () {
            flashMessages.add({
              message: i18n.t('inventory.index.autoPriceSuccess'),
              type: 'alert-success'
            });
            _ember['default'].set(item, 'isChecked', false);
            item.set('offers.firstObject.sellPrice.outdated', true);
          })['catch'](function () {
            item.set('offers.firstObject.isStickyPrice', oldIsStickyPrice);
            flashMessages.add({
              message: i18n.t('inventory.index.autoPriceFailure'),
              type: 'alert-error'
            });
          });
        });
      },

      applySellPrice: function applySellPrice(items, newSellPrice) {
        var flashMessages = this.get('flashMessages');
        var i18n = this.get('i18n');
        items.forEach(function (item) {
          var oldIsStickyPrice = item.get('offers.firstObject.isStickyPrice');
          item.set('offers.firstObject.isStickyPrice', true);
          item.set('offers.firstObject.sellPrice.amount', newSellPrice);
          item.save().then(function () {
            _ember['default'].set(item, 'isChecked', false);
            item.set('offers.firstObject.sellPrice.hasBeenUpdated', true);
          })['catch'](function () {
            item.set('offers.firstObject.isStickyPrice', oldIsStickyPrice);
            item.set('offers.firstObject.sellPrice.hasError', true);
            flashMessages.add({
              message: i18n.t('inventory.index.sellPriceSaveFailure'),
              type: 'alert-error'
            });
          });
        });
      },

      saveItemSellPrice: function saveItemSellPrice(item, newSellPrice) {
        var flashMessages = this.get('flashMessages');
        var i18n = this.get('i18n');
        if (newSellPrice === 0) {
          item.set('offers.firstObject.sellPrice.hasError', true);
          flashMessages.add({
            message: i18n.t('inventory.index.sellPriceCannotBeZero'),
            type: 'alert-error'
          });
        } else {
          (function () {
            var oldStickyPrice = item.get('offers.firstObject.isStickyPrice');
            item.set('offers.firstObject.isStickyPrice', true);
            item.set('offers.firstObject.sellPrice.amount', newSellPrice);
            item.save().then(function () {
              _ember['default'].set(item, 'isChecked', false);
              item.set('offers.firstObject.sellPrice.hasBeenUpdated', true);
              flashMessages.add({
                message: i18n.t('inventory.index.sellPriceSaveSuccess'),
                type: 'alert-success'
              });
            })['catch'](function () {
              item.set('offers.firstObject.isStickyPrice', oldStickyPrice);
              item.set('offers.firstObject.sellPrice.hasError', true);
              flashMessages.add({
                message: i18n.t('inventory.index.sellPriceSaveFailure'),
                type: 'alert-error'
              });
            });
          })();
        }
      }
    }
  });
});
define("goods-gateway/inventory/index/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/inventory/index/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-inventory-table", [], ["approve", "approve", "autoPrice", "autoPrice", "goToPage", "goToPage", "saveItemSellPrice", "saveItemSellPrice", "id", "items", "items", ["subexpr", "@mut", [["get", "model.items", ["loc", [null, [7, 8], [7, 19]]], 0, 0, 0, 0]], [], [], 0, 0], "reject", "reject", "applySellPrice", "applySellPrice"], ["loc", [null, [1, 0], [10, 2]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/inventory/route', ['exports', 'ember', 'goods-gateway/config/environment', 'goods-gateway/mixins/gateway-route', 'goods-gateway/mixins/search', 'goods-gateway/mixins/params'], function (exports, _ember, _goodsGatewayConfigEnvironment, _goodsGatewayMixinsGatewayRoute, _goodsGatewayMixinsSearch, _goodsGatewayMixinsParams) {
  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsGatewayRoute['default'], _goodsGatewayMixinsSearch['default'], _goodsGatewayMixinsParams['default'], {
    authorization: _ember['default'].inject.service('authorization'),
    ajax: _ember['default'].inject.service('ajax'),
    i18n: _ember['default'].inject.service(),

    searchParamOverrides: {
      'vendorSKU': 'vendorSku'
    },

    searchConfig: {
      approvalStatus: {},
      autoApprovalStatus: {},
      brand: {},
      categoryIds: {},
      contractStatus: {},
      dealState: {},
      featureState: {},
      groupId: {},
      manualApprovalStatus: {},
      productId: {},
      rejectionReason: {},
      source: {},
      title: {},
      universalId: {},
      vendorId: {},
      vendorSKU: {}
    },

    // Search params added by initRouteSearch
    queryParams: { page: { refreshModel: true } },

    init: function init() {
      this.initRouteSearch();
    },

    model: function model(params) {
      return _ember['default'].RSVP.hash({
        authorization: this.get('authorization'),
        features: _goodsGatewayConfigEnvironment['default'].featureFlags,
        searchFilters: this.getSearchFilters(params),
        searchEngines: this.get('activeSearchEngines')
      });
    },

    _transition: function _transition(params) {
      params.page = undefined;
      this.transitionTo({ queryParams: params });
    },

    actions: {
      removeAllSearches: function removeAllSearches() {
        var currentParams = this.paramsFor('inventory');
        var newParams = this.removeAllSearchParams(currentParams);
        this._transition(newParams);
      },

      removeSearch: function removeSearch(searchKey, searchValue) {
        var currentParams = this.paramsFor('inventory');
        var newParams = this.removeSearchParam(searchKey, searchValue, currentParams);
        this._transition(newParams);
      },

      search: function search(criteria) {
        var currentParams = this.paramsFor('inventory');
        var newParams = this.addSearchParam(criteria, currentParams);
        this._transition(newParams);
      },

      submit: function submit() {
        return false;
      }
    }
  });
});
define("goods-gateway/inventory/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/inventory/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h1");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "inventory-index");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("section");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "id", "inventory-actions");
        dom.setAttribute(el3, "class", "row");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "md-column");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [4]);
        var element1 = dom.childAt(element0, [1]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(element1, [1, 1]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element1, [3, 1]), 1, 1);
        morphs[4] = dom.createMorphAt(element0, 3, 3);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "page-title", [["subexpr", "t", ["titles.inventory"], [], ["loc", [null, [1, 8], [1, 30]]], 0, 0]], [], ["loc", [null, [1, 0], [1, 32]]], 0, 0], ["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [3, 16], [3, 31]]], 0, 0, 0, 0], "title"], [], ["loc", [null, [3, 8], [3, 40]]], 0, 0]], [], ["loc", [null, [3, 4], [3, 42]]], 0, 0], ["inline", "vp-x-search", [], ["select", "search", "searches", ["subexpr", "@mut", [["get", "model.searchEngines", ["loc", [null, [11, 19], [11, 38]]], 0, 0, 0, 0]], [], [], 0, 0], "debounceTime", 200], ["loc", [null, [9, 8], [13, 10]]], 0, 0], ["inline", "vp-x-search-current-filters", [], ["removeAllSearches", "removeAllSearches", "removeSearch", "removeSearch", "restoreSearch", "restoreSearch", "saveSearch", "saveSearch", "searches", ["subexpr", "@mut", [["get", "model.searchFilters", ["loc", [null, [24, 19], [24, 38]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [19, 8], [25, 10]]], 0, 0], ["content", "outlet", ["loc", [null, [30, 2], [30, 12]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/item-master-deal/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/v0/item_master',
    queryParams: {
      show: 'deal_options,contract_term'
    },
    pathForType: function pathForType() {
      return 'deal_instances';
    }
  });
});
define('goods-gateway/item-master-deal/contract-term/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  var model = _modelFragments['default'].Fragment.extend({
    freight_allowance: attr('number')
  });

  exports['default'] = model;
});
define('goods-gateway/item-master-deal/deal-option/inventory-item-instance/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  var model = _modelFragments['default'].Fragment.extend({
    cost: attr('number'),
    gin: attr('string'),
    groupon_dropship_cost: attr('number'),
    msrp: attr('number'),
    pl_cost: attr('number'),
    shipping_cost: attr('string'),
    source_name: attr('string'),
    vendor_dropship_cost: attr('number')
  });

  exports['default'] = model;
});
define('goods-gateway/item-master-deal/deal-option/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  var model = _modelFragments['default'].Fragment.extend({
    gin: attr('string'),
    inventory_item_instance: _modelFragments['default'].fragment('item-master-deal/deal-option/inventoryItemInstance')
  });

  exports['default'] = model;
});
define('goods-gateway/item-master-deal/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  var model = _emberData['default'].Model.extend({
    contract_term: _modelFragments['default'].fragment('item-master-deal/contractTerm'),
    deal_options: _modelFragments['default'].fragmentArray('item-master-deal/dealOption'),
    fulfillment_method: attr('string'),
    gin: attr('string'),
    percentage_refund_allowance: attr('number')
  });

  exports['default'] = model;
});
define('goods-gateway/item-master-deal/serializer', ['exports', 'goods-gateway/application/serializer'], function (exports, _goodsGatewayApplicationSerializer) {
  exports['default'] = _goodsGatewayApplicationSerializer['default'].extend({
    primaryKey: 'gin',
    apiRoot: 'deal_instance'
  });
});
define('goods-gateway/item-template/helpers', ['exports', 'ember', 'goods-gateway/utils/ember-helpers'], function (exports, _ember, _goodsGatewayUtilsEmberHelpers) {
  exports['default'] = _ember['default'].Mixin.create({
    emberize: _goodsGatewayUtilsEmberHelpers.emberize,
    rawObject: _goodsGatewayUtilsEmberHelpers.rawObject,
    consistentBoolean: function consistentBoolean(firstBoolean, otherBooleans) {
      return otherBooleans.reduce(function (consistentBoolean, otherBoolean) {
        if (consistentBoolean === null) {
          return null;
        }
        return consistentBoolean === otherBoolean ? consistentBoolean : null;
      }, firstBoolean);
    },

    consistentObject: function consistentObject(firstObject, objects) {
      var object = objects.reduce(function (consistentObject, object) {
        if (consistentObject === null) {
          return null;
        }
        for (var key in consistentObject) {
          if (consistentObject[key] === object[key]) {
            continue;
          } else {
            return null;
          }
        }
        return consistentObject;
      }, firstObject);

      return _ember['default'].isPresent(object) ? (0, _goodsGatewayUtilsEmberHelpers.emberize)(object) : _ember['default'].Object.create();
    },

    consistentValue: function consistentValue(things) {
      if (_ember['default'].typeOf(things) !== 'array') {
        return null;
      }

      var firstThing = things.shift();
      var type = _ember['default'].typeOf(firstThing);

      if (type === 'boolean') {
        return this.consistentBoolean(firstThing, things);
      } else if (type === 'object') {
        return this.consistentObject(firstThing, things);
      } else {
        return things.reduce(function (uniqueThing, thing) {
          if (uniqueThing === null) {
            return null;
          }
          return uniqueThing === thing ? uniqueThing : null;
        }, firstThing);
      }
    },

    applyObject: function applyObject(fromObject, toObject) {
      var applicationObject = _ember['default'].isPresent(toObject) ? toObject : _ember['default'].Object.create({});
      for (var objectKey in fromObject) {
        if (fromObject.hasOwnProperty(objectKey)) {
          this.applyValue(fromObject, applicationObject, objectKey);
        }
      }
      return applicationObject;
    },

    applyValue: function applyValue(fromObject, toObject, key) {
      var value = fromObject.get(key);
      if (_ember['default'].isPresent(value)) {
        var type = _ember['default'].typeOf(value);
        if (type === 'array') {
          return toObject;
        } else if (type === 'instance') {
          toObject.set(key, this.applyObject(value, toObject.get(key)));
        } else {
          toObject.set(key, value);
        }
      }
      return toObject;
    },

    defaultValue: function defaultValue(target, key, value) {
      if (!target[key]) {
        target[key] = value;
      }
      return target[key];
    },

    processValue: function processValue(values, item, field) {
      this.defaultValue(values, field, []);
      values[field].push(item.get(field));
    },

    processObject: function processObject(values, item, field, attributes) {
      this.defaultValue(values, field, []);
      var object = (0, _goodsGatewayUtilsEmberHelpers.rawObject)(item.get(field), attributes);
      values[field].push(object);
    }
  });
});
define('goods-gateway/legacy-product/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/v0/goods_stores',

    pathForType: function pathForType() {
      return 'products';
    },

    urlForQuery: function urlForQuery() {
      return this.namespace + '/products/search';
    },

    urlForQueryRecord: function urlForQueryRecord() {
      return this.namespace + '/products/find';
    },

    queryParams: {
      'with': 'dmapi_adapter'
    }
  });
});
define('goods-gateway/legacy-product/dmapi-adapter/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {
  exports['default'] = _modelFragments['default'].Fragment.extend({
    deal_state: _emberData['default'].attr('string'),
    deal_url: _emberData['default'].attr('string'),
    deal_uuid: _emberData['default'].attr('string'),
    deal_slug: _emberData['default'].attr('string')
  });
});
define('goods-gateway/legacy-product/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  var model = _emberData['default'].Model.extend({
    uuid: attr('string'),
    dmapi_adapter: _modelFragments['default'].fragment('legacyProduct/dmapiAdapter')
  });

  exports['default'] = model;
});
define('goods-gateway/legacy-product/serializer', ['exports', 'goods-gateway/application/root-meta-serializer'], function (exports, _goodsGatewayApplicationRootMetaSerializer) {
  exports['default'] = _goodsGatewayApplicationRootMetaSerializer['default'].extend({
    apiRoot: 'product',
    primaryKey: 'uuid',
    metaKeys: ['total']
  });
});
define('goods-gateway/locales/en/translations', ['exports'], function (exports) {
  // For country translations, go here
  // https://github.com/umpirsky/country-list/blob/master/data/en_US/country.csv

  exports['default'] = {
    syntaxConfig: {
      listSeparator: ', '
    },
    application: {
      adapter: {
        defaultError: 'Unknown Error'
      }
    },
    constants: {
      dateFormat: 'MM/DD/YYYY',
      caStates: {
        AB: 'Alberta',
        BC: 'British Columbia',
        MB: 'Manitoba',
        NB: 'New Brunswick',
        NL: 'Newfoundland and Labrador',
        NT: 'Northwest Territories',
        NS: 'Nova Scotia',
        NU: 'Nunavut',
        ON: 'Ontario',
        PE: 'Prince Edward Island',
        QC: 'Quebec',
        SK: 'Saskatchewan',
        YT: 'Yukon'
      },
      dealStates: {
        draft: 'Draft',
        expired: 'Expired',
        invalid: 'Invalid',
        live: 'Live',
        pending: 'Pending',
        publishing: 'Publishing',
        queued: 'Queued'
      },
      approvalStatuses: {
        approved: 'Approved',
        pending: 'Pending',
        rejected: 'Rejected'
      },
      autoApprovalStatuses: {
        approved: 'Approved',
        content_approved: 'Data Valid',
        content_rejected: 'Data Invalid',
        market_data_pending: 'Pending Pricing',
        pending: 'Pending',
        rejected: 'Rejected'
      },
      contractStatuses: {
        active: 'Active',
        contracted: 'Contracted',
        ended: 'Ended',
        failed: 'Failed',
        pending_review: 'Pending Review',
        rejected: 'Rejected'
      },
      featureStates: {
        active: 'Active',
        ended: 'Ended',
        failed: 'Failed',
        scheduled: 'Upcoming'
      },
      fulfillmentPlatforms: {
        commercehub: 'CommerceHub',
        commerceinterface: 'CommerceInterface'
      },
      fulfillmentOptions: {
        vendor: 'Drop ship (Supplier small parcel)',
        groupon: 'Drop ship (Groupon small parcel)'
      },
      manualApprovalStatuses: {
        approved: 'Approved',
        pending: 'Pending',
        rejected: 'Rejected'
      },
      paymentTerms: {
        net15: 'Net 15',
        net30: 'Net 30',
        net45: 'Net 45',
        net60: 'Net 60',
        net90: 'Net 90'
      },
      productStates: {
        closed: 'Closed',
        created: 'Created',
        open: 'Open',
        paused: 'Paused',
        rejected: 'Rejected',
        review: 'In Review'
      },
      shippingOptions: {
        VENDOR: 'Vendor',
        GROUPON: 'Groupon'
      },
      shippingServices: {
        UPS_MI: 'UPS Mail Innovation',
        UPS_SP: 'UPS SurePost',
        UPS_GRD: 'UPS Ground',
        FedEx_SPLT1: 'FedEx SmartPost <1lb',
        FedEx_SPGT1: 'FedEx SmartPost >1lb',
        FedEx_GRD: 'FedEx Ground',
        FedEx_HD: 'FedEx Home Delivery',
        USPS_PS: 'USPS PARCEL < 1lb',
        USPS_PSL: 'USPS PARCEL > 1lb',
        DHL_PSL: 'DHL Smartmail Lightweight Parcels < 1lb',
        NEWG_PS: 'Parcel Select > 1lb',
        NEWG_PSL: 'Parcel Select < 1lb'
      },
      sourceNames: {
        commercehub: 'Commercehub',
        gateway: 'Gateway'
      },
      universalIdTypes: {
        'gtin-8': 'EAN-8',
        'gtin-12': 'UPC',
        'isbn-10': 'ISBN-10',
        'gtin-13': 'EAN/ISBN-13',
        'gtin-14': 'ITF-14',
        'soft-upc': 'N/A'
      },
      userRoles: {
        internal: {
          label: 'Internal',
          description: 'Internal to Groupon, eg. Groupon employee or contractor'
        },
        legacy_gvp_admin: {
          label: 'Admin (Legacy)',
          description: 'Catch-all role with rights to anything not included in other roles'
        }
      },
      vendorRoles: {
        owner: {
          label: 'Owner',
          description: 'Full access to vendor\'s user administration, financial data, and other sensitive operations'
        },
        member: {
          label: 'Member',
          description: 'Full access to day-to-day vendor operations'
        }
      },
      vendorStatuses: {
        active: 'Active',
        suspended: 'Suspended',
        disabled: 'Disabled'
      }
    },
    countries: {
      AC: 'Ascension Island',
      AD: 'Andorra',
      AE: 'United Arab Emirates',
      AF: 'Afghanistan',
      AG: 'Antigua & Barbuda',
      AI: 'Anguilla',
      AL: 'Albania',
      AM: 'Armenia',
      AO: 'Angola',
      AQ: 'Antarctica',
      AR: 'Argentina',
      AS: 'American Samoa',
      AT: 'Austria',
      AU: 'Australia',
      AW: 'Aruba',
      AX: 'Åland Islands',
      AZ: 'Azerbaijan',
      BA: 'Bosnia & Herzegovina',
      BB: 'Barbados',
      BD: 'Bangladesh',
      BE: 'Belgium',
      BF: 'Burkina Faso',
      BG: 'Bulgaria',
      BH: 'Bahrain',
      BI: 'Burundi',
      BJ: 'Benin',
      BL: 'St. Barthélemy',
      BM: 'Bermuda',
      BN: 'Brunei',
      BO: 'Bolivia',
      BQ: 'Caribbean Netherlands',
      BR: 'Brazil',
      BS: 'Bahamas',
      BT: 'Bhutan',
      BW: 'Botswana',
      BY: 'Belarus',
      BZ: 'Belize',
      CA: 'Canada',
      CC: 'Cocos (Keeling) Islands',
      CD: 'Congo - Kinshasa',
      CF: 'Central African Republic',
      CG: 'Congo - Brazzaville',
      CH: 'Switzerland',
      CI: 'Côte d’Ivoire',
      CK: 'Cook Islands',
      CL: 'Chile',
      CM: 'Cameroon',
      CN: 'China',
      CO: 'Colombia',
      CR: 'Costa Rica',
      CU: 'Cuba',
      CV: 'Cape Verde',
      CW: 'Curaçao',
      CX: 'Christmas Island',
      CY: 'Cyprus',
      CZ: 'Czech Republic',
      DE: 'Germany',
      DG: 'Diego Garcia',
      DJ: 'Djibouti',
      DK: 'Denmark',
      DM: 'Dominica',
      DO: 'Dominican Republic',
      DZ: 'Algeria',
      EA: 'Ceuta & Melilla',
      EC: 'Ecuador',
      EE: 'Estonia',
      EG: 'Egypt',
      EH: 'Western Sahara',
      ER: 'Eritrea',
      ES: 'Spain',
      ET: 'Ethiopia',
      FI: 'Finland',
      FJ: 'Fiji',
      FK: 'Falkland Islands',
      FM: 'Micronesia',
      FO: 'Faroe Islands',
      FR: 'France',
      GA: 'Gabon',
      GB: 'United Kingdom',
      GD: 'Grenada',
      GE: 'Georgia',
      GF: 'French Guiana',
      GG: 'Guernsey',
      GH: 'Ghana',
      GI: 'Gibraltar',
      GL: 'Greenland',
      GM: 'Gambia',
      GN: 'Guinea',
      GP: 'Guadeloupe',
      GQ: 'Equatorial Guinea',
      GR: 'Greece',
      GS: 'South Georgia & South Sandwich Islands',
      GT: 'Guatemala',
      GU: 'Guam',
      GW: 'Guinea-Bissau',
      GY: 'Guyana',
      HK: 'Hong Kong SAR China',
      HN: 'Honduras',
      HR: 'Croatia',
      HT: 'Haiti',
      HU: 'Hungary',
      IC: 'Canary Islands',
      ID: 'Indonesia',
      IE: 'Ireland',
      IL: 'Israel',
      IM: 'Isle of Man',
      IN: 'India',
      IO: 'British Indian Ocean Territory',
      IQ: 'Iraq',
      IR: 'Iran',
      IS: 'Iceland',
      IT: 'Italy',
      JE: 'Jersey',
      JM: 'Jamaica',
      JO: 'Jordan',
      JP: 'Japan',
      KE: 'Kenya',
      KG: 'Kyrgyzstan',
      KH: 'Cambodia',
      KI: 'Kiribati',
      KM: 'Comoros',
      KN: 'St. Kitts & Nevis',
      KP: 'North Korea',
      KR: 'South Korea',
      KW: 'Kuwait',
      KY: 'Cayman Islands',
      KZ: 'Kazakhstan',
      LA: 'Laos',
      LB: 'Lebanon',
      LC: 'St. Lucia',
      LI: 'Liechtenstein',
      LK: 'Sri Lanka',
      LR: 'Liberia',
      LS: 'Lesotho',
      LT: 'Lithuania',
      LU: 'Luxembourg',
      LV: 'Latvia',
      LY: 'Libya',
      MA: 'Morocco',
      MC: 'Monaco',
      MD: 'Moldova',
      ME: 'Montenegro',
      MF: 'St. Martin',
      MG: 'Madagascar',
      MH: 'Marshall Islands',
      MK: 'Macedonia',
      ML: 'Mali',
      MM: 'Myanmar (Burma)',
      MN: 'Mongolia',
      MO: 'Macau SAR China',
      MP: 'Northern Mariana Islands',
      MQ: 'Martinique',
      MR: 'Mauritania',
      MS: 'Montserrat',
      MT: 'Malta',
      MU: 'Mauritius',
      MV: 'Maldives',
      MW: 'Malawi',
      MX: 'Mexico',
      MY: 'Malaysia',
      MZ: 'Mozambique',
      NA: 'Namibia',
      NC: 'New Caledonia',
      NE: 'Niger',
      NF: 'Norfolk Island',
      NG: 'Nigeria',
      NI: 'Nicaragua',
      NL: 'Netherlands',
      NO: 'Norway',
      NP: 'Nepal',
      NR: 'Nauru',
      NU: 'Niue',
      NZ: 'New Zealand',
      OM: 'Oman',
      PA: 'Panama',
      PE: 'Peru',
      PF: 'French Polynesia',
      PG: 'Papua New Guinea',
      PH: 'Philippines',
      PK: 'Pakistan',
      PL: 'Poland',
      PM: 'St. Pierre & Miquelon',
      PN: 'Pitcairn Islands',
      PR: 'Puerto Rico',
      PS: 'Palestinian Territories',
      PT: 'Portugal',
      PW: 'Palau',
      PY: 'Paraguay',
      QA: 'Qatar',
      RE: 'Réunion',
      RO: 'Romania',
      RS: 'Serbia',
      RU: 'Russia',
      RW: 'Rwanda',
      SA: 'Saudi Arabia',
      SB: 'Solomon Islands',
      SC: 'Seychelles',
      SD: 'Sudan',
      SE: 'Sweden',
      SG: 'Singapore',
      SH: 'St. Helena',
      SI: 'Slovenia',
      SJ: 'Svalbard & Jan Mayen',
      SK: 'Slovakia',
      SL: 'Sierra Leone',
      SM: 'San Marino',
      SN: 'Senegal',
      SO: 'Somalia',
      SR: 'Suriname',
      SS: 'South Sudan',
      ST: 'São Tomé & Príncipe',
      SV: 'El Salvador',
      SX: 'Sint Maarten',
      SY: 'Syria',
      SZ: 'Swaziland',
      TA: 'Tristan da Cunha',
      TC: 'Turks & Caicos Islands',
      TD: 'Chad',
      TF: 'French Southern Territories',
      TG: 'Togo',
      TH: 'Thailand',
      TJ: 'Tajikistan',
      TK: 'Tokelau',
      TL: 'Timor-Leste',
      TM: 'Turkmenistan',
      TN: 'Tunisia',
      TO: 'Tonga',
      TR: 'Turkey',
      TT: 'Trinidad & Tobago',
      TV: 'Tuvalu',
      TW: 'Taiwan',
      TZ: 'Tanzania',
      UA: 'Ukraine',
      UG: 'Uganda',
      UM: 'U.S. Outlying Islands',
      US: 'United States',
      UY: 'Uruguay',
      UZ: 'Uzbekistan',
      VA: 'Vatican City',
      VC: 'St. Vincent & Grenadines',
      VE: 'Venezuela',
      VG: 'British Virgin Islands',
      VI: 'U.S. Virgin Islands',
      VN: 'Vietnam',
      VU: 'Vanuatu',
      WF: 'Wallis & Futuna',
      WS: 'Samoa',
      XK: 'Kosovo',
      YE: 'Yemen',
      YT: 'Mayotte',
      ZA: 'South Africa',
      ZM: 'Zambia',
      ZW: 'Zimbabwe'
    },
    models: {
      attachment: {
        noFileName: "Unknown File Name",
        placeholder: "Enter the document's source URL",
        saveProductNotification: "Attachment created! Click \"Save\" to save your changes.",
        sourceUri: "Source URL",
        submitButton: "OK",
        warrantyButton: "Warranty Information",
        warrantyHeader: "Attach a new warranty document"
      },
      user: {
        email: 'Email',
        firstName: 'First Name',
        lastName: 'Last Name'
      },
      vendor: {
        name: 'Legal Business Name',
        fulfillmentPlatform: 'Fulfillment Platform',
        legacyM3Uuid: 'Legacy M3 UUID',
        returnToVendorSupported: 'Return to Vendor Supported',
        returnToVendorThreshold: 'Threshold',
        returnToVendorThresholdCurrency: 'Currency',
        shippingAccount: 'Shipping Option',
        shippingSla: 'Shipping SLA (in business days)',
        state: 'Vendor Status',
        supportedShippingServices: 'Shipping Carriers',
        address: {
          address1: 'Street 1',
          address2: 'Street 2',
          city: 'City',
          state: 'State',
          country: 'Country',
          zip: 'Zip'
        },
        bankInfo: {
          makeChecksPayableTo: 'Bank Account Name',
          beneficiaryBankAccountNumber: 'Bank Account Number',
          country: 'Bank Country',
          beneficiaryBankName: 'Bank Name',
          beneficiaryBankRoutingNumber: 'Routing Number',
          taxId: 'Tax Identification Number'
        },
        businessContact: {
          firstName: 'First Name',
          lastName: 'Last Name',
          phone: 'Phone',
          email: 'Email'
        },
        paymentInfo: {
          discountAllowance: 'Discount Allowance',
          financialContactEmail: 'Financial Contact Email',
          freightAllowance: 'Freight Allowance',
          paymentTerm: 'Payment Terms'
        }
      },
      vendorUserAssociation: {
        roles: 'Vendor Relationship'
      }
    },
    'mx-switch': {
      on: 'ON',
      off: 'OFF'
    },
    titles: {
      application: 'GGG',
      contracts: 'Contracts',
      docs: 'Docs',
      features: 'Features',
      inventory: 'Products',
      products: 'Products',
      stats: 'Stats',
      terms: 'Terms of Use',
      vendors: 'Vendors'
    },
    units: {
      size: {
        inches: 'inches',
        feet: 'feet',
        millimeters: 'millimeters',
        centimeters: 'centimeters',
        meters: 'meters'
      },
      weight: {
        ounces: 'ounces',
        pounds: 'pounds',
        grams: 'grams',
        kilograms: 'kilograms'
      }
    },
    app: {
      footer: {
        copyright: '© 2016 Groupon, Inc. All Rights Reserved.'
      },
      title: 'Goods Gateway',
      paginationDetails: '{{current}} of {{total}}',
      pricing: 'GoodsPricing'
    },
    clearSearch: 'Clear Search',
    search: 'Search',
    close: 'Close',
    currency: {
      symbol: '$',
      minorUnits: '.00'
    },
    deal: {
      index: {
        title: 'Deals'
      },
      searchPlaceholder: 'search by deal UUID or permalink',
      categoryIdsHeader: 'Category IDs',
      pause: 'Pause',
      unpause: 'Unpause',
      statusChangeSuccess: 'Deal {{status}} enqueued. This change may take a minute or so to propagate to other systems.',
      categoryPlaceholder: 'Add a new Category UUID',
      lookupError: 'Deal not found'
    },
    addCategories: 'Add Categories',
    removeCategories: 'Remove Categories',
    pause: 'Pause',
    unpause: 'Unpause',
    boost: 'Boost',
    deboost: 'Deboost',
    updateMrt: 'Update MRT',
    bulkUpdater: {
      action: 'Action',
      addCategories: 'Add Categories',
      bulkUpdateAction: 'Bulk Update Action',
      deals: 'Deals',
      idsOrPermalinks: 'IDs or Permalinks',
      details: 'Details',
      enqueueDeals: 'Enqueue',
      enqueued: 'Enqueued',
      errors: 'Errors',
      pauseDeals: 'Pause',
      permalinkOrUuid: 'Permalink or UUID',
      dealsPlaceholder: 'Enter a comma-separated list of deal permalinks or UUIDs',
      productsPlaceholder: 'Enter a comma-separated list of deal permalinks, deal UUIDs, or product UUIDs',
      processDeals: 'Process',
      products: 'Products',
      reEnqueueAll: 'Re-enqueue All',
      reEnqueueDeal: 'Re-enqueue',
      removeAll: 'Remove All',
      removeCategories: 'Remove Categories',
      removeError: 'Delete',
      response: 'Response',
      select: 'Select Bulk Action',
      success: 'Success',
      unpauseDeals: 'Unpause',
      updateType: 'Update Type'
    },
    contract: {
      GR: 'GR $ & GR %',
      agreeToTerms: 'By clicking “Agree & Submit”, Seller hereby acknowledges and agrees that, upon Buyer’s acceptance hereof, Seller will be bound by this Option to Purchase and the Vendor Agreement.',
      approve: 'Approve',
      approved: 'Contract Approved!',
      close: 'Close',
      category: 'Category',
      coOpPercentage: 'Co-op (%)',
      cost: 'Unit Price',
      costTooltip: 'Product unit price is locked from {{startDate}} until {{endDate}}. You cannot edit during this time.',
      country: 'Country',
      created: 'Contract Created!',
      currency: 'Currency',
      dateFormat: 'MM/DD/YYYY',
      defaultCountry: 'US',
      defaultCurrency: 'USD',
      deleteContract: 'Contract deleted.',
      deleteContractFailed: 'Failed to delete contract.',
      detailHeader: 'Option to Purchase',
      discountAllowance: 'Discount Allowance',
      endDate: 'Option Locked Until',
      end: 'End Contract',
      endContractConfirmation: 'You are about to end this active contract at midnight. Are you sure that you want to proceed?',
      scheduledEndDate: 'Contract has been successfully scheduled to end at midnight',
      estimatedFreightCost: 'Estimated Freight Cost',
      freightAllowance: 'Freight Allowance',
      freightCost: 'Freight Cost',
      fulfillmentMethod: 'Fulfillment Method',
      fulfillmentOptionValidationError: 'Information required to create a contract is missing. Please contact your Groupon representative to have your information updated.',
      goodsVendorGuideLinkText: 'Groupon Goods Vendor Guide',
      header: 'Contracts',
      item: 'Item',
      items: 'Items',
      lumpSumCoOp: 'Lump Sum',
      minimumQuantity: 'Minimum # Of Units',
      name: 'Name',
      netExtendedPrice: 'Net Extended Price',
      newContract: 'Create A New Contract',
      offerTerms: 'Offer Terms',
      optionPeriod: 'Option Period',
      paymentTerms: 'Payment Terms',
      reject: 'Reject',
      rejected: 'Contract Rejected!',
      resubmit: 'Resubmit',
      resubmitted: 'Contract Resubmitted!',
      sellPrice: 'Scheduled Sell Price',
      shippingSla: 'Shipping SLA',
      shippingSlaInDays: '{{value}} days',
      startDate: 'Option Effective Date',
      startDateInThePastNotification: 'Contract has an effective date earlier than tomorrow. Approval will cause the effective date to be adjusted to tomorrow.',
      status: 'Contract Status',
      submit: 'Agree & Submit',
      update: 'Update & Submit',
      updated: 'Contract Updated!',
      terms: 'In consideration for the Deposit (as defined above), Seller hereby grants to Buyer the option to purchase up to the number of units of Goods specified above, at the Unit Price specified above (subject to any Discount Allowance and/or Freight Allowance), at any time during the “Option Period” set forth above (the “Option”). Seller agrees to hold in stock for Buyer the number of units of Goods specified above until the earlier of: (a) Buyer’s exercise of the Option in full; or (b) the end of the Option Period. If Buyer does not exercise the Option, Buyer shall pay Seller a one-time $10.00 deposit (“Deposit”) within one (1) business day after the end of the Option Period.  This “Option to Purchase” and any “Purchase Order” issued by Buyer hereunder shall be subject to and governed by the Groupon Goods Vendor Agreement (as amended if applicable); provided, however, that if the Parties have previously agreed to an amendment of any previous {{{goodsVendorGuide}}}, the terms of such agreement as amended shall govern (in either case, the “Vendor Agreement”). In the event of any conflict or inconsistency between the provisions of this Option to Purchase and the Vendor Agreement, the provisions of this Option to Purchase shall control and govern. All capitalized terms not defined herein shall have the meanings ascribed to them in the Vendor Agreement.',
      termsAndConditionsHeading: 'Terms & Conditions',
      total: 'Total',
      upc: 'UPC',
      approvalNumbers: 'Approved',
      vendor: 'Vendor',
      vendorAgreementLinkText: 'Vendor Agreement',
      vendorSku: 'Vendor SKU',
      deleteContractModal: {
        title: 'Confirm Contract Delete',
        warning: 'Are you sure you want to delete this upcoming contract?'
      },
      detail: {
        product: 'Product',
        status: 'Status',
        vendor: 'Vendor'
      },
      index: {
        cloneContract: 'Clone Contract',
        deleteContract: 'Delete Contract',
        productDetails: 'Product Group Details',
        newFeature: 'New Feature',
        viewFeatures: 'View Features',
        noContracts: 'No contracts found'
      }
    },
    feature: {
      addNewFeature: 'Create Feature',
      applyStartDateToProduct: 'Go live on feature start date',
      confirm: 'Confirm',
      createSuccess: 'Feature created successfully',
      dateFormat: 'MM/DD/YYYY',
      'delete': 'Delete Feature',
      deleteSuccess: 'Feature has been deleted successfully.',
      deleteFailure: 'Failed to delete feature.',
      editFeature: 'Update Feature',
      endDate: 'End Date',
      existingFeatures: 'Existing Features',
      imageNotes: 'Image Notes',
      inventoryList: 'Inventory List',
      needEditorialReview: 'Request Editorial Review',
      newFeature: 'New Feature',
      salesPoints: 'Editorial Notes',
      startDate: 'Start Date',
      updateSuccess: 'Feature updated successfully.'
    },
    inventory: {
      index: {
        approvalStatus: 'Approval Status',
        approveButton: 'Approve',
        approveFailure: 'Approval Failed.',
        approveSuccess: 'Approval Succeeded.',
        attributes: 'Attributes',
        autoApprovalStatus: 'Auto Approval',
        autoPriceButton: 'Auto Price',
        autoPriceFailure: 'Auto Pricing Failed.',
        autoPriceSuccess: 'Auto Pricing in progress. Refresh the page to see a new sell price.',
        brand: 'Brand',
        category: 'Category',
        defaultTitle: '(title)',
        freightCost: '{{freightCost}}',
        freightCostHeader: 'Freight Cost',
        grossRevenue: 'GR',
        manualApprovalStatus: 'Manual Approval',
        noResults: 'Please search for inventory or expand your search.',
        msrp: '{{msrp}}',
        msrpHeader: 'MSRP',
        quantityOnHand: 'QTY',
        rejectButton: 'Reject',
        rejectFailure: 'Rejection Failed.',
        rejectSuccess: 'Rejection Succeeded.',
        sellPrice: 'Sell Price',
        sellPriceSaveSuccess: 'Sell price has been updated and auto approval process has started. Refresh the page to see a new approval status.',
        sellPriceSaveFailure: 'Sell price update has failed',
        sellPriceFormattingError: 'Incorrect sell price format',
        sellPriceCannotBeZero: 'Sell price cannot be zero',
        sku: 'SKU',
        status: 'Status',
        title: 'Name',
        unitPrice: '{{cost}}',
        unitPriceHeader: 'Unit Price'
      }
    },
    auth: {
      login: {
        authFailureFlash: 'Authentication failed',
        authSuccessFlash: 'Authentication succeeded',
        button: 'Log In',
        email: 'Email address',
        forgotPasswordLink: 'Forgot your password?',
        password: 'Password',
        validationFailureFlash: 'Session expired'
      },
      forgotPassword: {
        button: 'Request reset',
        confirmation: 'Your reset request has been sent. The email provided will receive a reset link momentarily if it belongs to an account.',
        email: 'Email address',
        failure: 'Your reset request failed. Try again shortly or contact support.',
        introExplanation: 'Enter your email address to receive a link enabling you to reset your password.',
        resetViaOkta: 'Please reset your password with Okta instead.'
      },
      resetPassword: {
        button: 'Accept & Finish',
        confirmation: 'Your new password has been set and you are now logged in. Welcome to Groupon Goods Gateway!',
        failure: 'Your reset failed. Try again shortly, request a new reset link, or contact support.',
        introExplanation: 'Please enter your new password below.',
        mismatch: 'The passwords entered do not match',
        password: 'New password',
        passwordRepeat: 'Repeat new password',
        termsAcceptance: 'By clicking {{buttonText}}, you are indicating that you have read and agree to the {{{link}}}',
        termsLinkText: 'Terms of Use'
      }
    },
    user: {
      cancel: 'Cancel',
      creationSuccess: '{{{firstName}}} {{{lastName}}} &lt;{{{email}}}&gt; successfully invited',
      email: 'Email',
      firstName: 'First Name',
      lastName: 'Last Name',
      role: 'Role',
      title: 'Invite New User',
      userSectionTitle: 'User Details',
      vendor: 'Vendor',
      vendorSectionTitle: 'Vendor Access'
    },
    vendor: {
      addNew: 'Add New Vendor',
      addUser: 'Create User',
      cancel: 'Cancel',
      createForm: 'Create New Vendor',
      createSuccess: 'Merchant created!',
      createdDetail: '{{{attr_open}}}Created: {{{attr_close}}}{{{value_open}}}{{value}}{{{value_close}}}',
      created_at: 'Created At',
      emailDetail: '{{{attr_open}}}Email: {{{attr_close}}}{{{value_open}}}{{value}}{{{value_close}}}',
      fulfillmentPlatform: 'Fulfillment Platform',
      header: 'Vendors',
      'new': 'New Vendor',
      next: 'Next',
      platformSettings: 'Platform Settings',
      previous: 'Prev',
      returnToVendor: "Return to Vendor",
      save: 'Save',
      shippingHelper: 'Hold cmd/ctrl and click to select more than one carrier.',
      updateSuccess: 'Merchant updated!',
      useShippingAddress: "Use Shipping Address",
      uuid: 'UUID',
      uuidDetail: '{{{attr_open}}}UUID: {{{attr_close}}}{{{value_open}}}{{value}}{{{value_close}}}'
    },
    vendors: {
      title: 'Vendors',
      edit: {
        title: 'Editing {{name}}',
        allVendors: '« All Vendors',
        invalidVendor: 'Vendor is not valid, please correct the invalid fields',
        saveSuccess: 'Successfully saved vendor'
      },
      index: {
        name: 'Name',
        id: 'ID',
        createdAt: 'Created',
        newVendor: 'New Vendor',
        noResults: 'No results, please expand your search'
      },
      'new': {
        title: 'New Vendor',
        invalidVendor: 'Vendor is not valid, please correct the invalid fields before creating',
        saveSuccess: 'Vendor successfully created!'
      }
    },
    views: {
      contract: {
        index: {
          productState: 'Product Group State'
        }
      },

      feature: {
        title: 'Features',

        index: {
          endDate: 'End',
          name: 'Name',
          newFeature: 'New Feature',
          noFeaturesFound: 'No features found matching criteria.',
          productGroupState: 'Product Group State',
          startDate: 'Start',
          state: 'Status',
          vendor: 'Vendor',
          viewContracts: 'View Contracts',
          viewProductGroup: 'View Product Group'
        }
      },

      inventory: {
        title: 'Products'
      },

      'not-found': {
        title: 'Not Found',
        description: 'Sorry, we couldn\'t find what you were looking for.'
      },

      product: {
        title: 'Product Groups',
        edit: {
          allProducts: '« All Products',
          title: 'Product Group',
          update: 'Update Product Group'
        },
        index: {
          productState: 'State'
        },
        'new': {
          allProducts: '« All Products',
          title: 'Add Product Group'
        }
      },

      stats: {
        approvals: {
          approvalStats: 'Approval Stats',
          rejectionReasons: 'Rejection Reasons'
        }
      },

      vendor: {
        show: {
          allVendors: '« All Vendors',
          editLink: 'Basic Information',
          title: 'Vendors',
          usersLink: 'Users',
          users: {
            createdUser: 'Successfully added {{userName}} to {{vendorName}}',
            noName: '(no name)',
            title: 'Users',
            userName: '{{firstName}} {{lastName}}'
          }
        }
      }
    },
    product: {
      battery: 'Battery',
      batteryIncluded: '{{{attr_open}}}Included: {{{attr_close}}}{{{value_open}}}{{value}}{{{value_close}}}',
      batteryRequired: '{{{attr_open}}}Required: {{{attr_close}}}{{{value_open}}}{{value}}{{{value_close}}}',
      batteryType: '{{{attr_open}}}Type: {{{attr_close}}}{{{value_open}}}{{value}}{{{value_close}}}',
      brand: 'Brand',
      cancel: 'Cancel',
      category: 'Category',
      closedCategoryError: "This product's category has become closed. Please choose a different category to proceed.",
      dealUUID: 'Deal UUID',
      dealUuidLink: '{{{attr_open}}}GVP Deal: {{{attr_close}}}{{{value_open}}}{{{value}}}{{{value_close}}}',
      description: '{{{attr_open}}}Description: {{{attr_close}}}{{{value_open}}}{{value}}{{{value_close}}}',
      details: 'Product Details',
      detailsKey: 'Details',
      dmapiStatusLink: '{{{attr_open}}}Associated Deal: {{{attr_close}}}{{{value_open}}}{{{value}}}{{{value_close}}}',
      edit: 'Edit',
      hasVariations: {
        no: 'This product group has no products',
        yes: 'This product group varies by:'
      },
      imageDeletionError: 'Error deleting image.',
      index: {
        category: 'Category',
        proposeContract: 'Propose Contract',
        defaultTitle: '(untitled)',
        newFeature: 'New Feature',
        noProducts: 'No products found.',
        viewContracts: 'View Contracts',
        viewFeatures: 'View Features'
      },
      manufacturer: 'Manufacturer',
      merchant: '{{{attr_open}}}Vendor: {{{attr_close}}}{{{value_open}}}{{value}}{{{value_close}}}',
      nextFeature: 'Next Feature',
      option: {
        cost: 'Cost',
        inventory: 'Products',
        marketPrice: 'Market Price',
        msrp: 'MSRP',
        price: 'Price',
        variant: 'Variant'
      },
      options: 'Options ({{option_count}})',
      permalink: 'Permalink',
      product: 'Name',
      saveButton: 'Save',
      slug: '{{{attr_open}}}Slug: {{{attr_close}}}{{{value_open}}}{{value}}{{{value_close}}}',
      state: '{{{attr_open}}}State: {{{attr_close}}}{{{value_open}}}{{value}}{{{value_close}}}',
      status: '{{{attr_open}}}Status: {{{attr_close}}}{{{value_open}}}{{value}}{{{value_close}}}',
      statusKey: 'Status',
      supplier: 'Vendor',
      title: 'Title',
      unitsSold: 'Units Sold',
      upc: '{{{attr_open}}}UPC: {{{attr_close}}}{{{value_open}}}{{value}}{{{value_close}}}',
      variations: 'Approved',
      warranty: 'Warranty',
      warrantyLength: '{{{attr_open}}}Length: {{{attr_close}}}{{{value_open}}}{{value1}} {{value2}}{{{value_close}}}',
      warrantyProvider: '{{{attr_open}}}Provider: {{{attr_close}}}{{{value_open}}}{{value}}{{{value_close}}}',
      warrantyType: '{{{attr_open}}}Type: {{{attr_close}}}{{{value_open}}}{{value}}{{{value_close}}}'
    },
    item: {
      brand: {
        name: 'Brand'
      },
      close: 'Close',
      image: 'Image',
      msrp: 'MSRP',
      title: 'Title',
      vendorSku: 'SKU'
    },
    option: {
      title: 'Title',
      sku: 'SKU',
      msrp: 'MSRP',
      image: 'Image'
    },
    priceSuggestion: {
      activityLink: 'Activity',
      faqLink: 'Help',
      feedbackLink: 'Feedback',
      featuredDates: '{{start}} - {{end}}',
      next: 'Next',
      previous: 'Prev',
      enterACategory: 'Enter a category',
      paused: 'Paused',
      maxCategories: 'You have reached the limit of {{max_category_filters}} categories. If you need to add another, please remove a category from the search before continuing.',
      tooManyCategories: 'You can only search by {{max_category_filters}} categories. Please remove a category from the search before continuing.',
      noStrategySelected: 'All strategies'
    },
    priceSuggestionError: {
      noPricingData: "Pricing data can not be loaded at this time. Please try again later."
    },
    stats: {
      approvals: {
        approvalStatus: 'Approval Status',
        autoApprovalStatus: 'Auto Approval',
        manualApprovalStatus: 'Manual Approval',
        rejectionReason: 'Rejection Reason',
        count: 'Products',
        noStat: 'No inventory present for this filter. Please expand your search.'
      },
      contracts: {
        status: 'Status',
        count: 'Contracts',
        topVendors: 'Top 10 Vendors',
        topCategories: 'Top 10 Categories',
        noStat: 'No contract present for this filter. Please expand your search.'
      }
    },
    priceSuggestionDetail: {
      accept: 'Accept',
      acceptOverride: 'Accept / Override',
      bandActionCheckbox: 'Band Deal On Acceptance',
      cost: 'Cost',
      description: 'Option Details',
      errorDetails: 'Details:',
      errorForbidden: 'You don\'t have permission to submit one or more price suggestion(s).',
      freightCost: 'Freight Cost',
      gcLink: 'Goods Central',
      dealEstateLink: 'Deal Estate',
      link: 'Link',
      lowestCompetitorLink: 'Lowest Comp +Shipping',
      msrp: 'MSRP',
      noMorePriceSuggestions: 'There are no more pending price suggestions for this deal.',
      outdated: 'Some submitted price suggestions were outdated. They may already be accepted/rejected, or they may be invalid.',
      proposedSellPrice: 'Proposed Sell Price +Shipping',
      proposedUnitGR: 'Proposed Unit GR $ and %',
      reject: 'Reject',
      select: 'Select',
      sellPrice: 'Sell Price +Shipping',
      serverError: 'There was an issue submitting some price suggestions. Please try again.',
      status: 'Status',
      success: 'Changes have been applied.',
      successBandsUpdated: 'Changes have been applied.  Your bands have successfully been set.',
      successBandsDeleted: 'Changes have been applied.  Your bands have successfully been removed.',
      title: 'Title',
      unitGR: 'Unit GR $ and %'
    },
    priceSuggestionOptionCard: {
      applyToCostGroup: 'Apply to Cost Group',
      clearOverridePrice: 'Clear Override Price'
    },
    confirmModal: {
      confirm: 'Confirm',
      cancel: 'Cancel'
    },
    priceSuggestionRejectModal: {
      bundleOrKittedItem: 'Bundle/Kitted Item',
      cancel: 'Cancel',
      changeInMarketPrice: 'Change in Market Price, No Change Needed',
      clearance: 'Clearance',
      compingDifferingRetailerNotBeingScraped: 'Comping Different Retailer Not Being Scraped',
      confirmReject: 'Confirm',
      dealEndingWithinFortyEightHours: 'Deal Ending Within 48 Hours',
      dealNotLiveOrSoldOut: 'Deal Not Live / Sold Out',
      dealSoldOutOrPaused: 'Deal Sold Out/Paused',
      featuredDeal: 'Featured Deal',
      featuredDealIlsSale: 'Featured Deal/ILS/Sale',
      incorrectCompPriceProductBundled: 'Incorrect Comp Price - Bundle',
      incorrectCompPriceLowInventory: 'Incorrect Comp Price - Low Inventory',
      incorrectCompPriceNegligibleDiscount: 'Incorrect Comp Price - Negligible Discount',
      incorrectCompPriceWrongProductMatched: 'Incorrect Comp Price - Wrong Product Matched',
      map: 'MAP',
      other: 'Other',
      proposedPriceAtOrAboveMsrp: 'Proposed Price at or Above MSRP',
      proposedPriceTooHigh: 'Proposed Price Too High',
      proposedPriceTooLow: 'Proposed Price Too Low',
      recommendationWillTakeMeToNegativeGp: 'Recommendation Will Take Me to Negative GP',
      refurbished: 'Refurbished',
      reasonPrompt: 'Please provide additional details for rejecting this pricing',
      specialVendorPricing: 'Special Vendor Pricing',
      specialVendorPricingOrCoOp: 'Special Vendor Pricing/Co-Op',
      strategyMismatchWithGoodBetterBest: 'Strategy Mismatch with Good/Better/Best',
      title: 'Please select your reason for rejecting these prices',
      wrongProductMatched: 'Wrong Product Matched'
    },
    priceSuggestionOverrideModal: {
      cancel: 'Cancel',
      compPrice: 'Comp price has changed',
      confirmAccept: 'Confirm',
      differentCostGroups: 'Different cost groups - want tiered pricing',
      moreNaturalPricePoint: 'Hit more natural price point ($39.99 vs $40.99)',
      negativeGP: 'Proposed price will take me to negative GP',
      other: 'Other',
      overrideReasonPrompt: 'Please tell us why you overrode these prices',
      subtitle: 'Please select the reason below',
      title: 'You have overridden item(s) in this deal'
    },
    priceSuggestionValidations: {
      warning: 'Please review the warnings with this pricing',
      confirmationPrompt: 'I acknowledge the above warnings and still want to make these changes',
      notPricedAboveCostPlusFreight: 'Proposed sell price below cost + freight cost',
      notDirectionallyAligned: 'Proposed sell price contrary to pricing strategy'
    },
    pricingActivity: {
      acceptedOverridden: "Accepted / Overridden",
      acceptedPrice: "Accepted / Overridden Price",
      action: 'Action',
      bandsDeletedForDeal: 'All bands have been deleted for this deal',
      bandInfo: '{{lowerBound}} - {{upperBound}}',
      currentBand: 'Current Price Band',
      dealTitle: 'Deal Title',
      dealEstateStatus: 'DE: {{status}}',
      failedToUpdateBandsForDeal: 'Bands for this deal could not be updated: {{error}}',
      goodsCentralStatus: 'GC: {{status}}',
      lowestCompPlusShipping: 'Lowest Comp +Shipping',
      noActivityFound: 'There are no {{activity}} price suggestions',
      optionTitle: 'Option Title',
      overrideReason: 'Override Reason',
      rejectReason: 'Reject Reason',
      rejected: "Rejected",
      rejectedPrice: "Rejected Price",
      reviewedInfo: 'Reviewed By',
      searchDealHint: 'deal UUID or permalink',
      searchHint: "username",
      syncStatus: 'Sync Status',
      title: 'Activity List'
    },
    forms: {
      required: '{{label}}*'
    },
    mixins: {
      field: {
        validations: {
          presence: 'Must be present'
        },
        presenceValidation: 'Must be present'
      }
    },
    routes: {
      product: {
        base: {
          created: 'Product Group Created!',
          deleted: 'Product Group Deleted!',
          updated: 'Product Group Updated!'
        },
        item: {
          deleted: 'Product Deleted!'
        }
      }
    },
    errors: {
      accepted: 'must be accepted',
      after_date_validation_error: 'must be after {{afterDate}}',
      alert: 'We found some issues with the following fields:',
      arrayIncludesInvalidValues: 'includes invalid values',
      before_date_validation_error: 'must be before {{beforeDate}}',
      blank: 'can\'t be blank',
      confirmation: 'doesn\'t match {{attribute}}',
      date: 'must be a valid date',
      empty: 'can\'t be empty',
      equalTo: 'must be equal to {{count}}',
      even: 'must be even',
      exclusion: 'is reserved',
      forbidden: '403 forbidden: you are unauthorized to perform the action.',
      generic: 'Something went wrong.',
      greaterThan: 'must be greater than {{count}}',
      greaterThanOrEqualTo: 'must be greater than or equal to {{count}}',
      inclusion: 'is not included in the list',
      invalid: 'is invalid',
      invalidCopy: 'invalid copy',
      lessThan: 'must be less than {{count}}',
      lessThanOrEqualTo: 'must be less than or equal to {{count}}',
      localizedContent: "only alpha-numeric and punctuation characters are allowed",
      missingRequiredAttribute: 'have one or more blank values for required values',
      notANumber: 'is not a number',
      notAnInteger: 'must be an integer',
      odd: 'must be odd',
      otherThan: 'must be other than {{count}}',
      present: 'must be blank',
      requestIdTemplate: 'Request ID: {{requestId}}',
      tooLong: 'is too long (maximum is {{count}})',
      tooShort: 'is too short (minimum is {{count}})',
      url: 'must be a valid URL, e.g. myurl.com/thing',
      wrongLength: 'is the wrong length (should be {{count}})',
      wrongUniversalIdFormat: 'incorrect format for {{type}}',
      duplicateUniversalId: 'already used',
      duplicateAttributeSet: 'do not have a unique set'
    },
    'vp-category-attribute': {
      placeholder: 'Enter an attribute, then press enter.',
      required: '{{value}}*'
    },
    'vp-contract-notes-modal': {
      cancel: 'Cancel',
      confirm: 'Confirm',
      notesPrompt: 'Notes',
      title: 'Do you want to say something to vendor?'
    },
    'vp-delete-bands-button': {
      unbandDeal: 'Unband Deal'
    },
    'vp-edit-vendor': {
      admin: 'Admin',
      businessAddress: 'Business Address',
      businessContact: 'Business Contact',
      useShippingAddress: 'Use Shipping Address',
      paymentInformation: 'Payment Information',
      returnToVendor: 'Return to Vendor',
      returnToVendorAddress: 'Address',
      shipping: 'Shipping',
      shippingOptions: 'Options',
      shippingAddress: 'Address',
      supportedShippingServicesNote: 'Hold cmd/ctrl and click to select more than one carrier.',
      submit: 'Save Vendor',
      'add-user': {
        title: 'Add User',
        create: 'Add'
      },
      'add-vendor-user': {
        shouldInvite: 'Send Invitation?'
      }
    },
    'vp-feature-form': {
      editorialNotes: 'Editorial Notes',
      imageNotes: 'Image Notes',
      startDateWarning: 'Feature start date should be after {{targetDate}} for editorial lead time'
    },
    'vp-images': {
      createImage: 'Add Image',
      sourceUri: 'Image URL'
    },
    'vp-inventory-reject-modal': {
      cancel: 'Cancel',
      confirm: 'Confirm',
      reasonPrompt: 'Reason',
      title: 'Rejecting Items'
    },
    'vp-layout': {
      privacyPolicy: 'Privacy Policy',
      termsOfUse: 'Terms of Use'
    },
    'vp-navigation': {
      approvalStats: 'Approvals',
      bulk: 'Bulk Upload',
      catalog: 'Catalog',
      contracts: 'Contracts',
      deals: 'Deals',
      features: 'Features',
      fulfillment: 'Fulfillment',
      help: 'Help',
      inventory: 'Products',
      login: 'Log In',
      logout: 'Log Out',
      manage: 'Manage',
      menus: 'More',
      merchandise: 'Merchandise',
      newProduct: 'Add Product Group',
      orders: 'Orders',
      pricing: 'Pricing',
      products: 'Product Groups',
      remittance: 'Remittance',
      search: 'Search',
      stats: 'Stats',
      support: 'Support',
      vendors: 'Vendors'
    },
    'vp-new-feature': {
      errorMessage: '{{fieldName}} {{error}}'
    },
    'vp-paginator': {
      previous: 'Previous',
      next: 'Next',
      summary: 'Page {{{current}}} of {{{total}}}'
    },
    'vp-product': {
      brandName: 'Brand',
      bulletPoints: 'Bullet Points',
      bulletPointsPlaceholder: 'Enter a bullet point, then press enter.',
      boxContents: 'What\'s Included in the Box?',
      category: 'Category',
      'continue': 'Continue',
      'delete': 'Delete',
      details: 'Details',
      description: 'Description',
      images: 'Images',
      manufacturer: 'Manufacturer',
      missingItemError: 'Please add at least one product to the group.',
      modelNumber: 'Manufacturer Model Number',
      msrpSiteLink: 'MSRP Site Link',
      page: {
        description: 'Please enter basic information about the product.',
        newTitle: 'New Product Group'
      },
      pickCategory: 'Which category best describes your product?',
      requiredInformation: 'Key Information',
      requiredFieldError: 'Please fill in required information to continue.',
      retailSiteLink: 'Retail Site Link',
      save: 'Save',
      saveAndContinue: 'Save & Continue',
      variations: 'Products',
      vendor: 'Vendor'
    },
    'vp-saved-searches': {
      title: 'Saved Searches',
      newSearch: 'Save Current Search As'
    },
    'product-upload': {
      heading: 'Bulk Uploads',
      singleItemCreate: 'Add a product',
      dragDropTitle: 'Drag and drop completed .CSV files',
      dragDropMessage: 'or',
      dragDropCta: 'Upload from Computer',
      addUpdateProducts: 'Add/Update Products',
      updateCost: 'Update Cost',
      updateInventory: 'Update Inventory',
      createTemplate: 'Create a Template',
      createCatalogTemplate: 'Create a Bulk Catalog Template',
      genericTemplate: {
        header: 'Download Generic Template',
        message: 'to Add New/Update Existing Products'
      },
      fileUploadError: 'Error uploading file. Please try again',
      fileUploadSuccess: 'File successfully uploaded',
      invalidFileTypeError: 'File upload failed. Only CSV files are supported',
      ok: 'OK',
      downloadText: 'Download',
      exportFullCatalog: {
        header: 'Export Full Catalog',
        message: 'to View/Edit All Products'
      },
      exportCostAndQtyCatalog: {
        header: 'Update Cost & Inventory',
        message: 'Cost & Inventory Only'
      },
      uploadHistory: 'Upload History',
      productUploadsTable: {
        nameHeader: 'FILE NAME',
        typeHeader: 'TYPE',
        dateHeader: 'DATE & TIME',
        statusHeader: 'STATUS',
        vendorHeader: 'VENDOR',
        noJobsFound: 'No product upload jobs found',
        failedText: 'FAILED',
        views: {
          cost_and_quantity: "Cost & Quantity",
          none: '',
          product: "Catalog"
        }
      },
      messages: {
        success: 'File successfully uploaded',
        error: 'Error uploading file. Please try again'
      }
    },
    'catalog-exports': {
      headings: {
        main: 'Export History',
        filename: 'FILE NAME',
        viewType: 'TYPE',
        exportDate: 'DATE & TIME',
        exportStatus: 'STATUS',
        vendor: 'VENDOR'
      },
      views: {
        cost_and_quantity: "Cost & Quantity",
        product: "Full Catalog"
      },
      messages: {
        success: 'Export request accepted for processing. Please return later when the job is complete.',
        error: 'Error processing export request. Please try again.',
        duplicateJobExists: "We're already processing an export request of this type. Please wait for it to finish before starting a new export."
      },
      noExports: 'No catalog export jobs found',
      statusMsg: {
        exportIsComplete: 'COMPLETE'
      }
    },
    'vp-product-images': {
      addingImage: 'Adding Image',
      apply: 'Apply Selected Image to Selected Products',
      copyToClipboard: 'Copy to Clipboard',
      createImage: 'Add Image to Product Group',
      createVariationImage: 'Add Image to Variation',
      description: 'You can select (click) uploaded images an apply them to products.',
      productImages: 'Product Group Images',
      selectedImage: 'Selected Image',
      sourceUri: 'Image Source URL',
      variationImages: 'Product Images'
    },
    helpers: {
      'item-attribute': {
        title: '{{name}}: {{value}}'
      }
    },
    'vp-item-editor': {
      customValue: 'Custom {{name}}',
      distinguishing: 'Distinguishing',
      invalidSet: 'Other variation(s) have this same combination of attributes',
      ok: 'OK',
      supplementary: 'Supplementary'
    },
    'vp-item-validity': {
      errorMessage: '{{property}} {{message}}'
    },
    'vp-listing-status': {
      '': 'None',
      active: 'Active',
      approved: 'Approved',
      content_approved: 'Data Valid',
      content_rejected: 'Data Invalid',
      contracted: 'Contracted',
      ended: 'Ended',
      expunged: 'Expunged',
      failed: 'Failed',
      market_data_pending: 'Pending Pricing',
      'new': 'New',
      pending: 'Pending',
      pending_review: 'Pending Review',
      rejected: 'Rejected',
      autoApproval: {
        rejectReasons: {
          attributes_missing: "At least one product in this multi-variation product group has no attributes.",
          auto_approval_not_allowed: 'Auto approval not allowed.',
          brand_invalid: 'Product requires manual approval.',
          category_missing: 'Category is missing.',
          cost_exceeds_msrp: 'Cost exceeds suggested retail price.',
          cost_exceeds_price: 'Cost exceeds price.',
          cost_invalid: 'Cost must be greater than zero.',
          currency_invalid: 'Invalid currency.',
          dup_variant: 'Option\'s variants duplicate another option\'s.',
          hazmat: 'Product must not contain hazardous materials.',
          html_invalid: 'Product description has invalid HTML markup.',
          images_missing: 'Product must have at least one image.',
          localized_contents_missing: 'Option must have localized contents.',
          ltl_shipping: 'LTL shipping not allowed.',
          manufacturer_missing: 'Manufacturer is missing.',
          market_data_missing: 'Market data missing.',
          market_price_lower: 'Product failed market price check.',
          merchant_not_active: 'Merchant is not active.',
          no_inventory_available: 'Quantity is zero.',
          not_available_to_groupon: 'Option is not available to Groupon.',
          option_deactivated: 'Option is deactivated, eg due to duplicate sku.',
          price_exceeds_msrp: 'Groupon sell price exceeds suggested retail price.',
          price_too_high: 'Price is too high.',
          price_zero: 'Price is zero.',
          rate_estimator_no_rate_data_found: 'Unable to estimate shipping cost due to incorrect package dimensions or missing shipping carriers.',
          ratings_too_low: 'Market ratings too low for this product.',
          shipping_cost_invalid: 'Shipping cost must be less than product cost.',
          tax_info_missing: 'Product\'s MRT has no tax code or its Merchant\'s shipping address is incomplete.',
          universal_id_missing: 'Universal_id is missing.',
          used_or_refurbished: 'Refurbished products can not be listed for this category.'
        }
      }
    },
    'vp-product-items': {
      addItem: 'Add a Product',
      approve: 'Approve',
      bulkVariationEdit: 'Bulk Product Edit',
      deleteButton: 'Delete Selected',
      details: 'Details',
      detailsDescription: 'Fill in the details that are common across selected products.',
      editButton: 'Edit Selected',
      editItem: 'Edit',
      editItemDetails: 'Edit Product Details',
      fulfillment: 'Fulfillment Information',
      identifiers: 'Identifiers',
      images: 'Images',
      logistics: 'Logistics',
      attributes: 'Attributes',
      measurements: 'Measurements',
      modelNumber: 'Model #',
      offer: 'Offer',
      packageMeasurements: 'Package Measurements',
      page: {
        detailsDescription: 'Please enter additional information about the product.',
        detailsTitle: 'Details',
        variationsDescription: 'Please enter additional information about each product. You can select multiple to edit in bulk.',
        variationsTitle: 'Products'
      },
      productMeasurements: 'Product Measurements',
      quantity: 'QTY',
      reject: 'Reject',
      selectCountry: 'Select Country',
      sizeUnit: 'Dimension Unit',
      state: 'State',
      status: 'Status',
      submit: 'Apply to Selected Items',
      title: 'Title',
      unitPrice: 'Unit Price',
      universalId: 'Product ID',
      universalIdType: 'ID Type',
      vendorGroupId: 'Product Group ID',
      vendorSku: 'SKU',
      weightUnit: 'Weight Unit',
      item: {
        attributes: 'Attributes',
        attributeUniqueness: 'Attributes',
        brand: {
          name: 'Brand Name'
        },
        height: {
          unit: 'Height Unit',
          value: 'Height'
        },
        image: {
          imageUri: 'Image URI'
        },
        isBundle: 'Is Bundle',
        isHazmat: 'Hazardous Material',
        isLtl: 'Is LTL',
        length: {
          unit: 'Length Unit',
          value: 'Length'
        },
        localizedContents: {
          description: 'Description',
          title: 'Title'
        },
        manufacturer: 'Manufacturer',
        modelNumber: 'Model Number',
        offers: {
          originCountry: 'Origin country',
          quantityOnHand: 'Quantity',
          itemCost: { amount: 'Unit Price' },
          warehouseId: 'Warehouse ID',
          fulfillmentOptions: {
            shippingCost: {
              amount: 'Shipping Cost'
            }
          }
        },
        originCountry: 'Country of Origin',
        packageHeight: {
          unit: 'Package Height Unit',
          value: 'Height'
        },
        packageLength: {
          unit: 'Package Length Unit',
          value: 'Length'
        },
        packageWeight: {
          unit: 'Package Weight Unit',
          value: 'Weight'
        },
        packageWidth: {
          unit: 'Package Width Unit',
          value: 'Width'
        },
        regionalizedContents: {
          countryCode: 'Country Code',
          map: { amount: 'MAP' },
          msrp: { amount: 'MSRP' }
        },
        state: {
          active: 'Active',
          inactive: 'Inactive'
        },
        universalId: {
          type: 'Product Identifier Type',
          value: 'Product Identifier'
        },
        vendorSku: 'Vendor SKU',
        weight: {
          unit: 'Weight Unit',
          value: 'Weight'
        },
        width: {
          unit: 'Width Unit',
          value: 'Width'
        }
      }
    },
    'vp-product-category-picker': {
      selectLeaf: 'Please select a leaf category'
    },
    'vp-product-nav': {
      basicInformation: 'Basic Information',
      images: 'Images',
      itemDetails: 'Product Details',
      variations: 'Products'
    },
    'vp-product-variations-count': {
      outOf: '{{{activeItemCountElement}}} : {{itemCount}}'
    },
    'vp-taxonomy-request-link': {
      title: 'Taxonomy Requests?'
    },
    'vp-x-search': {
      clearFilters: 'Clear Filters',
      instructionsTitle: 'Search Options',
      instructions: {
        approvalStatus: {
          title: 'Approval Status',
          description: 'Approved, Pending, Rejected'
        },
        autoApprovalStatus: {
          title: 'Auto Approval Status',
          description: 'Approved, Data Valid, Data Invalid, Pending Pricing, Pending, Rejected'
        },
        brand: {
          title: 'Brand Name',
          defaultCountry: 'US',
          description: 'Freeformed'
        },
        categoryIds: {
          title: 'Category',
          description: 'Name or ID'
        },
        contractStatus: {
          title: 'Contract Status',
          description: 'Active, Contracted, Ended, Failed, Pending Review, Rejected'
        },
        dealState: {
          title: 'Deal Status',
          description: 'Draft, Expired, Invalid, Live, Pending, Publishing'
        },
        featureState: {
          title: 'Feature Status',
          description: 'Upcoming, Active, Ended, Failed'
        },
        groupId: {
          title: 'Group ID',
          description: 'Freeformed'
        },
        manualApprovalStatus: {
          title: 'Manual Approval Status',
          description: 'Approved, Pending, Rejected'
        },
        permalink: {
          title: 'Permalink',
          description: 'Groupon permalink'
        },
        productId: {
          title: 'Product Id',
          description: 'ID'
        },
        productState: {
          title: 'Product Group State',
          description: 'Created, Review, Open, Rejected, Paused, Closed'
        },
        rejectionReason: {
          title: 'Rejection Reason',
          description: 'Freeformed'
        },
        reviewedBy: {
          title: 'Reviewed By',
          description: 'Contract Reviewed By'
        },
        source: {
          title: 'Source',
          description: 'Commercehub, Gateway'
        },
        title: {
          title: 'Title',
          description: 'Freeformed'
        },
        universalId: {
          title: 'Universal ID',
          description: 'UPC, EAN, ISBN, ITF or freeformed value'
        },
        vendorId: {
          title: 'Vendor',
          description: 'Name or ID'
        },
        vendorSKU: {
          title: 'SKU',
          description: 'Freeformed'
        }
      },
      placeholder: 'Begin typing to search',
      titles: {
        approvalStatus: 'Approval Status',
        autoApprovalStatus: 'Auto Approval Status',
        brand: 'Brand',
        categoryIds: 'Category',
        contractStatus: 'Contract Status',
        dealState: 'State',
        featureState: 'Feature Status',
        groupId: 'Group ID',
        manualApprovalStatus: 'Manual Approval Status',
        permalink: 'Permalink',
        productId: 'Product ID',
        productState: 'Product Group State',
        rejectionReason: 'Rejection Reason',
        reviewedBy: 'Reviewed By',
        source: 'Source',
        title: 'Title',
        universalId: 'Universal ID',
        vendorId: 'Vendor',
        vendorSKU: 'SKU'
      }
    },
    'vp-submit': {
      save: 'Save',
      saving: 'Saving'
    },
    'vp-switch': {
      on: 'YES',
      off: 'NO'
    }
  };
});
define('goods-gateway/market-pricing-deal/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/v0/market_pricing',

    pathForType: function pathForType() {
      return 'v1_deal_price_suggestions';
    },

    urlForQuery: function urlForQuery() {
      return this.namespace + '/v1_deal_price_suggestions';
    },

    urlForFindRecord: function urlForFindRecord(id) {
      return this.namespace + '/v1_deal_price_suggestions?dealUuid=' + id;
    }
  });
});
define('goods-gateway/market-pricing-deal/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  var model = _emberData['default'].Model.extend({
    uuid: attr('string'),
    categoryId: attr('string'),
    options: _modelFragments['default'].fragmentArray('market-pricing-deal/option')
  });

  exports['default'] = model;
});
define('goods-gateway/market-pricing-deal/option/context/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  exports['default'] = _modelFragments['default'].Fragment.extend({
    lowestCompetitorPrice: _modelFragments['default'].fragment('market-pricing-deal/option/price'),
    lowestCompetitorShippingPrice: _modelFragments['default'].fragment('market-pricing-deal/option/price'),
    lowestCompetitorUrl: attr('string')
  });
});
define('goods-gateway/market-pricing-deal/option/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  var model = _modelFragments['default'].Fragment.extend({
    context: _modelFragments['default'].fragment('market-pricing-deal/option/context'),
    inventoryProductId: attr('string'),
    priceSuggestionId: attr('string'),
    proposedSellPrice: _modelFragments['default'].fragment('market-pricing-deal/option/price')
  });

  exports['default'] = model;
});
define('goods-gateway/market-pricing-deal/option/price/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  exports['default'] = _modelFragments['default'].Fragment.extend({
    amount: attr('number'),
    currencyCode: attr('string')
  });
});
define('goods-gateway/market-pricing-deal/serializer', ['exports', 'goods-gateway/application/root-meta-serializer', 'goods-gateway/errors/not-found-error'], function (exports, _goodsGatewayApplicationRootMetaSerializer, _goodsGatewayErrorsNotFoundError) {
  exports['default'] = _goodsGatewayApplicationRootMetaSerializer['default'].extend({
    primaryKey: 'uuid',
    apiRoot: 'deals',
    metaKeys: ['strategies', 'total'],
    normalizeSingleResponse: function normalizeSingleResponse(store, primaryType, payload, recordId) {
      // if no price suggestions are found, market pricing returns a 200 with an empty
      // array of deals instead of a 404.
      if (payload.deals.length === 0) {
        throw new _goodsGatewayErrorsNotFoundError['default']('priceSuggestionDetail.noMorePriceSuggestions');
      }
      return this._super(store, primaryType, payload, recordId);
    }
  });
});
define('goods-gateway/mixins/approval-actions', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Mixin.create({
    flashMessages: _ember['default'].inject.service('flash-messages'),
    i18n: _ember['default'].inject.service('i18n'),

    actions: {
      approve: function approve(items, callback) {
        var _this = this;

        var promises = items.map(function (item) {
          var originalStatus = item.get('manualApprovalStatus');
          item.set('manualApprovalStatus', 'approved');
          var save = item.save();
          save['catch'](function () {
            item.set('manualApprovalStatus', originalStatus);
          });
          return save;
        });

        return _ember['default'].RSVP.all(promises).then(function () {
          _this.get('flashMessages').add({
            message: _this.get('i18n').t('inventory.index.approveSuccess'),
            type: 'alert-success'
          });

          if (callback) {
            callback();
          }
        });
      },

      reject: function reject(items, rejectReason, callback) {
        var _this2 = this;

        var promises = items.map(function (item) {
          var originalManualApprovalStatus = item.get('manualApprovalStatus');
          var originalManualRejectionReason = item.get('manualRejectionReason');
          item.set('manualApprovalStatus', 'rejected');
          item.set('manualRejectionReason', rejectReason);

          var save = item.save();
          save['catch'](function () {
            item.set('manualApprovalStatus', originalManualApprovalStatus);
            item.set('manualRejectionReason', originalManualRejectionReason);
          });
          return save;
        });

        _ember['default'].RSVP.all(promises).then(function () {
          _this2.get('flashMessages').add({
            message: _this2.get('i18n').t('inventory.index.rejectSuccess'),
            type: 'alert-success'
          });

          if (callback) {
            callback();
          }
        });
      }
    }
  });
});
define('goods-gateway/mixins/daterange', ['exports', 'ember', 'moment', 'goods-gateway/constants/timezones'], function (exports, _ember, _moment, _goodsGatewayConstantsTimezones) {

  var DATE_FORMAT = 'MM/DD/YYYY';
  exports['default'] = _ember['default'].Mixin.create({
    i18n: _ember['default'].inject.service('i18n'),

    init: function init() {
      var startDateKey = this.get('startDateKey') || 'startDate';
      var endDateKey = this.get('endDateKey') || 'endDate';
      _ember['default'].defineProperty(this, 'startDate', _ember['default'].computed('model.' + startDateKey, {
        get: function get() {
          if (this.get('model.' + startDateKey)) {
            return this._momentWithTimeStrippedOffInCST((0, _moment['default'])(this.get('model.' + startDateKey)));
          }
        },

        set: function set(_, value) {
          this.set('model.' + startDateKey, this._midnightCSTOnDate(value));
          return value;
        }
      }));

      _ember['default'].defineProperty(this, 'endDate', _ember['default'].computed('model.' + endDateKey, {
        get: function get() {
          if (this.get('model.' + endDateKey)) {
            return this._momentWithTimeStrippedOffInCST((0, _moment['default'])(this.get('model.' + endDateKey)));
          }
        },

        set: function set(_, value) {
          this.set('model.' + endDateKey, this._midnightCSTOnDate(value));
          return value;
        }
      }));

      _ember['default'].defineProperty(this, 'dateFormat', _ember['default'].computed(function () {
        return this.get('i18n').t('constants.dateFormat').toString();
      }));

      _ember['default'].defineProperty(this, 'minStartDate', _ember['default'].computed('startDate', function () {
        var nextDayInCST = (0, _moment['default'])().tz(_goodsGatewayConstantsTimezones.CST).add(1, 'days').startOf('day').format(DATE_FORMAT);
        var tomorrow = new Date(nextDayInCST);
        var startDate = this.get('startDate') || tomorrow;
        return new Date(Math.min(startDate, tomorrow));
      }));

      _ember['default'].defineProperty(this, 'minEndDate', _ember['default'].computed('startDate', function () {
        var nextDayInCST = (0, _moment['default'])().tz(_goodsGatewayConstantsTimezones.CST).add(1, 'days').startOf('day').format(DATE_FORMAT);
        var startDate = this.get('startDate') || new Date(nextDayInCST);
        return new Date((0, _moment['default'])(startDate).add(1, 'days'));
      }));

      _ember['default'].defineProperty(this, 'maxStartDate', _ember['default'].computed('endDate', function () {
        var defaultEndDate = new Date((0, _moment['default'])().tz(_goodsGatewayConstantsTimezones.CST).add(10, 'years'));
        var endDate = this.get('endDate') || defaultEndDate;
        return new Date((0, _moment['default'])(endDate).subtract(1, 'days'));
      }));

      this._super.apply(this, arguments);
    },

    _midnightCSTOnDate: function _midnightCSTOnDate(value) {
      return _moment['default'].tz((0, _moment['default'])(value).format('YYYY-MM-DD'), _goodsGatewayConstantsTimezones.CST).toDate();
    },

    _momentWithTimeStrippedOffInCST: function _momentWithTimeStrippedOffInCST(value) {
      return new Date((0, _moment['default'])(value).tz(_goodsGatewayConstantsTimezones.CST).format(DATE_FORMAT));
    }
  });
});
define('goods-gateway/mixins/delegator', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Mixin.create({
    init: function init() {
      this._super.apply(this, arguments);
      if (!this.constituents) {
        this.constituents = [];
      }
    },

    combineErrors: function combineErrors(base, errorHash) {
      for (var key in errorHash) {
        if (!errorHash.hasOwnProperty(key)) {
          continue;
        }
        if (!base[key]) {
          base[key] = [];
        }
        var errors = errorHash[key];

        if (_ember['default'].typeOf(errors) === 'array') {
          // ember validations' error struture is nested arrays with props
          base[key].pushObjects(errors);
          this.combineErrors(base[key], errors);
        }
      }

      return base;
    },

    errors: _ember['default'].computed('isValid', '_version', function () {
      var _this = this;

      return this.get('constituents').reduce(function (errors, constituent) {
        return _this.combineErrors(errors, constituent.get('errors'));
      }, {});
    }),

    get: function get(key) {
      if (this[key]) {
        return this._super.apply(this, arguments);
      }

      return this.getFromConstituents(key);
    },

    getFromConstituents: function getFromConstituents(key) {
      var uniqueValues = this.get('constituents').getEach(key).uniq();
      if (uniqueValues.length === 1) {
        return uniqueValues[0];
      }
    },

    isInvalid: _ember['default'].computed('constituents.@each.isInvalid', 'constituents.@each.hasInvalidChildren', function () {
      return this.get('constituents').isAny('isInvalid') || this.get('constituents').isAny('hasInvalidChildren');
    }),

    isValid: _ember['default'].computed.not('isInvalid'),

    set: function set(key, value) {
      if (this[key]) {
        return this._super.apply(this, arguments);
      }

      if (!this.get(key) && value === '') {
        return;
      }

      this.setOnConstituents(key, value);
      this.incrementProperty('_version');
    },

    setOnConstituents: function setOnConstituents(key, value) {
      this.get('constituents').forEach(function (constituent) {
        constituent.set(key, value);
      });
    },

    _version: 1 // errors are not reliably recomputing based on validity watchers
  });
});
define('goods-gateway/mixins/enterable', ['exports', 'ember'], function (exports, _ember) {

  var ENTER_KEY = 13;

  exports['default'] = _ember['default'].Mixin.create({
    keyPress: function keyPress(e) {
      if (e.which === ENTER_KEY) {
        this.send('entered');
        return false;
      }
    }
  });
});
define('goods-gateway/mixins/escapable', ['exports', 'ember'], function (exports, _ember) {

  var escapeKeyCode = 27;

  exports['default'] = _ember['default'].Mixin.create({
    // args
    closeable: true,

    // lifecycle
    didInsertElement: function didInsertElement() {
      var listener = _ember['default'].run.bind(this, this._escapableKeyUp);
      this._escapableListeners.pushObject(listener);
      _ember['default'].$(document).on('keyup', listener);
      this._super.apply(this, arguments);
    },

    willDestroyElement: function willDestroyElement() {
      this.get('_escapableListeners').forEach(function (listener) {
        _ember['default'].$(document).off('keyup', null, listener);
      });
      this._super.apply(this, arguments);
    },

    // helpers
    _escapableKeyUp: function _escapableKeyUp(event) {
      if (!this.get('closeable')) {
        return;
      }
      var keyCode = event.keyCode || event.which;
      if (keyCode === escapeKeyCode) {
        this.send('close');
      }
    },

    _escapableListeners: []
  });
});
define('goods-gateway/mixins/field', ['exports', 'ember', 'ember-simple-uuid'], function (exports, _ember, _emberSimpleUuid) {
  exports['default'] = _ember['default'].Mixin.create({
    i18n: _ember['default'].inject.service('i18n'),

    // args
    softRequired: false,
    explicitErrors: null,
    errorPath: null,
    immediateErrors: false,
    validityModel: null,
    checkBlankValues: true,
    tRoot: null,
    tKey: null,
    t: null,

    // attributes
    classNameBindings: ['showError:error', 'required'],

    // events
    focusIn: function focusIn() {
      this.set('isFocused', true);
    },

    focusOut: function focusOut() {
      this.set('hasBeenFocused', true);
      this.set('isFocused', false);
    },

    isFocused: false,
    placeholderText: _ember['default'].computed('isFocused', function () {
      if (this.get('isFocused')) {
        return this.get('placeholder') || '';
      } else {
        return '';
      }
    }),

    keyPress: function keyPress() {
      var maxlength = this.get('maxlength');
      if (!maxlength) {
        return true;
      }

      var inputValue = this.get('value') || "";
      return inputValue.length < maxlength;
    },

    // lifecycle
    init: function init() {
      _ember['default'].defineProperty(this, 'value', _ember['default'].computed('model.' + this.get('key'), {
        get: function get() {
          var modelReference = this.get('model');
          var fieldName = this.get('key');
          if (!modelReference) {
            return null;
          }
          if (!fieldName) {
            return null;
          }
          return modelReference.get(fieldName);
        },

        set: function set(_key, value) {
          var modelReference = this.get('model');
          var fieldName = this.get('key');
          modelReference.set(fieldName, value);
          return value;
        }
      }));

      this.get('errorModel'); // make sure this triggers when using validityModel
      this._super.apply(this, arguments);
    },

    didReceiveAttrs: function didReceiveAttrs() {
      var inputElementId = this.get('inputId') || this.get('field') || (0, _emberSimpleUuid['default'])();
      this.set('inputElementId', inputElementId);
    },

    // helpers
    inputElementId: null,
    hasBeenFocused: false,

    errorModel: _ember['default'].computed.or('validityModel', 'model'),

    field: _ember['default'].computed(function () {
      var key = this.get('key');
      if (!key) {
        return false;
      }
      return key.replace(".", "_");
    }),

    isValid: _ember['default'].computed.alias('errorModel.isValid'),

    label: _ember['default'].computed('required', 'softRequired', function () {
      var fieldTranslation = this.get('t');
      if (_ember['default'].isBlank(fieldTranslation)) {
        var key = this.get('tKey') || this.get('key');
        var translationPath = this.get('tRoot') + '.' + key;
        fieldTranslation = this.get('i18n').t(translationPath);
      }

      if (this.get('required') || this.get('softRequired')) {
        return this.get('i18n').t('forms.required', { label: fieldTranslation });
      } else {
        return fieldTranslation;
      }
    }),

    currentModelErrors: _ember['default'].computed('value', 'isValid', 'explicitErrors', 'errorModel.validators.@each.isValid', function () {
      var modelReference = undefined;
      var errorKey = this.get('errorKey') ? this.get('errorKey') : this.get('key');

      if (this.get('explicitErrors')) {
        modelReference = this.get('explicitErrors');
        if (modelReference) {
          return modelReference.getWithDefault(errorKey, []);
        }
      } else {
        modelReference = this.get('errorModel');
        if (modelReference) {
          // TODO fix the default not catching for ember data models without ember validations mixed in
          return modelReference.getWithDefault('errors.' + errorKey, []);
        }
      }

      return [];
    }),

    errors: _ember['default'].computed('value', 'isValid', 'currentModelErrors.@each', 'explicitErrors', function () {
      var value = this.get('value');
      var isBlank = _ember['default'].isBlank(value);
      var isRequired = this.get('required') || this.get('softRequired');
      var currentModelErrors = this.get('currentModelErrors');
      var presenceError = this.get('i18n').t('mixins.field.validations.presence');

      // Opted to blindly accept blank values (doesn't this conflict with required?)
      if (!this.get('checkBlankValues') && isBlank) {
        return;
      }

      // Remove any existing presenceError
      for (var i = 0; i < currentModelErrors.length; i++) {
        if (currentModelErrors[i].string === presenceError.string) {
          currentModelErrors.removeAt(i);
          break;
        }
      }

      if (isRequired && isBlank && !currentModelErrors.length) {
        currentModelErrors.pushObject(presenceError);
      }

      return currentModelErrors.length ? currentModelErrors : undefined;
    }),

    state: _ember['default'].computed('hasBeenFocused', 'immediateErrors', 'errors', function () {
      var errors = this.get('errors');
      if (!errors) {
        return;
      }

      if (!this.get('immediateErrors') && !this.get('hasBeenFocused')) {
        return 'alert';
      } else {
        return 'error';
      }
    }),

    showError: _ember['default'].computed.equal('state', 'error'),

    isFilled: _ember['default'].computed('value', function () {
      var value = this.get('value');
      if (value || _ember['default'].typeOf(value) === 'number') {
        return true;
      } else {
        return false;
      }
    })
  });
});
define('goods-gateway/mixins/gateway-route', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Mixin.create({
    i18n: _ember['default'].inject.service('i18n'),

    setupController: function setupController() {
      var _this = this;

      this._super.apply(this, arguments);
      var translationRoot = 'views.' + this.get('routeName') + '.';
      this.controller.set('translationRoot', translationRoot);
      this.set('t', function (key) {
        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

        return _this.get('i18n').t('' + translationRoot + key, options);
      });
    }
  });
});
define('goods-gateway/mixins/params', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Mixin.create({
    // hooks
    activate: function activate() {
      this._super.apply(this, arguments);
      if (_ember['default'].isPresent(this.get('defaultParamValues'))) {
        return;
      }

      var controller = this.controllerFor(this.routeName);
      var defaultParamValues = {};
      Object.keys(this.get('queryParams')).forEach(function (key) {
        defaultParamValues[key] = controller.get(key);
      });
      this.set('defaultParamValues', defaultParamValues);
    },

    resetController: function resetController(controller, isExiting) {
      var _this = this;

      if (isExiting) {
        Object.keys(this.get('queryParams')).forEach(function (key) {
          var defaultValue = _this.get('defaultParamValues.' + key);
          _this.get('controller').set(key, defaultValue);
        });
      }

      this._super.apply(this, arguments);
    },

    // helpers
    defaultParamValues: undefined
  });
});
define('goods-gateway/mixins/product-state', ['exports', 'ember', 'goods-gateway/utils/ember-helpers'], function (exports, _ember, _goodsGatewayUtilsEmberHelpers) {
  exports['default'] = _ember['default'].Mixin.create({
    // required
    product: null,
    init: function init() {
      this._super.apply(this, arguments);
      this.get('itemOffers');
      this.get('itemImages');
    },

    // helpers
    isDirty: _ember['default'].computed('product.hasDirtyAttributes', 'product.items.@each.hasDirtyAttributes', 'product.attachments.@each.hasDirtyAttributes', 'itemOffers.@each.hasDirtyAttributes', 'itemImages.@each.hasDirtyAttributes', function () {
      return (0, _goodsGatewayUtilsEmberHelpers.isDirty)(this.get('product'));
    }),

    itemImages: _ember['default'].computed('product.items.@each.images', function () {
      return this.get('product.items').reduce(function (images, item) {
        item.get('images').forEach(function (image) {
          images.pushObject(image);
        });
        return images;
      }, []);
    }),

    itemOffers: _ember['default'].computed('product.items.@each.offers', function () {
      return this.get('product.items').reduce(function (offers, item) {
        item.get('offers').forEach(function (offer) {
          offers.pushObject(offer);
        });
        return offers;
      }, []);
    })
  });
});
define('goods-gateway/mixins/restricted', ['exports', 'ember', 'goods-gateway/utils/can'], function (exports, _ember, _goodsGatewayUtilsCan) {
  exports['default'] = _ember['default'].Mixin.create({
    // dependencies
    authorization: _ember['default'].inject.service('authorization'),

    //args
    authorizationConfig: null,

    // hooks
    beforeModel: function beforeModel(transition) {
      var options = { allowExternal: this.get('authorizationConfig').allowExternal };
      var routeAccessible = (0, _goodsGatewayUtilsCan['default'])(this.get('authorization'), this.get('authorizationConfig.requiredPermissions'), options);

      if (routeAccessible) {
        this._super.apply(this, arguments);
      } else {
        transition.abort();
        this.transitionTo('index');
      }
    },

    init: function init() {
      this._super.apply(this, arguments);

      var defaultAuthorizationConfig = {
        allowExternal: false,
        requiredPermissions: []
      };

      var config = _ember['default'].assign(defaultAuthorizationConfig, this.get('authorizationConfig'));
      this.set('authorizationConfig', config);
    }
  });
});
// A route mixin to keep secrets from users we don't like
define('goods-gateway/mixins/search', ['exports', 'ember'], function (exports, _ember) {
  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }

  exports['default'] = _ember['default'].Mixin.create({
    ajax: _ember['default'].inject.service('ajax'),
    authorization: _ember['default'].inject.service(),
    slimMRTs: _ember['default'].inject.service('slim-mrts'),
    searchStorage: _ember['default'].inject.service('search-storage'),

    // Normalizes query params to search params
    searchParamOverrides: {},

    activeSearchEngines: _ember['default'].computed('_searchEngineInstances.@each.availableToUser', function () {
      var output = [];

      var instances = this.get('_searchEngineInstances');
      for (var type in instances) {
        if (instances.hasOwnProperty(type)) {
          var instance = instances.get(type);
          if (instance.get('availableToUser')) {
            output.push(instance);
          }
        }
      }

      return output;
    }),

    // Take the enabled searches and configure their query params, which may be remapped by searchParamOverrides
    initRouteSearch: function initRouteSearch() {
      this._searchEngineInstances = _ember['default'].Object.create();
      var searchConfig = this.get('searchConfig');

      for (var searchKey in searchConfig) {
        // Init query params
        var queryKey = this._searchKeyToQueryKey(searchKey);
        this.get('queryParams')[queryKey] = { refreshModel: true };
        if (searchKey === 'categoryIds' || searchKey === 'featureState') {
          this.get('queryParams')[queryKey].type = 'array';
        }

        // Init search engines
        this.createSearchEngine(searchKey, searchConfig[searchKey]);
      }
    },

    createSearchEngine: function createSearchEngine(type, config) {
      config = config || {};

      if (type === 'categoryIds') {
        config.categories = this.get('slimMRTs').promise;
      }

      var module = type.dasherize();
      var searchClass = this.container.lookup('search:' + module);
      var searchEngine = searchClass.create({ config: config });
      this._searchEngineInstances.set(type, searchEngine);
      return searchEngine;
    },

    getSearchEngine: function getSearchEngine(type) {
      return this._searchEngineInstances.get(type);
    },

    getSearchFilters: function getSearchFilters(queryParams) {
      var _this = this;

      var output = this.get('activeSearchEngines').map(function (searchEngine) {
        var key = searchEngine.get('groupName');
        var queryKey = _this._searchKeyToQueryKey(key);
        var value = queryParams[queryKey];

        if (_ember['default'].isBlank(value)) {
          return;
        }

        if (_ember['default'].isArray(value)) {
          // Multiple values means multiple results
          return value.uniq().map(function (v) {
            return searchEngine.makeResult(v);
          });
        }

        return searchEngine.makeResult(value);
      });

      return _ember['default'].RSVP.all(output).then(function (results) {
        var _ref;

        // Don't include blank searches
        results = results.compact();
        // Flatten, because some searches can have multiple results, eg. categoryIds
        return (_ref = []).concat.apply(_ref, _toConsumableArray(results));
      });
    },

    // Add search criteria to current query params, returning new query params
    addSearchParam: function addSearchParam(criteria, currentParams) {
      var _this2 = this;

      var newParams = {};

      this.get('activeSearchEngines').forEach(function (searchEngine) {
        var searchKey = searchEngine.get('groupName');
        var queryKey = _this2._searchKeyToQueryKey(searchKey);
        var searchValue = criteria[searchKey];

        if (searchValue) {
          if (searchKey === 'categoryIds' || searchKey === 'featureState') {
            // TODO: make above line detect array-capable search engines instead
            // Get current value and add to it
            var newArrayValue = _ember['default'].copy(currentParams[queryKey] || []);
            if (!_ember['default'].isArray(newArrayValue)) {
              newArrayValue = [newArrayValue];
            }
            newArrayValue.push(searchValue);
            newParams[queryKey] = newArrayValue.uniq();
          } else {
            newParams = {};
            newParams[queryKey] = searchValue;
          }
        }
      });
      return newParams;
    },

    removeAllSearchParams: function removeAllSearchParams(currentParams) {
      var _this3 = this;

      var newParams = _ember['default'].copy(currentParams, true);

      this.get('activeSearchEngines').forEach(function (searchEngine) {
        var searchKey = searchEngine.get('groupName');
        var queryKey = _this3._searchKeyToQueryKey(searchKey);
        newParams[queryKey] = undefined;
      });

      return newParams;
    },

    removeSearchParam: function removeSearchParam(searchKey, searchValue, currentParams) {
      var newParams = {};

      // Get current param value
      var queryKey = this._searchKeyToQueryKey(searchKey);
      var currentValue = currentParams[queryKey];
      newParams[queryKey] = currentValue;

      if (_ember['default'].isArray(currentValue)) {
        // Remove from array
        newParams[queryKey] = currentValue.reject(function (v) {
          return v === searchValue;
        });
        // Set undefined when last value is removed from array
        if (!newParams[queryKey].length) {
          newParams[queryKey] = undefined;
        }
      } else {
        newParams[queryKey] = undefined;
      }

      return newParams;
    },

    // _searchEngineNameToParam
    _searchKeyToQueryKey: function _searchKeyToQueryKey(searchKey) {
      return _ember['default'].getWithDefault(this.get('searchParamOverrides'), searchKey, searchKey);
    },

    // _paramToSearchEngineName
    _queryKeyToSearchKey: function _queryKeyToSearchKey(queryKey) {
      // Invert keys/values of mappings, because we're going from query keys to search keys instead
      var invertedMappings = {};
      var uninvertedMappings = this.get('searchParamOverrides');
      for (var k in uninvertedMappings) {
        if (uninvertedMappings.hasOwnProperty(k)) {
          invertedMappings[uninvertedMappings[k]] = k;
        }
      }

      return _ember['default'].getWithDefault(invertedMappings, queryKey, queryKey);
    },

    actions: {
      restoreSearch: function restoreSearch(id) {
        var queryParams = this.get('queryParams');
        var search = this.get('searchStorage').find(id);
        var savedParams = search.get('queryParams');
        var params = {};

        for (var key in queryParams) {
          params[key] = savedParams[this._queryKeyToSearchKey(key)];
        }

        this.transitionTo({ queryParams: params });
      },

      saveSearch: function saveSearch(name) {
        var params = this.paramsFor(this.routeName);
        var searchParams = {};
        for (var key in params) {
          searchParams[this._queryKeyToSearchKey(key)] = params[key];
        }

        var search = _ember['default'].Object.create({
          name: name,
          queryParams: searchParams
        });
        this.get('searchStorage').save(search);
      }
    }
  });
});
define('goods-gateway/mixins/sparse', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Mixin.create({
    serialize: function serialize(snapshot, options) {
      var data = this._super(snapshot, options);

      var json = {};

      if (data.id) {
        json.id = data.id;
      }

      var changedAttributes = snapshot.changedAttributes();
      for (var field in changedAttributes) {
        json[field] = data[field];
      }

      return json;
    }
  });
});
// A mixin for serializers to only send changed attributes.
//
// This comes with one main caveat that if you're mixing this into a model that has a default value,
// ember will always consider it dirty, e.g. given a model with something like this:
//
// export default Model.extend({
//   bankInfo: MF.fragment('vendor/bankInfo', { defaultValue: function() { return {}; } })
// })
//
// and you do something like this:
//
// vendor.findRecord(id).then((vendor) => { vendor.save(); });
//
// Ember thinks all the bankInfo attributes are dirty, making this mixin pointless.
define('goods-gateway/models/attribute-delegate', ['exports', 'ember', 'goods-gateway/mixins/delegator'], function (exports, _ember, _goodsGatewayMixinsDelegator) {
  exports['default'] = _ember['default'].Object.extend(_goodsGatewayMixinsDelegator['default'], {
    getFromConstituents: function getFromConstituents(key) {
      var attributesAcrossItems = this.get('constituents').map(function (item) {
        return item.get('attributes').findBy('attrNameId', key) || {};
      });

      var uniqueValues = attributesAcrossItems.mapBy('attrValueId').uniq();
      if (uniqueValues.length === 1) {
        return uniqueValues[0];
      }
    },

    getLocalizedContentValue: function getLocalizedContentValue(attrNameId, locale) {
      var values = this.get('constituents').reduce(function (values, item) {
        var attribute = item.get('attributes').findBy('attrNameId', attrNameId);
        if (!attribute) {
          values.pushObject(null);
          return values;
        }

        var localizedContent = attribute.get('localizedContents').findBy('locale', locale);
        if (!localizedContent) {
          values.pushObject(null);
          return values;
        }

        values.pushObject(localizedContent.get('attrValue'));
        return values;
      }, []);

      if (values.uniq().length === 1) {
        return values[0];
      }
    },

    removeLocalizedContent: function removeLocalizedContent(attrNameId, locale) {
      return this.get('constituents').map(function (item) {
        var attribute = item.get('attributes').findBy('attrNameId', attrNameId);
        var localizedContent = attribute.get('localizedContents').findBy('locale', locale);
        if (localizedContent) {
          attribute.get('localizedContents').removeObject(localizedContent);
        }
      });
    },

    setLocalizedContent: function setLocalizedContent(attrNameId, locale, content) {
      this._ensureAttribute(attrNameId);
      this._findOrCreateLocalizedContents(attrNameId, locale).forEach(function (localizedContent) {
        localizedContent.set('attrValue', content);
      });
    },

    setOnConstituents: function setOnConstituents(key, value) {
      if (_ember['default'].isBlank(value)) {
        this.get('constituents').forEach(function (item) {
          var newSet = item.get('attributes').rejectBy('attrNameId', key);
          item.set('attributes', newSet);
        });
        return;
      }

      this._ensureAttribute(key);
      this._getAttributes(key).forEach(function (attribute) {
        attribute.set('attrValueId', value);
      });
    },

    _getAttributes: function _getAttributes(attrNameId) {
      return this.get('constituents').map(function (item) {
        return item.get('attributes').findBy('attrNameId', attrNameId);
      });
    },

    _findOrCreateLocalizedContents: function _findOrCreateLocalizedContents(attrNameId, locale) {
      return this.get('constituents').map(function (item) {
        var attribute = item.get('attributes').findBy('attrNameId', attrNameId);
        var localizedContent = attribute.get('localizedContents').findBy('locale', locale);
        if (!localizedContent) {
          localizedContent = attribute.get('localizedContents').createFragment({
            locale: locale
          });
        }
        return localizedContent;
      });
    },

    _ensureAttribute: function _ensureAttribute(attrNameId) {
      this.get('constituents').forEach(function (item) {
        var existingAttribute = item.get('attributes').findBy('attrNameId', attrNameId);
        if (existingAttribute) {
          return;
        }
        item.get('attributes').createFragment({
          attrNameId: attrNameId
        });
      });
    }
  });
});
define('goods-gateway/models/bulk-job', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Object.extend({
    args: {},
    action: null,
    response: null,

    details: _ember['default'].computed('args', function () {
      return JSON.stringify(this.get('args'));
    }),

    message: _ember['default'].computed('response', function () {
      if (!this.get('response')) {
        return '';
      }
      return JSON.stringify(this.get('response'));
    }),

    perform: function perform() {
      var _this = this;

      var promise = this.action();

      promise.then(function (response) {
        _this.set('response', response);
      })['catch'](function (response) {
        _this.set('response', response);
      });

      return promise;
    }
  });
});
define('goods-gateway/models/deal-boost', ['exports', 'ember', 'goods-gateway/models/bulk-job'], function (exports, _ember, _goodsGatewayModelsBulkJob) {
  exports['default'] = _goodsGatewayModelsBulkJob['default'].extend({
    dealIdLookup: _ember['default'].inject.service(),
    dealBooster: _ember['default'].inject.service(),

    args: _ember['default'].Object.create({
      permalinkOrId: null,
      type: null
    }),

    action: function action() {
      var _this = this;

      return this.get('dealIdLookup').fetch(this.get('args.permalinkOrId'), true).then(function (dealId) {
        var type = _this.get('args.type');
        if (type === 'boost') {
          return _this.get('dealBooster').boost(dealId);
        }
        if (type === 'deboost') {
          return _this.get('dealBooster').deboost(dealId);
        }
      });
    }
  });
});
define('goods-gateway/models/deal-category-update', ['exports', 'ember', 'goods-gateway/models/bulk-job'], function (exports, _ember, _goodsGatewayModelsBulkJob) {
  exports['default'] = _goodsGatewayModelsBulkJob['default'].extend({
    dealIdLookup: _ember['default'].inject.service(),
    dealTagger: _ember['default'].inject.service(),

    args: _ember['default'].Object.create({
      permalinkOrId: null,
      type: null,
      tags: []
    }),

    action: function action() {
      var _this = this;

      return this.get('dealIdLookup').fetch(this.get('args.permalinkOrId'), true).then(function (dealId) {
        var method = _this.get('_typeToHttpMethod')[_this.get('args.type')];
        var promises = _this.get('args.tags').map(function (tag) {
          return _this.get('dealTagger').updateTag(dealId, method, tag);
        });
        return _ember['default'].RSVP.all(promises);
      });
    },

    _typeToHttpMethod: {
      addCategories: 'PUT',
      removeCategories: 'DELETE'
    }
  });
});
define('goods-gateway/models/delegate', ['exports', 'ember', 'goods-gateway/mixins/delegator'], function (exports, _ember, _goodsGatewayMixinsDelegator) {
  exports['default'] = _ember['default'].Object.extend(_goodsGatewayMixinsDelegator['default'], {});
});
define('goods-gateway/models/generator', ['exports', 'ember', 'ember-simple-uuid'], function (exports, _ember, _emberSimpleUuid) {

  var Generator = _ember['default'].Object.extend({});

  Generator.reopenClass({
    addAttributeToItems: function addAttributeToItems(items, attribute) {
      items.forEach(function (item) {
        if (!item.get('attributes').findBy('attrNameId', attribute.attrNameId)) {
          item.get('attributes').createFragment(attribute);
        }
      });
    },

    createItem: function createItem(items, category) {
      var attributes = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];

      var defaults = {
        id: (0, _emberSimpleUuid['default'])(),
        brand: {
          name: null
        },
        category: category,
        regionalizedContents: [{
          countryCode: 'US'
        }]
      };

      var existingItem = items.getWithDefault('firstObject');
      var item = items.createRecord(defaults);
      if (existingItem) {
        item.set('brand.name', existingItem.get('brand.name'));
        item.set('manufacturer', existingItem.get('manufacturer'));
      }

      // gpapi is currently wired to stores, which will use the same id for the item as the offer because
      // they're collapsed in stores as an 'option'
      var offer = item.get('offers').createRecord({
        id: item.get('id')
      });

      offer.get('fulfillmentOptions').createFragment({});

      attributes.forEach(function (attribute) {
        item.get('attributes').createFragment(attribute);
      });

      return item;
    },

    deleteItemsWithAttribute: function deleteItemsWithAttribute(items, attribute) {
      var _this = this;

      items.toArray().forEach(function (item) {
        var attr = _this.getItemAttribute(item, attribute);
        if (attr) {
          item.deleteRecord();
        }
      });
    },

    getItemAttribute: function getItemAttribute(item, attribute) {
      return item.get('attributes').find(function (attr) {
        if (attribute.attrValueId) {
          return attribute.attrValueId === attr.get('attrValueId');
        }
        return attribute.localizedContents[0].attrValue === attr.get('localizedContents.firstObject.attrValue');
      });
    },

    removeAttributeFromItems: function removeAttributeFromItems(items, attribute) {
      var _this2 = this;

      items.forEach(function (item) {
        var attr = _this2.getItemAttribute(item, attribute);

        if (attr) {
          item.get('attributes').removeObject(attr);
        }
      });
    }
  });

  exports['default'] = Generator;
});
define('goods-gateway/models/product-mrt-update', ['exports', 'ember', 'goods-gateway/models/bulk-job'], function (exports, _ember, _goodsGatewayModelsBulkJob) {

  var defaultCategoryName = 'ch-category';
  var defaultCategoryDepth = 4;

  exports['default'] = _goodsGatewayModelsBulkJob['default'].extend({
    productFetcher: _ember['default'].inject.service(),
    request: _ember['default'].inject.service(),

    args: _ember['default'].Object.create({
      permalinkOrId: null,
      tag: null
    }),

    action: function action() {
      var _this = this;

      return this.get('productFetcher').fetch(this.get('args.permalinkOrId')).then(function (product) {
        product.categories_prune = 1;
        product.categories = [{
          category_name: defaultCategoryName,
          category_depth: defaultCategoryDepth,
          category_uuid: _this.get('args.tag')
        }];
        return _this.get('request').PUT('/goods-gateway/proxy/gpapi/v0/goods_stores/products/' + product.uuid, { data: { product: product } });
      });
    }
  });
});
define('goods-gateway/models/product-status-update', ['exports', 'ember', 'goods-gateway/models/bulk-job'], function (exports, _ember, _goodsGatewayModelsBulkJob) {
  exports['default'] = _goodsGatewayModelsBulkJob['default'].extend({
    productFetcher: _ember['default'].inject.service(),
    request: _ember['default'].inject.service(),
    productPauser: _ember['default'].inject.service(),

    args: _ember['default'].Object.create({
      permalinkOrId: null,
      type: null
    }),

    action: function action() {
      var _this = this;

      return this.get('productFetcher').fetch(this.get('args.permalinkOrId')).then(function (product) {
        return _this.get('productPauser').update(product.uuid, _this.get('args.type'), true);
      });
    }
  });
});
define('goods-gateway/models/search-result', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Object.extend({
    displayValue: null,
    group: null,
    identifier: null,
    translationKeys: null,
    selected: false,
    value: null
  });
});
define('goods-gateway/models/search/approval-status', ['exports', 'goods-gateway/models/search/base', 'goods-gateway/constants/approval-statuses'], function (exports, _goodsGatewayModelsSearchBase, _goodsGatewayConstantsApprovalStatuses) {
  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    availableInternally: false,
    groupName: 'approvalStatus',

    makeResult: function makeResult(value) {
      var result = this._super.apply(this, arguments);
      result.set('displayValue', null);
      result.set('translationKeys', { value: 'constants.approvalStatuses.' + value });
      return result;
    },

    process: function process(value) {
      var _this = this;

      this.clearResults();

      _goodsGatewayConstantsApprovalStatuses.APPROVAL_STATUSES.forEach(function (status) {
        if (status.toLowerCase().match(value.toLowerCase())) {
          _this.addResult(status);
        }
      });
    }
  });
});
define('goods-gateway/models/search/auto-approval-status', ['exports', 'goods-gateway/models/search/base', 'goods-gateway/constants/approval-statuses'], function (exports, _goodsGatewayModelsSearchBase, _goodsGatewayConstantsApprovalStatuses) {

  var nonalphanumeric = /[^a-zA-Z0-9]+/g;

  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    availableExternally: false,
    groupName: 'autoApprovalStatus',

    makeResult: function makeResult(value) {
      var result = this._super.apply(this, arguments);
      result.set('displayValue', null);
      result.set('translationKeys', { value: 'constants.autoApprovalStatuses.' + value });
      return result;
    },

    process: function process(value) {
      var _this = this;

      this.clearResults();

      _goodsGatewayConstantsApprovalStatuses.AUTO_APPROVAL_STATUSES.forEach(function (status) {
        var displayStatus = _this.get('i18n').t('constants.autoApprovalStatuses.' + status).string.replace(nonalphanumeric, '').toLowerCase();
        var val = value.replace(nonalphanumeric, '').toLowerCase();
        if (displayStatus.match(val)) {
          _this.addResult(status);
        }
      });
    }
  });
});
define('goods-gateway/models/search/base', ['exports', 'ember', 'goods-gateway/models/search-result', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayModelsSearchResult, _goodsGatewayConfigEnvironment) {
  exports['default'] = _ember['default'].Object.extend({
    authorization: _ember['default'].inject.service(),
    i18n: _ember['default'].inject.service('i18n'),

    results: [],
    numResults: _ember['default'].computed.alias('results.length'),
    groupName: null,
    availableInternally: true,
    availableExternally: true,
    availableWithFeatureFlag: null,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('results', []);
    },

    availableToUser: _ember['default'].computed('availableExternally', 'availableInternally', 'availableWithFeatureFlag', function () {
      if (!this.get('availableInternally') && this.get('authorization').can('read_default')) {
        return false;
      }

      if (!this.get('availableExternally') && this.get('authorization.isExternal')) {
        return false;
      }

      var flag = this.get('availableWithFeatureFlag');
      if (flag && !_goodsGatewayConfigEnvironment['default'].featureFlags[flag]) {
        return false;
      }

      return true;
    }),

    addResult: function addResult(value) {
      this.get('results').addObject(this.makeResult(value));
    },

    clearResults: function clearResults() {
      this.get('results').clear();
    },

    makeResult: function makeResult(value) {
      return _goodsGatewayModelsSearchResult['default'].create({
        group: this.get('groupName'),
        value: value,
        displayValue: value
      });
    },

    process: function process(value) {
      this.clearResults();
      this.addResult(value);
    }
  });
});
define('goods-gateway/models/search/brand', ['exports', 'ember', 'goods-gateway/models/search/base'], function (exports, _ember, _goodsGatewayModelsSearchBase) {

  var MAX_RESULTS = 5;

  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    gpapi: _ember['default'].inject.service('gpapi'),
    isLoading: false,
    currentBrandSearch: null,
    groupName: 'brand',

    process: function process(value) {
      var _this = this;

      this.clearResults();
      this.set('isLoading', true);

      var query = {
        byName: value,
        country: this.get('i18n').t('vp-x-search.instructions.brand.defaultCountry').toString()
      };

      var brandSearch = this.get('gpapi').request('v1.brands.typeahead_search.typeahead_search', query);
      this.set('currentBrandSearch', brandSearch);

      return brandSearch.then(function (response) {
        if (_this.get('currentBrandSearch') !== brandSearch) {
          // Debounce: abort if a new search is in flight
          return;
        }
        response.data.slice(0, MAX_RESULTS).forEach(function (brand) {
          _this.addResult(brand);
        });
        _this.set('isLoading', false);
      }, function () {
        _this.set('isLoading', false);
      });
    }
  });
});
define('goods-gateway/models/search/category-ids', ['exports', 'ember', 'goods-gateway/models/search/base', 'goods-gateway/constants/uuid-regex'], function (exports, _ember, _goodsGatewayModelsSearchBase, _goodsGatewayConstantsUuidRegex) {

  var CATEGORY_SEARCH_SEPARATOR = '|';
  var MAX_RESULTS = 10;

  var findMatches = function findMatches(regex, categories) {
    var matches = [];
    for (var i = 0; i < categories.length; i++) {
      var category = categories[i];
      if (category.name.toLowerCase().match(regex)) {
        matches.push(category);
      }

      if (matches.length >= MAX_RESULTS) {
        return matches;
      }
    }

    return matches;
  };

  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    categories: [],
    groupName: 'categoryIds',

    init: function init() {
      var _this = this;

      this._super.apply(this, arguments);

      var categories = this.get('config.categories');
      if (categories) {
        categories.then(function (categories) {

          if (_this.get('config.hideLeaves')) {
            categories = categories.filterBy('hasChildren');
          }

          if (_this.get('config.hideNonLeaves')) {
            categories = categories.rejectBy('hasChildren');
          }

          _this.set('categories', categories);
        });
      }
    },

    getCategoryName: function getCategoryName(id) {
      var output = undefined;
      this.get('categories').forEach(function (category) {
        if (category.id === id) {
          output = category.name;
        }
      });
      return output;
    },

    makeResult: function makeResult(value) {
      var result = this._super.apply(this, arguments);
      var name = this.getCategoryName(value);

      if (name) {
        result.set('displayValue', name);
      }

      return result;
    },

    process: function process(value) {
      var _this2 = this;

      this.clearResults();
      if (_ember['default'].isBlank(value)) {
        return;
      }

      if (value.match(_goodsGatewayConstantsUuidRegex['default'])) {
        var category = this.get('categories').findBy('id', value);
        if (category) {
          this.addResult(category.id);
        }
        return;
      }

      var regexPieces = value.split(CATEGORY_SEARCH_SEPARATOR).map(function (segment) {
        if (segment.match(/^\s*$/)) {
          return '[^\\' + CATEGORY_SEARCH_SEPARATOR + ']*';
        } else {
          return '\\s*' + segment.toLowerCase().split(/\s+/).join('.*') + '\\s*';
        }
      });

      var regex = new RegExp(regexPieces.join('\\' + CATEGORY_SEARCH_SEPARATOR));
      findMatches(regex, this.get('categories')).map(function (result) {
        _this2.addResult(result.id);
      });
    }
  });
});
define('goods-gateway/models/search/contract-status', ['exports', 'goods-gateway/models/search/base', 'goods-gateway/constants/contract-statuses'], function (exports, _goodsGatewayModelsSearchBase, _goodsGatewayConstantsContractStatuses) {

  var nonalphanumeric = /[^a-zA-Z0-9]+/g;

  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    groupName: 'contractStatus',

    makeResult: function makeResult(value) {
      var result = this._super.apply(this, arguments);
      result.set('displayValue', null);
      result.set('translationKeys', { value: 'constants.contractStatuses.' + value });
      return result;
    },

    process: function process(value) {
      var _this = this;

      this.clearResults();

      _goodsGatewayConstantsContractStatuses.CONTRACT_STATUSES.forEach(function (status) {
        if (status.replace(nonalphanumeric, '').toLowerCase().match(value.replace(nonalphanumeric, '').toLowerCase())) {
          _this.addResult(status);
        }
      });
    }
  });
});
define('goods-gateway/models/search/deal-state', ['exports', 'goods-gateway/models/search/base', 'goods-gateway/constants/deal-states'], function (exports, _goodsGatewayModelsSearchBase, _goodsGatewayConstantsDealStates) {
  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    availableWithFeatureFlag: 'includeDealStateInInventorySearch',
    groupName: 'dealState',

    makeResult: function makeResult(value) {
      var result = this._super.apply(this, arguments);
      result.set('displayValue', null);
      result.set('translationKeys', { value: 'constants.dealStates.' + value });
      return result;
    },

    process: function process(value) {
      var _this = this;

      this.clearResults();

      _goodsGatewayConstantsDealStates['default'].forEach(function (state) {
        if (state.toLowerCase().match(value.toLowerCase())) {
          _this.addResult(state);
        }
      });
    }
  });
});
define('goods-gateway/models/search/feature-state', ['exports', 'goods-gateway/models/search/base', 'goods-gateway/models/search-result', 'goods-gateway/constants/feature-states'], function (exports, _goodsGatewayModelsSearchBase, _goodsGatewayModelsSearchResult, _goodsGatewayConstantsFeatureStates) {
  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    isLoading: false,
    groupName: 'featureState',

    getDisplayValue: function getDisplayValue(state) {
      return this.get('i18n').t('constants.featureStates.' + state).string;
    },

    process: function process(value) {
      this.clearResults();

      for (var i = 0; i < _goodsGatewayConstantsFeatureStates['default'].length; i++) {
        var displayValue = this.getDisplayValue(_goodsGatewayConstantsFeatureStates['default'][i]);
        if (displayValue.toLowerCase().indexOf(value.toLowerCase()) >= 0) {
          this.addResult(_goodsGatewayConstantsFeatureStates['default'][i]);
        }
      }
    },

    makeResult: function makeResult(value) {
      return _goodsGatewayModelsSearchResult['default'].create({
        group: this.get('groupName'),
        value: value,
        displayValue: this.getDisplayValue(value)
      });
    }
  });
});
define('goods-gateway/models/search/group-id', ['exports', 'goods-gateway/models/search/base'], function (exports, _goodsGatewayModelsSearchBase) {
  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    groupName: 'groupId'
  });
});
define('goods-gateway/models/search/manual-approval-status', ['exports', 'goods-gateway/models/search/base', 'goods-gateway/constants/approval-statuses'], function (exports, _goodsGatewayModelsSearchBase, _goodsGatewayConstantsApprovalStatuses) {
  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    availableExternally: false,
    groupName: 'manualApprovalStatus',

    makeResult: function makeResult(value) {
      var result = this._super.apply(this, arguments);
      result.set('displayValue', null);
      result.set('translationKeys', { value: 'constants.manualApprovalStatuses.' + value });
      return result;
    },

    process: function process(value) {
      var _this = this;

      this.clearResults();

      _goodsGatewayConstantsApprovalStatuses.MANUAL_APPROVAL_STATUSES.forEach(function (status) {
        if (status.toLowerCase().match(value.toLowerCase())) {
          _this.addResult(status);
        }
      });
    }
  });
});
define('goods-gateway/models/search/permalink', ['exports', 'goods-gateway/models/search/base'], function (exports, _goodsGatewayModelsSearchBase) {

  var GOODS_PERMALINK_PREFIX = 'gg-';

  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    groupName: 'permalink',

    process: function process(value) {
      this.clearResults();

      var permalink = value.split('/').pop().toLowerCase();
      if (permalink.match(GOODS_PERMALINK_PREFIX)) {
        this.addResult(permalink);
      }
    }
  });
});
define('goods-gateway/models/search/product-id', ['exports', 'goods-gateway/models/search/base', 'goods-gateway/constants/uuid-regex'], function (exports, _goodsGatewayModelsSearchBase, _goodsGatewayConstantsUuidRegex) {
  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    groupName: 'productId',

    process: function process(value) {
      this.clearResults();

      if (value.match(_goodsGatewayConstantsUuidRegex['default'])) {
        this.addResult(value);
      }
    }
  });
});
define('goods-gateway/models/search/product-state', ['exports', 'goods-gateway/models/search/base', 'goods-gateway/constants/product-states'], function (exports, _goodsGatewayModelsSearchBase, _goodsGatewayConstantsProductStates) {
  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    availableWithFeatureFlag: 'searchProductStates',
    groupName: 'productState',

    makeResult: function makeResult(value) {
      var result = this._super.apply(this, arguments);
      result.set('displayValue', null);
      result.set('translationKeys', { value: 'constants.productStates.' + value });
      return result;
    },

    process: function process(value) {
      var _this = this;

      this.clearResults();

      _goodsGatewayConstantsProductStates['default'].forEach(function (state) {
        if (state.toLowerCase().match(value.toLowerCase())) {
          _this.addResult(state);
        }
      });
    }
  });
});
define('goods-gateway/models/search/rejection-reason', ['exports', 'goods-gateway/models/search/base', 'goods-gateway/constants/auto-rejection-reasons'], function (exports, _goodsGatewayModelsSearchBase, _goodsGatewayConstantsAutoRejectionReasons) {

  var nonalphanumeric = /[^a-zA-Z0-9]+/g;

  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    groupName: 'rejectionReason',

    makeResult: function makeResult(value) {
      var result = this._super.apply(this, arguments);
      result.set('displayValue', null);
      result.set('translationKeys', { value: 'vp-listing-status.autoApproval.rejectReasons.' + value });
      return result;
    },

    process: function process(value) {
      var _this = this;

      this.clearResults();

      _goodsGatewayConstantsAutoRejectionReasons.REJECTION_REASONS.forEach(function (reason) {
        var displayReason = _this.get('i18n').t('vp-listing-status.autoApproval.rejectReasons.' + reason).string.replace(nonalphanumeric, '').toLowerCase();
        var val = value.replace(nonalphanumeric, '').toLowerCase();
        if (displayReason.match(val)) {
          _this.addResult(reason);
        }
      });
    }
  });
});
define('goods-gateway/models/search/reviewed-by', ['exports', 'ember', 'goods-gateway/models/search/base'], function (exports, _ember, _goodsGatewayModelsSearchBase) {
  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    availableExternally: false,
    isLoading: false,
    groupName: 'reviewedBy',
    store: _ember['default'].inject.service(),

    makeResult: function makeResult(accountId) {
      var result = this._super.apply(this, arguments);
      var store = this.get('store');
      return store.findRecord('user', accountId).then(function (user) {
        result.set('displayValue', user.get('email'));
        return result;
      });
    },

    process: function process(value) {
      var _this = this;

      this.clearResults();
      this.set('isLoading', true);

      var store = this.get('store');
      return store.queryRecord('user', { filter: { email: value } }).then(function (user) {
        if (user) {
          _this.addResult(user.get('id'));
        }
        _this.set('isLoading', false);
      }, function () {
        _this.set('isLoading', false);
      });
    }
  });
});
define('goods-gateway/models/search/source', ['exports', 'goods-gateway/models/search/base', 'goods-gateway/constants/source-names'], function (exports, _goodsGatewayModelsSearchBase, _goodsGatewayConstantsSourceNames) {
  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    groupName: 'source',

    makeResult: function makeResult(value) {
      var result = this._super.apply(this, arguments);
      result.set('displayValue', null);
      result.set('translationKeys', { value: 'constants.sourceNames.' + value });
      return result;
    },

    process: function process(value) {
      var _this = this;

      this.clearResults();

      _goodsGatewayConstantsSourceNames.SOURCE_NAMES.forEach(function (source) {
        if (source.toLowerCase().match(value.toLowerCase())) {
          _this.addResult(source);
        }
      });
    }
  });
});
define('goods-gateway/models/search/title', ['exports', 'goods-gateway/models/search/base'], function (exports, _goodsGatewayModelsSearchBase) {
  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    groupName: 'title'
  });
});
define('goods-gateway/models/search/universal-id', ['exports', 'goods-gateway/models/search/base'], function (exports, _goodsGatewayModelsSearchBase) {

  var SOFT_UPC = 'soft-upc';
  var LENGTH_TO_UNIVERSAL_ID = {
    8: 'gtin-8',
    12: 'gtin-12',
    10: 'isbn-10',
    13: 'gtin-13',
    14: 'gtin-14'
  };

  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    groupName: 'universalId',

    makeResult: function makeResult(value) {
      var result = this._super.apply(this, arguments);
      var identifier = LENGTH_TO_UNIVERSAL_ID[value.length] || SOFT_UPC;
      result.set('identifier', identifier);
      result.set('translationKeys', { label: 'constants.universalIdTypes.' + identifier });
      return result;
    }
  });
});
define('goods-gateway/models/search/vendor-id', ['exports', 'ember', 'goods-gateway/models/search/base', 'goods-gateway/constants/uuid-regex', 'goods-gateway/constants/error-codes'], function (exports, _ember, _goodsGatewayModelsSearchBase, _goodsGatewayConstantsUuidRegex, _goodsGatewayConstantsErrorCodes) {

  var MAX_RESULTS = 5;

  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    availableExternally: false,
    store: _ember['default'].inject.service(),
    isLoading: false,
    currentVendorSearch: null,
    groupName: 'vendorId',

    makeResult: function makeResult(value) {
      var _this = this;

      var result = this._super.apply(this, arguments);

      var vendorPromise = this.get('store').find('vendor', value).then(function (vendor) {
        var name = vendor.get('name');
        if (name) {
          result.set('displayValue', name);
        }
        return result;
      }, function (reason) {
        if (reason.errors.isEvery('code', _goodsGatewayConstantsErrorCodes.NOT_FOUND_CODE)) {
          // the coupling is so tight across these things
          _this.set('results', _this.get('results').without(vendorPromise));
          return null;
        }
        throw reason;
      });

      return vendorPromise;
    },

    process: function process(value) {
      var _this2 = this;

      this.clearResults();
      this.set('isLoading', true);

      if (value.match(_goodsGatewayConstantsUuidRegex['default'])) {
        this.addResult(value);
        this.set('isLoading', false);
        return;
      }

      var options = {
        filter: {
          query: value
        },
        limit: MAX_RESULTS,
        offset: 0
      };

      var vendorSearch = this.get('store').query('vendor', options);
      this.set('currentVendorSearch', vendorSearch);

      return vendorSearch.then(function (vendors) {
        if (_this2.get('currentVendorSearch') !== vendorSearch) {
          // Debounce: abort if a new search is in flight
          return;
        }
        vendors.forEach(function (vendor) {
          _this2.addResult(vendor.get('id'));
        });
        _this2.set('isLoading', false);
      }, function () {
        _this2.set('isLoading', false);
      });
    }
  });
});
define('goods-gateway/models/search/vendor-sku', ['exports', 'goods-gateway/models/search/base'], function (exports, _goodsGatewayModelsSearchBase) {
  exports['default'] = _goodsGatewayModelsSearchBase['default'].extend({
    groupName: 'vendorSKU'
  });
});
define('goods-gateway/not-found/route', ['exports', 'ember', 'goods-gateway/mixins/gateway-route'], function (exports, _ember, _goodsGatewayMixinsGatewayRoute) {
  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsGatewayRoute['default'], {});
});
define("goods-gateway/not-found/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/not-found/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("h1");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1, 1, 1]), 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element0, [3, 1]), 1, 1);
        return morphs;
      },
      statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [5, 20], [5, 35]]], 0, 0, 0, 0], "title"], [], ["loc", [null, [5, 12], [5, 44]]], 0, 0]], [], ["loc", [null, [5, 8], [5, 46]]], 0, 0], ["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [12, 18], [12, 33]]], 0, 0, 0, 0], "description"], [], ["loc", [null, [12, 10], [12, 48]]], 0, 0]], [], ["loc", [null, [12, 6], [12, 50]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define("goods-gateway/price-suggestion-error/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/price-suggestion-error/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "overlay");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        dom.setAttribute(el2, "class", "mx-alert-error");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0, 1]), 0, 0);
        return morphs;
      },
      statements: [["inline", "t", ["priceSuggestionError.noPricingData"], [], ["loc", [null, [2, 31], [2, 73]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/price-suggestion/detail/route', ['exports', 'ember', 'ember-ajax/errors', 'goods-gateway/errors/not-found-error', 'goods-gateway/constants/band-actions'], function (exports, _ember, _emberAjaxErrors, _goodsGatewayErrorsNotFoundError, _goodsGatewayConstantsBandActions) {

  var outdatedMessage = 'priceSuggestionDetail.outdated';
  var serverErrorMessage = 'priceSuggestionDetail.serverError';
  var forbiddenMessage = 'priceSuggestionDetail.errorForbidden';
  var success = 'priceSuggestionDetail.success';
  var successBandsUpdated = 'priceSuggestionDetail.successBandsUpdated';
  var successBandsDeleted = 'priceSuggestionDetail.successBandsDeleted';
  var conflictError = '409';

  exports['default'] = _ember['default'].Route.extend({
    init: function init() {
      this.set('bandActionCheckboxes', {});
    },
    request: _ember['default'].inject.service(),
    updatePriceSuggestions: _ember['default'].inject.service(),
    model: function model(params) {
      var _this = this;

      var deal = this.store.find('deal', params.uuid);
      var itemMasterDeal = this.store.find('itemMasterDeal', params.uuid);
      var marketPricingDeal = this.store.find('marketPricingDeal', params.uuid);
      var currentPrices = marketPricingDeal.then(function (marketPricingDeal) {
        var results = {};
        marketPricingDeal.get('options').forEach(function (option) {
          var inventoryProductId = option.get('inventoryProductId');
          var currentPricePromise = _this.store.find('currentPrice', inventoryProductId);
          results[inventoryProductId] = currentPricePromise.then(function (currentPrice) {
            return currentPrice;
          });
        });
        return _ember['default'].RSVP.hash(results);
      });
      var marketPricingDealProxy = marketPricingDeal.then(function (marketPricingDeal) {
        var bandActionCheckboxes = _this.get('bandActionCheckboxes');
        var uuid = marketPricingDeal.get('uuid');
        if (!bandActionCheckboxes[uuid]) {
          bandActionCheckboxes[uuid] = _ember['default'].Object.create({ bandActionCheckbox: true });
        }
        return _ember['default'].ObjectProxy.create({
          content: marketPricingDeal,
          bandActionCheckbox: bandActionCheckboxes[uuid]
        });
      });

      return _ember['default'].RSVP.hash({
        deal: deal,
        marketPricingDeal: marketPricingDealProxy,
        itemMasterDeal: itemMasterDeal,
        currentPrices: currentPrices
      });
    },

    _addNotificationMessage: function _addNotificationMessage() {
      this.get('flashMessages').add({
        message: this.get('i18n').t(outdatedMessage),
        type: 'alert-notify'
      });
    },

    _addErrorMessage: function _addErrorMessage(errorMessage, details) {
      var i18n = this.get('i18n');
      var msg = i18n.t(errorMessage);
      if (details) {
        msg += ' ' + i18n.t('priceSuggestionDetail.errorDetails') + ' ' + details;
      }

      this.get('flashMessages').add({
        message: msg,
        type: 'alert-error'
      });
    },

    _addSuccessMessage: function _addSuccessMessage(translationKey) {
      this.get('flashMessages').add({
        message: this.get('i18n').t(translationKey),
        type: 'alert-success'
      });
    },

    _updatePriceSuggestionList: function _updatePriceSuggestionList(idsToRemove) {
      var marketPricingDeal = this.get('currentModel.marketPricingDeal');
      var remainingPriceSuggestions = marketPricingDeal.get('options').filter(function (priceSuggestion) {
        return idsToRemove.indexOf(priceSuggestion.get('priceSuggestionId')) === -1;
      });

      if (remainingPriceSuggestions.length === 0) {
        this.transitionTo('price_suggestion');
        this.container.lookup('route:price_suggestion').refresh();
      }
      marketPricingDeal.set('options', remainingPriceSuggestions);
    },

    _onSuccessfulAccept: function _onSuccessfulAccept(priceSuggestions, bandAction) {
      var translationKey = bandAction === _goodsGatewayConstantsBandActions['default'].UPDATE ? successBandsUpdated : successBandsDeleted;
      this._onSuccessfulUpdate(priceSuggestions, translationKey);
    },

    _onSuccessfulReject: function _onSuccessfulReject(priceSuggestions) {
      this._onSuccessfulUpdate(priceSuggestions, success);
    },

    _onSuccessfulUpdate: function _onSuccessfulUpdate(priceSuggestions, translationKey) {
      var idsToRemove = priceSuggestions.map(function (suggestion) {
        return suggestion.get('priceSuggestionId');
      });

      this._addSuccessMessage(translationKey);
      this._updatePriceSuggestionList(idsToRemove);
    },

    _onFailedUpdate: function _onFailedUpdate(err) {
      var error = _ember['default'].isArray(err.errors) && err.errors.length > 0 ? err.errors[0] : null;

      if (err instanceof _emberAjaxErrors.ForbiddenError) {
        this._addErrorMessage(forbiddenMessage);
      } else if (error && error.status === conflictError) {
        this._addNotificationMessage();
        this._updatePriceSuggestionList(error.detail.ids);
      } else if (error && error.detail) {
        this._addErrorMessage(serverErrorMessage, error.detail.reason);
      } else {
        this._addErrorMessage(serverErrorMessage);
      }
    },

    activate: function activate() {
      window.scrollTo(0, 0);
    },

    _priceSuggestionsWithOldSellPrice: function _priceSuggestionsWithOldSellPrice(priceSuggestions) {
      var _this2 = this;

      return priceSuggestions.map(function (priceSuggestion) {
        return _ember['default'].ObjectProxy.create({
          content: priceSuggestion,
          oldSellPrice: _this2.currentModel.currentPrices[priceSuggestion.get('inventoryProductId')].get('unitPrice.valueUnscaled')
        });
      });
    },

    actions: {
      error: function error(err) {
        if (err instanceof _goodsGatewayErrorsNotFoundError['default']) {
          this._addErrorMessage(err.errors[0].detail);
        }
        this.transitionTo('price_suggestion');
        return true;
      },

      // Note Function.prototype.bind is not supported by Phantom 1.9.8 so our CI build fails. When we can upgrade to 2.0
      // you can use this._onSuccessfulUpdate.bind instead of Ember.$.proxy
      accept: function accept(priceSuggestions, bandAction, overrideReason) {
        this.get('updatePriceSuggestions').accept(this._priceSuggestionsWithOldSellPrice(priceSuggestions), bandAction, overrideReason).then(_ember['default'].$.proxy(this._onSuccessfulAccept, this, priceSuggestions, bandAction))['catch'](_ember['default'].$.proxy(this._onFailedUpdate, this));
      },

      reject: function reject(priceSuggestions, rejectReason) {
        this.get('updatePriceSuggestions').reject(this._priceSuggestionsWithOldSellPrice(priceSuggestions), rejectReason).then(_ember['default'].$.proxy(this._onSuccessfulReject, this, priceSuggestions))['catch'](_ember['default'].$.proxy(this._onFailedUpdate, this));
      }
    }
  });
});
define("goods-gateway/price-suggestion/detail/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/price-suggestion/detail/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-pricing-detail-form", [], ["deal", ["subexpr", "@mut", [["get", "model.deal", ["loc", [null, [3, 7], [3, 17]]], 0, 0, 0, 0]], [], [], 0, 0], "marketPricingDeal", ["subexpr", "@mut", [["get", "model.marketPricingDeal", ["loc", [null, [4, 20], [4, 43]]], 0, 0, 0, 0]], [], [], 0, 0], "currentPrices", ["subexpr", "@mut", [["get", "model.currentPrices", ["loc", [null, [5, 16], [5, 35]]], 0, 0, 0, 0]], [], [], 0, 0], "itemMasterDeal", ["subexpr", "@mut", [["get", "model.itemMasterDeal", ["loc", [null, [6, 17], [6, 37]]], 0, 0, 0, 0]], [], [], 0, 0], "accept", "accept", "reject", "reject"], ["loc", [null, [1, 0], [9, 2]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/price-suggestion/route', ['exports', 'ember', 'goods-gateway/mixins/search'], function (exports, _ember, _goodsGatewayMixinsSearch) {

  var pageSize = 10;

  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsSearch['default'], {
    page: 1,
    priceSuggestionModel: _ember['default'].inject.service(),

    searchConfig: {
      categoryIds: { hideLeaves: true }
    },

    // Search params added by initSearchQueryParams
    queryParams: {
      page: { refreshModel: true },
      selectedStrategy: { refreshModel: true }
    },

    init: function init() {
      this.initRouteSearch();
    },

    model: function model(params) {
      var _this = this;

      return this.get('priceSuggestionModel').fetchPriceSuggestions({
        selectedCategories: params.categoryIds,
        selectedStrategy: params.selectedStrategy,
        page: params.page,
        pageSize: pageSize
      }).then(function (suggestions) {
        return _ember['default'].RSVP.hash({
          selectedStrategy: params.selectedStrategy,
          deals: suggestions.deals,
          marketPricingDeals: suggestions.marketPricingDeals,
          page: parseInt(params.page) || 1,
          totalPages: suggestions.marketPricingDeals.get('meta').total / pageSize,
          searchFilters: _this.getSearchFilters(params),
          searchEngines: _this.get('activeSearchEngines'),
          strategies: suggestions.marketPricingDeals.get('meta').strategies
        });
      });
    },

    _transition: function _transition(params, strategy) {
      params.page = undefined;
      params.selectedStrategy = strategy;
      this.transitionTo('price_suggestion', { queryParams: params });
    },

    actions: {
      loading: function loading() {
        var model = this.modelFor('priceSuggestion');
        if (!model) {
          return true;
        }
      },

      goToPage: function goToPage(page) {
        this.transitionTo({ queryParams: { page: page } });
      },

      removeAllSearches: function removeAllSearches() {
        var currentParams = this.paramsFor('priceSuggestion');
        var newParams = this.removeAllSearchParams(currentParams);
        this._transition(newParams);
      },

      removeSearch: function removeSearch(searchKey, searchValue) {
        var currentParams = this.paramsFor('priceSuggestion');
        var newParams = this.removeSearchParam(searchKey, searchValue, currentParams);
        this._transition(newParams);
      },

      search: function search(criteria) {
        var currentParams = this.paramsFor('priceSuggestion');
        var newParams = this.addSearchParam(criteria, currentParams);
        this._transition(newParams);
      },

      strategySelected: function strategySelected(strategy) {
        var currentParams = this.paramsFor('priceSuggestion');
        this._transition(currentParams, strategy);
      }
    }
  });
});
define("goods-gateway/price-suggestion/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 6
            },
            "end": {
              "line": 6,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/price-suggestion/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["priceSuggestion.activityLink"], [], ["loc", [null, [5, 8], [5, 44]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 49,
                "column": 10
              },
              "end": {
                "line": 60,
                "column": 10
              }
            },
            "moduleName": "goods-gateway/price-suggestion/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "vp-pricing-deal-card", [], ["id", ["subexpr", "@mut", [["get", "dealHash.marketPricingDeal.uuid", ["loc", [null, [55, 17], [55, 48]]], 0, 0, 0, 0]], [], [], 0, 0], "deal", ["subexpr", "@mut", [["get", "dealHash.deal", ["loc", [null, [56, 19], [56, 32]]], 0, 0, 0, 0]], [], [], 0, 0], "marketPricingDeal", ["subexpr", "@mut", [["get", "dealHash.marketPricingDeal", ["loc", [null, [57, 32], [57, 58]]], 0, 0, 0, 0]], [], [], 0, 0], "categoryName", ["subexpr", "@mut", [["get", "dealHash.categoryName", ["loc", [null, [58, 27], [58, 48]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [54, 12], [59, 14]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 8
            }
          },
          "moduleName": "goods-gateway/price-suggestion/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "link-to", ["price_suggestion.detail", ["get", "dealHash.marketPricingDeal.uuid", ["loc", [null, [50, 38], [50, 69]]], 0, 0, 0, 0]], ["tagName", "div", "class", "clickable info-card vendor-card"], 0, null, ["loc", [null, [49, 10], [60, 22]]]]],
        locals: ["dealHash"],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 69,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/price-suggestion/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "flex-layout sm-column");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "pricing-header");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "pricing-header-links");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      |\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("a");
        dom.setAttribute(el4, "target", "_blank");
        dom.setAttribute(el4, "href", "https://docs.google.com/a/groupon.com/forms/d/1h1Vaw7B58HUr0W64HqgheemMYfOXwpshdw_HwAPkA80/viewform");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      |\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("a");
        dom.setAttribute(el4, "target", "_blank");
        dom.setAttribute(el4, "href", "https://docs.google.com/a/groupon.com/document/d/18ItJtDuaLeCbc-pon0j58zzJlwWxF_kepOiNYWgnX_g/edit?usp=sharing");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("section");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "content row price-main clear-padding");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("section");
        dom.setAttribute(el3, "class", "md-column content clear-padding");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "pricing-strategy-filter");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "id", "pricing-deal-list");
        dom.setAttribute(el4, "class", "md-column clear-padding");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(element1, [1]);
        var element3 = dom.childAt(element1, [3]);
        var element4 = dom.childAt(element0, [3]);
        var element5 = dom.childAt(element4, [1]);
        var morphs = new Array(10);
        morphs[0] = dom.createMorphAt(element2, 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element2, [3]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element2, [5]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element3, [1, 1]), 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element3, [3, 1]), 1, 1);
        morphs[5] = dom.createMorphAt(dom.childAt(element5, [1]), 1, 1);
        morphs[6] = dom.createMorphAt(element5, 3, 3);
        morphs[7] = dom.createMorphAt(dom.childAt(element5, [5]), 1, 1);
        morphs[8] = dom.createMorphAt(element5, 7, 7);
        morphs[9] = dom.createMorphAt(element4, 3, 3);
        return morphs;
      },
      statements: [["block", "link-to", ["pricing_activity"], [], 0, null, ["loc", [null, [4, 6], [6, 18]]]], ["inline", "t", ["priceSuggestion.feedbackLink"], [], ["loc", [null, [9, 8], [9, 44]]], 0, 0], ["inline", "t", ["priceSuggestion.faqLink"], [], ["loc", [null, [13, 8], [13, 39]]], 0, 0], ["inline", "vp-x-search", [], ["select", "search", "searches", ["subexpr", "@mut", [["get", "model.searchEngines", ["loc", [null, [21, 21], [21, 40]]], 0, 0, 0, 0]], [], [], 0, 0], "debounceTime", 200], ["loc", [null, [19, 10], [23, 12]]], 0, 0], ["inline", "vp-x-search-current-filters", [], ["removeAllSearches", "removeAllSearches", "removeSearch", "removeSearch", "searches", ["subexpr", "@mut", [["get", "model.searchFilters", ["loc", [null, [32, 21], [32, 40]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [29, 10], [33, 12]]], 0, 0], ["inline", "vp-pricing-strategies", [], ["strategies", ["subexpr", "@mut", [["get", "model.strategies", ["loc", [null, [42, 21], [42, 37]]], 0, 0, 0, 0]], [], [], 0, 0], "selectedStrategy", ["subexpr", "@mut", [["get", "model.selectedStrategy", ["loc", [null, [43, 27], [43, 49]]], 0, 0, 0, 0]], [], [], 0, 0], "strategySelected", "strategySelected"], ["loc", [null, [41, 8], [44, 47]]], 0, 0], ["inline", "vp-paginator", [], ["action", "goToPage", "currentPage", ["subexpr", "@mut", [["get", "model.page", ["loc", [null, [46, 51], [46, 61]]], 0, 0, 0, 0]], [], [], 0, 0], "totalPages", ["subexpr", "@mut", [["get", "model.totalPages", ["loc", [null, [46, 73], [46, 89]]], 0, 0, 0, 0]], [], [], 0, 0], "class", "md-column pagination"], ["loc", [null, [46, 6], [46, 120]]], 0, 0], ["block", "each", [["get", "model.deals", ["loc", [null, [48, 16], [48, 27]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [48, 8], [61, 17]]]], ["inline", "vp-paginator", [], ["action", "goToPage", "currentPage", ["subexpr", "@mut", [["get", "model.page", ["loc", [null, [63, 51], [63, 61]]], 0, 0, 0, 0]], [], [], 0, 0], "totalPages", ["subexpr", "@mut", [["get", "model.totalPages", ["loc", [null, [63, 73], [63, 89]]], 0, 0, 0, 0]], [], [], 0, 0], "class", "md-column pagination"], ["loc", [null, [63, 6], [63, 120]]], 0, 0], ["content", "outlet", ["loc", [null, [66, 4], [66, 14]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/price/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  exports['default'] = _modelFragments['default'].Fragment.extend({
    amount: attr('number'),
    currencyCode: attr('string')
  });
});
define('goods-gateway/pricing-activity/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/v0/market_pricing',

    pathForType: function pathForType() {
      return 'v1_pricing_activity';
    },

    urlForQuery: function urlForQuery() {
      return this.namespace + '/v1_pricing_activity';
    }
  });
});
define('goods-gateway/pricing-activity/approval-band/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;
  exports['default'] = _modelFragments['default'].Fragment.extend({
    upperBound: _modelFragments['default'].fragment('price'),
    lowerBound: _modelFragments['default'].fragment('price'),
    startAt: attr('date'),
    endAt: attr('date')
  });
});
define('goods-gateway/pricing-activity/controller', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Controller.extend({
    queryParams: ['page', 'activity', 'reviewer', 'deal'],
    activity: 'accepted',
    dealIdOrPermalink: '',
    reviewer: '',
    hasSearchedForDeal: _ember['default'].computed.notEmpty('dealIdOrPermalink')
  });
});
define('goods-gateway/pricing-activity/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {

  var attr = _emberData['default'].attr;

  var model = _modelFragments['default'].Fragment.extend({
    approvalBand: _modelFragments['default'].fragment('pricing-activity/approval-band'),
    dealUuid: attr('string'),
    dmapiStatus: attr('string'),
    imStatus: attr('string'),
    inventoryProductId: attr('string'),
    lowestCompetitorPrice: _modelFragments['default'].fragment('price'),
    lowestCompetitorShippingPrice: _modelFragments['default'].fragment('price'),
    newSellPrice: _modelFragments['default'].fragment('price'),
    overrideReason: attr('string'),
    price: _modelFragments['default'].fragment('price'),
    rejectReason: attr('string'),
    reviewedAt: attr('date'),
    reviewedBy: attr('string'),
    status: attr('string')
  });

  exports['default'] = model;
});
define('goods-gateway/pricing-activity/route', ['exports', 'ember'], function (exports, _ember) {

  var per = 20;
  var defaultActivity = 'accepted';
  var acceptedActivity = 'accepted';
  var queryStatusAccepted = ['accepted', 'overridden', 'auto_accepted'];
  var queryStatusRejected = 'rejected';

  exports['default'] = _ember['default'].Route.extend({
    dealIdLookup: _ember['default'].inject.service(),
    flash: _ember['default'].inject.service('flashMessages'),
    gpapi: _ember['default'].inject.service(),
    queryParams: {
      page: { refreshModel: true },
      activity: { refreshModel: true },
      reviewer: { refreshModel: true },
      deal: { refreshModel: true }
    },
    model: function model(params) {
      var _this = this;

      var activity = params.activity || defaultActivity;
      var queryStatus = activity === acceptedActivity ? queryStatusAccepted : queryStatusRejected;
      var query = {
        page: params.page,
        pageSize: per,
        status: queryStatus
      };
      if (params.deal) {
        query.dealUuid = params.deal;
      }
      if (params.reviewer) {
        query.reviewedBy = params.reviewer;
      }
      var pricingActivities = this.store.query('pricingActivity', query);
      var activityItems = pricingActivities.then(function (activities) {
        return activities.map(function (activity) {
          return _ember['default'].Object.create({
            activity: activity,
            deal: _this.store.find('deal', activity.get('dealUuid'))
          });
        });
      });
      var total = pricingActivities.then(function (activities) {
        return activities.get('meta').total / per;
      });
      return _ember['default'].RSVP.hash({
        activityItems: activityItems,
        page: parseInt(params.page) || 1,
        reviewer: params.reviewer,
        activity: activity,
        total: total,
        showAccepted: _ember['default'].computed.equal('activity', defaultActivity),
        hasSearched: _ember['default'].computed('reviewer', 'params', function () {
          return params.reviewer && params.reviewer === this.reviewer;
        })
      });
    },
    _resetDealSearch: function _resetDealSearch() {
      this.controllerFor('pricing_activity').set('dealIdOrPermalink', '');
    },
    _search: function _search(dealUuid, reviewer) {
      this.transitionTo({ queryParams: { page: 1, reviewer: reviewer, deal: dealUuid } });
    },
    actions: {
      goToPage: function goToPage(page) {
        this.transitionTo({ queryParams: { page: page } });
      },
      search: function search() {
        this._resetDealSearch();
        var reviewer = this.modelFor('pricingActivity').reviewer;
        this._search(undefined, reviewer);
      },
      clearSearch: function clearSearch() {
        this.transitionTo({ queryParams: { page: 1, reviewer: '' } });
      },
      searchDeal: function searchDeal() {
        var _this2 = this;

        var dealIdOrPermalink = this.controllerFor('pricing_activity').dealIdOrPermalink;
        if (dealIdOrPermalink) {
          this.get('dealIdLookup').fetch(dealIdOrPermalink).then(function (dealUuid) {
            _this2._search(dealUuid, '');
          });
        } else {
          this._search();
        }
      },
      clearDealSearch: function clearDealSearch() {
        this._resetDealSearch();
        this.transitionTo({ queryParams: { page: 1, deal: undefined } });
      },
      unbandDeal: function unbandDeal() {
        var _this3 = this;

        var deal = this.controllerFor('pricing_activity').get('deal');
        this.get('gpapi').request('v1.approval_bands.id.destroy', { dealUuid: deal }).then(function () {
          _this3.get('flash').add({
            message: _this3.get('i18n').t('pricingActivity.bandsDeletedForDeal'),
            type: 'alert-success'
          });
          _this3.refresh();
        })['catch'](function (response) {
          _this3.get('flash').add({
            message: _this3.get('i18n').t('pricingActivity.failedToUpdateBandsForDeal', {
              error: response.message
            }),
            type: 'alert-error'
          });
        });
      }
    }
  });
});
define('goods-gateway/pricing-activity/serializer', ['exports', 'goods-gateway/application/root-meta-serializer'], function (exports, _goodsGatewayApplicationRootMetaSerializer) {
  exports['default'] = _goodsGatewayApplicationRootMetaSerializer['default'].extend({
    primaryKey: 'priceSuggestionId',
    metaKeys: ['total']
  });
});
define("goods-gateway/pricing-activity/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/pricing-activity/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "flex-layout sm-column");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "content row price-main clear-padding");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("section");
        dom.setAttribute(el3, "class", "md-column content clear-padding");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "row clear-padding");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("h2");
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column pricing-radio-buttons");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("label");
        dom.setAttribute(el6, "class", "radio-label");
        dom.setAttribute(el6, "for", "pricing-activity-accepted-button");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("span");
        dom.setAttribute(el7, "class", "radio");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column pricing-radio-buttons");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("label");
        dom.setAttribute(el6, "class", "radio-label");
        dom.setAttribute(el6, "for", "pricing-activity-rejected-button");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("span");
        dom.setAttribute(el7, "class", "radio");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column align-right clear-padding");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "md-column align-right clear-padding");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0, 1, 1]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(element1, [3, 1]);
        var element3 = dom.childAt(element1, [5, 1]);
        var morphs = new Array(11);
        morphs[0] = dom.createMorphAt(dom.childAt(element1, [1, 1]), 0, 0);
        morphs[1] = dom.createMorphAt(element2, 1, 1);
        morphs[2] = dom.createMorphAt(element2, 5, 5);
        morphs[3] = dom.createMorphAt(element3, 1, 1);
        morphs[4] = dom.createMorphAt(element3, 5, 5);
        morphs[5] = dom.createMorphAt(dom.childAt(element1, [7]), 1, 1);
        morphs[6] = dom.createMorphAt(dom.childAt(element1, [9]), 1, 1);
        morphs[7] = dom.createMorphAt(element0, 3, 3);
        morphs[8] = dom.createMorphAt(element0, 5, 5);
        morphs[9] = dom.createMorphAt(element0, 7, 7);
        morphs[10] = dom.createMorphAt(element0, 9, 9);
        return morphs;
      },
      statements: [["inline", "t", ["pricingActivity.title"], [], ["loc", [null, [6, 14], [6, 43]]], 0, 0], ["inline", "radio-button", [], ["id", "pricing-activity-accepted-button", "value", "accepted", "checked", ["subexpr", "@mut", [["get", "activity", ["loc", [null, [10, 90], [10, 98]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [10, 12], [10, 100]]], 0, 0], ["inline", "t", ["pricingActivity.acceptedOverridden"], [], ["loc", [null, [12, 12], [12, 54]]], 0, 0], ["inline", "radio-button", [], ["id", "pricing-activity-rejected-button", "value", "rejected", "checked", ["subexpr", "@mut", [["get", "activity", ["loc", [null, [17, 90], [17, 98]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [17, 12], [17, 100]]], 0, 0], ["inline", "t", ["pricingActivity.rejected"], [], ["loc", [null, [19, 12], [19, 44]]], 0, 0], ["inline", "vp-search", [], ["inputId", "deal-search", "query", ["subexpr", "@mut", [["get", "dealIdOrPermalink", ["loc", [null, [25, 18], [25, 35]]], 0, 0, 0, 0]], [], [], 0, 0], "search", "searchDeal", "clearSearch", "clearDealSearch", "hasSearched", ["subexpr", "@mut", [["get", "hasSearchedForDeal", ["loc", [null, [28, 24], [28, 42]]], 0, 0, 0, 0]], [], [], 0, 0], "placeholder", "pricingActivity.searchDealHint"], ["loc", [null, [23, 10], [30, 14]]], 0, 0], ["inline", "vp-search", [], ["inputId", "reviewer-search", "query", ["subexpr", "@mut", [["get", "model.reviewer", ["loc", [null, [35, 18], [35, 32]]], 0, 0, 0, 0]], [], [], 0, 0], "search", "search", "clearSearch", "clearSearch", "hasSearched", ["subexpr", "@mut", [["get", "model.hasSearched", ["loc", [null, [38, 24], [38, 41]]], 0, 0, 0, 0]], [], [], 0, 0], "placeholder", "pricingActivity.searchHint"], ["loc", [null, [33, 10], [40, 14]]], 0, 0], ["inline", "vp-delete-bands-button", [], ["activitiesAndDeals", ["subexpr", "@mut", [["get", "model.activityItems", ["loc", [null, [44, 27], [44, 46]]], 0, 0, 0, 0]], [], [], 0, 0], "dealUuid", ["subexpr", "@mut", [["get", "deal", ["loc", [null, [45, 17], [45, 21]]], 0, 0, 0, 0]], [], [], 0, 0], "unbandDeal", "unbandDeal"], ["loc", [null, [43, 6], [47, 10]]], 0, 0], ["inline", "vp-paginator", [], ["action", "goToPage", "currentPage", ["subexpr", "@mut", [["get", "model.page", ["loc", [null, [48, 51], [48, 61]]], 0, 0, 0, 0]], [], [], 0, 0], "totalPages", ["subexpr", "@mut", [["get", "model.total", ["loc", [null, [48, 73], [48, 84]]], 0, 0, 0, 0]], [], [], 0, 0], "class", "activity-pagination"], ["loc", [null, [48, 6], [48, 114]]], 0, 0], ["inline", "vp-pricing-activity-table", [], ["activity", ["subexpr", "@mut", [["get", "model", ["loc", [null, [49, 43], [49, 48]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [49, 6], [49, 50]]], 0, 0], ["inline", "vp-paginator", [], ["action", "goToPage", "currentPage", ["subexpr", "@mut", [["get", "model.page", ["loc", [null, [50, 51], [50, 61]]], 0, 0, 0, 0]], [], [], 0, 0], "totalPages", ["subexpr", "@mut", [["get", "model.total", ["loc", [null, [50, 73], [50, 84]]], 0, 0, 0, 0]], [], [], 0, 0], "class", "activity-pagination"], ["loc", [null, [50, 6], [50, 114]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/product/adapter', ['exports', 'goods-gateway/application/adapter', 'goods-gateway/config/environment'], function (exports, _goodsGatewayApplicationAdapter, _goodsGatewayConfigEnvironment) {

  var upgradeRequests = _goodsGatewayConfigEnvironment['default'].featureFlags.upgradeGoodsStoresAPIs;

  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/v1',
    updateOptions: {
      method: 'POST',
      excludeId: true
    },

    queryParams: {
      upgrade: upgradeRequests
    },

    _flashError: function _flashError(message) {
      this._super(message);
    },

    _flashInvalid: function _flashInvalid(status, payload) {
      var errors = undefined,
          errorString = undefined;
      errors = payload.errors;
      if (errors) {
        var uniqueErrors = errors.map(function (error) {
          return '<li>' + error.message + '</li>';
        }).uniq();
        errorString = '<ul class="product-error-list">' + uniqueErrors.join('') + '</ul>';
      } else {
        errorString = this.get('i18n').t('errors.generic') + ' ' + status;
      }
      this._flashError(errorString);
    }
  });
});
define('goods-gateway/product/base/route', ['exports', 'ember', 'goods-gateway/constants/error-codes', 'goods-gateway/mixins/search', 'goods-gateway/mixins/gateway-route'], function (exports, _ember, _goodsGatewayConstantsErrorCodes, _goodsGatewayMixinsSearch, _goodsGatewayMixinsGatewayRoute) {
  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsGatewayRoute['default'], _goodsGatewayMixinsSearch['default'], {
    flash: _ember['default'].inject.service('flashMessages'),
    authorization: _ember['default'].inject.service('authorization'),
    i18n: _ember['default'].inject.service('i18n'),
    request: _ember['default'].inject.service(),
    slimMRTs: _ember['default'].inject.service('slimMRTs'),

    beforeModel: function beforeModel() {
      if (this.get('authorization.isExternal')) {
        var vendorId = this.get('authorization.vendors.firstObject.id');
        if (!vendorId) {
          this.transitionTo('index');
        }
      }
    },

    model: function model(params) {
      var _this = this;

      var productPromise = undefined;

      if (params.product_id) {
        productPromise = this._findEagerProduct(params.product_id);
      } else {
        (function () {
          var product = _this.get('store').createRecord('product', {
            localizedContents: [{
              locale: 'en_US'
            }]
          });

          if (_this.get('authorization.isExternal')) {
            var vendorId = _this.get('authorization.vendors.firstObject.id');
            productPromise = _this.get('store').find('vendor', vendorId).then(function (vendor) {
              product.set('vendor', vendor);
              return product;
            });
          } else {
            productPromise = product;
          }
        })();
      }

      return _ember['default'].RSVP.hash({
        product: productPromise,
        slimMRTs: this.get('slimMRTs').promise
      });
    },

    afterModel: function afterModel(model) {
      if (model.product.get('category.isClosedCategory')) {
        this.get('flash').add({
          message: this.get('i18n').t('product.closedCategoryError'),
          type: 'alert-error'
        });
      }
    },

    actions: {
      deleteImage: function deleteImage(image, owner) {
        var _this2 = this;

        var ownerType = undefined,
            prefix = undefined;
        ownerType = owner.get('constructor.modelName');
        prefix = ownerType === 'product' ? 'products' : 'items';
        var imageId = encodeURIComponent(image.get('imageServiceUri') || image.get('sourceUri'));
        var url = '/goods-gateway/proxy/gpapi/v1/' + prefix + '/' + owner.get('id') + '/images?image=' + imageId;

        this.get('request').DELETE(url).then(function () {
          owner.get('images').removeObject(image);
        })['catch'](function () {
          _this2.get('flash').add({
            message: _this2.get('i18n').t('product.imageDeletionError'),
            type: 'alert-error'
          });
        });
      },

      selectVendor: function selectVendor(criteria) {
        var product = this.modelFor(this.routeName).product;
        this.get('store').find('vendor', criteria.vendorId).then(function (vendor) {
          product.set('vendor', vendor);
        });
      },

      deleteItem: function deleteItem(item) {
        var _this3 = this;

        item.destroyRecord().then(function () {
          var message = _this3.get('i18n').t('routes.product.item.deleted');
          _this3.get('flash').add({
            message: message,
            type: 'alert-success'
          });
        });
      },

      deleteProduct: function deleteProduct() {
        var _this4 = this;

        var model = this.modelFor(this.routeName);
        var product = model.product;
        product.destroyRecord().then(function () {
          var message = _this4.get('i18n').t('routes.product.base.deleted');
          _this4.get('flash').add({
            message: message,
            type: 'alert-success'
          });
          _this4.transitionTo('product.index');
        });
      },

      save: function save() {
        var _this5 = this;

        var product = this.modelFor(this.routeName).product;
        var isNew = product.get('isNew');

        var showFlash = this.modelFor(this.routeName).product.get('id');
        product.save().then(function (product) {
          if (showFlash) {
            var message = _this5.get('i18n').t('routes.product.base.updated');
            _this5.get('flash').add({
              message: message,
              type: 'alert-success'
            });
          }

          // HACK: delete any 'new' attachment records that stuck around after a successful save
          // http://discuss.emberjs.com/t/proposal-fix-saving-new-embedded-records-creates-duplicates/3677
          var loiteringAttachments = product.get('attachments').filterBy('attachmentType', 'warranty').rejectBy('id');
          if (loiteringAttachments.get('length') > 0) {
            loiteringAttachments.forEach(function (lazybones) {
              lazybones.deleteRecord();
            });
          }

          if (isNew) {
            _this5.transitionTo('product.edit.images', product.get('id'));
          }
        }, function () {}); // We need to 'handle' the error here to send 400s with MockServer
      },

      setCategory: function setCategory(category) {
        var _this6 = this;

        this.modelFor(this.routeName).product.get('items').forEach(function (item) {
          item.set('category', category);
          item.send('becomeDirty'); // 3 years https://github.com/emberjs/data/issues/1367
          _this6._removeInvalidAttributes(item, category);
        });
      }
    },

    _findEagerProduct: function _findEagerProduct(id) {
      return this.store.find('product', id).then(function (product) {
        return product.get('vendor').then(function () {
          var categoryPromises = product.get('items').map(function (item) {
            return item.get('category');
          });

          return _ember['default'].RSVP.all(categoryPromises).then(function () {
            return product;
          }, function (reason) {
            if (reason.errors.isEvery('code', _goodsGatewayConstantsErrorCodes.NOT_FOUND_CODE)) {
              return product;
            }
            throw reason;
          });
        });
      });
    },

    _removeInvalidAttributes: function _removeInvalidAttributes(item, category) {
      var validAttributeIds = category.get('variantCategories').mapBy('id');

      var invalidAttributes = item.get('attributes').reject(function (attr) {
        return validAttributeIds.includes(attr.get('attrNameId'));
      });

      item.get('attributes').removeObjects(invalidAttributes);
    }
  });
});
define("goods-gateway/product/edit-loading/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/product/edit-loading/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "vp-loading-spinner", ["loc", [null, [1, 0], [1, 22]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define("goods-gateway/product/edit/images/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/product/edit/images/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "id", "product-images");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 1, 1);
        return morphs;
      },
      statements: [["inline", "vp-product-images", [], ["save", "save", "deleteImage", "deleteImage", "product", ["subexpr", "@mut", [["get", "model.product", ["loc", [null, [2, 68], [2, 81]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [2, 2], [2, 83]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/product/edit/index/controller', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Controller.extend({
    queryParams: ['itemId'],
    itemId: null
  });
});
define("goods-gateway/product/edit/index/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/product/edit/index/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-product", [], ["itemId", ["subexpr", "@mut", [["get", "itemId", ["loc", [null, [2, 9], [2, 15]]], 0, 0, 0, 0]], [], [], 0, 0], "deleteItem", "deleteItem", "deleteProduct", "deleteProduct", "product", ["subexpr", "@mut", [["get", "model.product", ["loc", [null, [5, 10], [5, 23]]], 0, 0, 0, 0]], [], [], 0, 0], "save", "save", "selectVendor", "selectVendor", "setCategory", "setCategory", "transitionToItemEdit", "transitionToItemEdit", "approveItems", "approve", "rejectItems", "reject"], ["loc", [null, [1, 0], [12, 2]]], 0, 0], ["content", "vp-taxonomy-request-link", ["loc", [null, [13, 0], [13, 28]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/product/edit/route', ['exports', 'goods-gateway/product/base/route', 'goods-gateway/mixins/approval-actions'], function (exports, _goodsGatewayProductBaseRoute, _goodsGatewayMixinsApprovalActions) {
  exports['default'] = _goodsGatewayProductBaseRoute['default'].extend(_goodsGatewayMixinsApprovalActions['default'], {});
});
define("goods-gateway/product/edit/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 6
            },
            "end": {
              "line": 13,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/product/edit/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [12, 20], [12, 35]]], 0, 0, 0, 0], "allProducts"], [], ["loc", [null, [12, 12], [12, 50]]], 0, 0]], [], ["loc", [null, [12, 8], [12, 52]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 19,
                  "column": 10
                },
                "end": {
                  "line": 21,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/product/edit/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["vp-product-nav.basicInformation"], [], ["loc", [null, [20, 12], [20, 51]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 18,
                "column": 8
              },
              "end": {
                "line": 22,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/product/edit/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "link-to", ["product.edit.index", ["get", "model.product.id", ["loc", [null, [19, 42], [19, 58]]], 0, 0, 0, 0]], ["class", "top-nav-list-item"], 0, null, ["loc", [null, [19, 10], [21, 22]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 25,
                  "column": 10
                },
                "end": {
                  "line": 27,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/product/edit/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["vp-product-nav.images"], [], ["loc", [null, [26, 12], [26, 41]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 24,
                "column": 8
              },
              "end": {
                "line": 28,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/product/edit/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "link-to", ["product.edit.images", ["get", "model.product.id", ["loc", [null, [25, 43], [25, 59]]], 0, 0, 0, 0]], ["class", "top-nav-list-item"], 0, null, ["loc", [null, [25, 10], [27, 22]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 17,
              "column": 6
            },
            "end": {
              "line": 29,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/product/edit/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-top-nav-list-item", [], [], 0, null, ["loc", [null, [18, 8], [22, 33]]]], ["block", "mx-top-nav-list-item", [], [], 1, null, ["loc", [null, [24, 8], [28, 33]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/product/edit/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "products-edit");
        dom.setAttribute(el1, "class", "md-column");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("section");
        dom.setAttribute(el2, "id", "product-navigation");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("h1");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "id", "product-navigation-links");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("section");
        dom.setAttribute(el2, "id", "product-and-item-forms");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [4]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(element1, [1]);
        var morphs = new Array(7);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createAttrMorph(element1, 'class');
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
        morphs[4] = dom.createMorphAt(element2, 3, 3);
        morphs[5] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
        morphs[6] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "page-title", [["subexpr", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [1, 19], [1, 34]]], 0, 0, 0, 0], "title"], [], ["loc", [null, [1, 11], [1, 43]]], 0, 0]], [], ["loc", [null, [1, 8], [1, 44]]], 0, 0]], [], ["loc", [null, [1, 0], [1, 46]]], 0, 0], ["inline", "page-title", [["get", "model.product.localizedContents.firstObject.title", ["loc", [null, [2, 8], [2, 57]]], 0, 0, 0, 0]], [], ["loc", [null, [2, 0], [2, 59]]], 0, 0], ["attribute", "class", ["concat", ["section-navigation row ", ["subexpr", "if", [["subexpr", "eq", [["get", "model.product.category.children.length", ["loc", [null, [5, 74], [5, 112]]], 0, 0, 0, 0], 0], [], ["loc", [null, [5, 70], [5, 115]]], 0, 0], "leaf"], [], ["loc", [null, [5, 65], [5, 124]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [8, 20], [8, 35]]], 0, 0, 0, 0], "update"], [], ["loc", [null, [8, 12], [8, 45]]], 0, 0]], [], ["loc", [null, [8, 8], [8, 47]]], 0, 0], ["block", "link-to", ["inventory"], [], 0, null, ["loc", [null, [11, 6], [13, 18]]]], ["block", "mx-top-nav-list", [], [], 1, null, ["loc", [null, [17, 6], [29, 26]]]], ["content", "outlet", ["loc", [null, [34, 4], [34, 14]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/product/image/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {
  exports['default'] = _modelFragments['default'].Fragment.extend({
    imageServiceUri: _emberData['default'].attr('string'),
    sourceUri: _emberData['default'].attr('string')
  });
});
define("goods-gateway/product/index-loading/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/product/index-loading/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "vp-loading-spinner", ["loc", [null, [1, 0], [1, 22]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/product/index/route', ['exports', 'ember', 'goods-gateway/config/environment', 'goods-gateway/mixins/gateway-route', 'goods-gateway/constants/error-codes'], function (exports, _ember, _goodsGatewayConfigEnvironment, _goodsGatewayMixinsGatewayRoute, _goodsGatewayConstantsErrorCodes) {

  var PAGE_LIMIT = 10;
  var features = _goodsGatewayConfigEnvironment['default'].featureFlags;

  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsGatewayRoute['default'], {
    // dependencies
    authorization: _ember['default'].inject.service('authorization'),

    model: function model() {
      var searchParams = this.paramsFor('product');
      var products = this._getEagerLoadedProducts(searchParams);

      return _ember['default'].RSVP.hash({
        authorization: this.get('authorization'),
        features: _goodsGatewayConfigEnvironment['default'].featureFlags,
        products: products
      });
    },

    _getEagerLoadedProducts: function _getEagerLoadedProducts(params) {
      return this._getProducts(params).then(function (products) {
        var eagerCategoryPromises = products.reduce(function (promises, product) {
          if (features.upgradeProductsSearch) {
            promises.pushObject(product.get('category'));
          } else {
            promises.pushObjects(product.get('items').map(function (item) {
              return item.get('category');
            }));
          }
          return promises;
        }, []);

        return _ember['default'].RSVP.all(eagerCategoryPromises).then(function () {
          return products;
        }, function (reason) {
          if (reason.errors.isEvery('code', _goodsGatewayConstantsErrorCodes.NOT_FOUND_CODE)) {
            return products;
          }
          throw reason;
        });
      });
    },

    _getProducts: function _getProducts(params) {
      var page = params.page || 1;
      var offset = (page - 1) * PAGE_LIMIT;
      var query = {
        filter: _ember['default'].copy(params),
        page: {
          limit: PAGE_LIMIT,
          offset: offset
        },
        order: {
          updatedAt: 'desc'
        }
      };

      delete query.filter.page;

      var vendorId = this.get('authorization.isExternal') ? this.get('authorization.vendors.firstObject.id') : params.vendorId;
      if (features.upgradeProductsSearch) {
        if (vendorId) {
          query.filter.vendorId = vendorId;
        }
      } else {
        query.vendorId = vendorId || undefined;
      }

      var model = features.upgradeProductsSearch ? 'product/search' : 'product';
      return this.get('store').query(model, query);
    },

    actions: {
      goToPage: function goToPage(page) {
        this.transitionTo({ queryParams: { page: page } });
      }
    }
  });
});
define("goods-gateway/product/index/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 15,
                "column": 12
              },
              "end": {
                "line": 19,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/product/index/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            var el2 = dom.createTextNode("\n                ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["product.supplier"], [], ["loc", [null, [17, 16], [17, 40]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 25,
                "column": 12
              },
              "end": {
                "line": 29,
                "column": 12
              }
            },
            "moduleName": "goods-gateway/product/index/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            var el2 = dom.createTextNode("\n                ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [27, 28], [27, 43]]], 0, 0, 0, 0], "productState"], [], ["loc", [null, [27, 20], [27, 59]]], 0, 0]], [], ["loc", [null, [27, 16], [27, 61]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 44,
                  "column": 16
                },
                "end": {
                  "line": 46,
                  "column": 16
                }
              },
              "moduleName": "goods-gateway/product/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                  ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "vp-image", [], ["image", ["subexpr", "@mut", [["get", "product.images.firstObject", ["loc", [null, [45, 35], [45, 61]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [45, 18], [45, 63]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          var child0 = (function () {
            var child0 = (function () {
              return {
                meta: {
                  "revision": "Ember@2.8.2",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 53,
                      "column": 22
                    },
                    "end": {
                      "line": 55,
                      "column": 22
                    }
                  },
                  "moduleName": "goods-gateway/product/index/template.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                        ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["content", "content.title", ["loc", [null, [54, 24], [54, 41]]], 0, 0, 0, 0]],
                locals: [],
                templates: []
              };
            })();
            var child1 = (function () {
              return {
                meta: {
                  "revision": "Ember@2.8.2",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 55,
                      "column": 22
                    },
                    "end": {
                      "line": 57,
                      "column": 22
                    }
                  },
                  "moduleName": "goods-gateway/product/index/template.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                        ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "t", ["product.index.defaultTitle"], [], ["loc", [null, [56, 24], [56, 58]]], 0, 0]],
                locals: [],
                templates: []
              };
            })();
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 52,
                    "column": 20
                  },
                  "end": {
                    "line": 58,
                    "column": 20
                  }
                },
                "moduleName": "goods-gateway/product/index/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "if", [["get", "content.title", ["loc", [null, [53, 28], [53, 41]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [53, 22], [57, 29]]]]],
              locals: [],
              templates: [child0, child1]
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 51,
                  "column": 18
                },
                "end": {
                  "line": 59,
                  "column": 18
                }
              },
              "moduleName": "goods-gateway/product/index/template.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "link-to", ["product.edit", ["get", "product.id", ["loc", [null, [52, 46], [52, 56]]], 0, 0, 0, 0]], ["class", "edit-button"], 0, null, ["loc", [null, [52, 20], [58, 32]]]]],
            locals: ["content"],
            templates: [child0]
          };
        })();
        var child2 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 63,
                  "column": 18
                },
                "end": {
                  "line": 65,
                  "column": 18
                }
              },
              "moduleName": "goods-gateway/product/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                    ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "product.brandName", ["loc", [null, [64, 20], [64, 41]]], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child3 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 65,
                  "column": 18
                },
                "end": {
                  "line": 67,
                  "column": 18
                }
              },
              "moduleName": "goods-gateway/product/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                    ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "product.items.firstObject.brand.name", ["loc", [null, [66, 20], [66, 60]]], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child4 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 71,
                  "column": 18
                },
                "end": {
                  "line": 73,
                  "column": 18
                }
              },
              "moduleName": "goods-gateway/product/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                    ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "vp-category-display", [], ["category", ["subexpr", "@mut", [["get", "product.category", ["loc", [null, [72, 51], [72, 67]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [72, 20], [72, 69]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child5 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 73,
                  "column": 18
                },
                "end": {
                  "line": 75,
                  "column": 18
                }
              },
              "moduleName": "goods-gateway/product/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                    ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "vp-category-display", [], ["category", ["subexpr", "@mut", [["get", "product.items.firstObject.category", ["loc", [null, [74, 51], [74, 85]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [74, 20], [74, 87]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child6 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 81,
                    "column": 18
                  },
                  "end": {
                    "line": 83,
                    "column": 18
                  }
                },
                "moduleName": "goods-gateway/product/index/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                    ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["content", "product.vendorName", ["loc", [null, [82, 20], [82, 42]]], 0, 0, 0, 0]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 83,
                    "column": 18
                  },
                  "end": {
                    "line": 85,
                    "column": 18
                  }
                },
                "moduleName": "goods-gateway/product/index/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                    ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["content", "product.vendor.name", ["loc", [null, [84, 20], [84, 43]]], 0, 0, 0, 0]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 79,
                  "column": 14
                },
                "end": {
                  "line": 87,
                  "column": 14
                }
              },
              "moduleName": "goods-gateway/product/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              dom.setAttribute(el1, "class", "vendor");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("                ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["block", "if", [["get", "features.upgradeProductsSearch", ["loc", [null, [81, 24], [81, 54]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [81, 18], [85, 25]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        var child7 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 91,
                    "column": 18
                  },
                  "end": {
                    "line": 93,
                    "column": 18
                  }
                },
                "moduleName": "goods-gateway/product/index/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                    ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "moment-format", [["get", "product.nextFeatureStart", ["loc", [null, [92, 36], [92, 60]]], 0, 0, 0, 0], "M/D/YYYY"], [], ["loc", [null, [92, 20], [92, 73]]], 0, 0]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 90,
                  "column": 16
                },
                "end": {
                  "line": 94,
                  "column": 16
                }
              },
              "moduleName": "goods-gateway/product/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "product.nextFeatureStart", ["loc", [null, [91, 24], [91, 48]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [91, 18], [93, 25]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        var child8 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 95,
                    "column": 18
                  },
                  "end": {
                    "line": 97,
                    "column": 18
                  }
                },
                "moduleName": "goods-gateway/product/index/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                    ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "moment-format", [["get", "product.feature.startDate", ["loc", [null, [96, 36], [96, 61]]], 0, 0, 0, 0], "M/D/YYYY"], [], ["loc", [null, [96, 20], [96, 74]]], 0, 0]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 94,
                  "column": 16
                },
                "end": {
                  "line": 98,
                  "column": 16
                }
              },
              "moduleName": "goods-gateway/product/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "product.feature.startDate", ["loc", [null, [95, 24], [95, 49]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [95, 18], [97, 25]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        var child9 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 101,
                  "column": 14
                },
                "end": {
                  "line": 105,
                  "column": 14
                }
              },
              "moduleName": "goods-gateway/product/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("td");
              dom.setAttribute(el1, "class", "product-state");
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["inline", "vp-product-state", [["get", "product.state", ["loc", [null, [103, 37], [103, 50]]], 0, 0, 0, 0]], [], ["loc", [null, [103, 18], [103, 52]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        var child10 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 109,
                    "column": 18
                  },
                  "end": {
                    "line": 114,
                    "column": 18
                  }
                },
                "moduleName": "goods-gateway/product/index/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                    ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "vp-product-variations-count", [], ["count", ["subexpr", "@mut", [["get", "product.itemCount", ["loc", [null, [111, 28], [111, 45]]], 0, 0, 0, 0]], [], [], 0, 0], "activeCount", ["subexpr", "@mut", [["get", "product.activeItemCount", ["loc", [null, [112, 34], [112, 57]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [110, 20], [113, 22]]], 0, 0]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 114,
                    "column": 18
                  },
                  "end": {
                    "line": 116,
                    "column": 18
                  }
                },
                "moduleName": "goods-gateway/product/index/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                    ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "vp-product-variations-count", [], ["items", ["subexpr", "@mut", [["get", "product.items", ["loc", [null, [115, 56], [115, 69]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [115, 20], [115, 71]]], 0, 0]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 108,
                  "column": 16
                },
                "end": {
                  "line": 117,
                  "column": 16
                }
              },
              "moduleName": "goods-gateway/product/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "features.upgradeProductsSearch", ["loc", [null, [109, 24], [109, 54]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [109, 18], [116, 25]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        var child11 = (function () {
          var child0 = (function () {
            var child0 = (function () {
              var child0 = (function () {
                return {
                  meta: {
                    "revision": "Ember@2.8.2",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 124,
                        "column": 22
                      },
                      "end": {
                        "line": 127,
                        "column": 24
                      }
                    },
                    "moduleName": "goods-gateway/product/index/template.hbs"
                  },
                  isEmpty: false,
                  arity: 0,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createComment("");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var morphs = new Array(1);
                    morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                    dom.insertBoundary(fragment, 0);
                    dom.insertBoundary(fragment, null);
                    return morphs;
                  },
                  statements: [["inline", "t", ["product.index.proposeContract"], [], ["loc", [null, [124, 22], [127, 24]]], 0, 0]],
                  locals: [],
                  templates: []
                };
              })();
              return {
                meta: {
                  "revision": "Ember@2.8.2",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 123,
                      "column": 20
                    },
                    "end": {
                      "line": 128,
                      "column": 20
                    }
                  },
                  "moduleName": "goods-gateway/product/index/template.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                      ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["block", "link-to", ["contract.new", ["subexpr", "query-params", [], ["productId", ["get", "product.id", ["loc", [null, [125, 63], [125, 73]]], 0, 0, 0, 0]], ["loc", [null, [125, 39], [125, 74]]], 0, 0]], ["class", "propose-contract-link button-secondary button-small"], 0, null, ["loc", [null, [124, 22], [127, 24]]]]],
                locals: [],
                templates: [child0]
              };
            })();
            var child1 = (function () {
              return {
                meta: {
                  "revision": "Ember@2.8.2",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 129,
                      "column": 20
                    },
                    "end": {
                      "line": 132,
                      "column": 22
                    }
                  },
                  "moduleName": "goods-gateway/product/index/template.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                  dom.insertBoundary(fragment, 0);
                  dom.insertBoundary(fragment, null);
                  return morphs;
                },
                statements: [["inline", "t", ["product.index.viewContracts"], [], ["loc", [null, [129, 20], [132, 22]]], 0, 0]],
                locals: [],
                templates: []
              };
            })();
            var child2 = (function () {
              return {
                meta: {
                  "revision": "Ember@2.8.2",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 133,
                      "column": 20
                    },
                    "end": {
                      "line": 135,
                      "column": 80
                    }
                  },
                  "moduleName": "goods-gateway/product/index/template.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                  dom.insertBoundary(fragment, 0);
                  dom.insertBoundary(fragment, null);
                  return morphs;
                },
                statements: [["inline", "t", ["product.index.viewFeatures"], [], ["loc", [null, [133, 20], [135, 80]]], 0, 0]],
                locals: [],
                templates: []
              };
            })();
            var child3 = (function () {
              var child0 = (function () {
                return {
                  meta: {
                    "revision": "Ember@2.8.2",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 138,
                        "column": 22
                      },
                      "end": {
                        "line": 140,
                        "column": 80
                      }
                    },
                    "moduleName": "goods-gateway/product/index/template.hbs"
                  },
                  isEmpty: false,
                  arity: 0,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createComment("");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var morphs = new Array(1);
                    morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                    dom.insertBoundary(fragment, 0);
                    dom.insertBoundary(fragment, null);
                    return morphs;
                  },
                  statements: [["inline", "t", ["product.index.newFeature"], [], ["loc", [null, [138, 22], [140, 80]]], 0, 0]],
                  locals: [],
                  templates: []
                };
              })();
              return {
                meta: {
                  "revision": "Ember@2.8.2",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 137,
                      "column": 20
                    },
                    "end": {
                      "line": 141,
                      "column": 20
                    }
                  },
                  "moduleName": "goods-gateway/product/index/template.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                      ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["block", "link-to", ["feature.index.new", ["subexpr", "query-params", [], ["productId", ["get", "product.id", ["loc", [null, [139, 68], [139, 78]]], 0, 0, 0, 0]], ["loc", [null, [139, 44], [139, 79]]], 0, 0]], ["class", "new-feature-link button-secondary button-small"], 0, null, ["loc", [null, [138, 22], [140, 80]]]]],
                locals: [],
                templates: [child0]
              };
            })();
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 122,
                    "column": 18
                  },
                  "end": {
                    "line": 142,
                    "column": 18
                  }
                },
                "moduleName": "goods-gateway/product/index/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("                    ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n                    ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n\n");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(4);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
                morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);
                morphs[3] = dom.createMorphAt(fragment, 6, 6, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "if", [["get", "model.authorization.isExternal", ["loc", [null, [123, 26], [123, 56]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [123, 20], [128, 27]]]], ["block", "link-to", ["contract.index", ["subexpr", "query-params", [], ["productId", ["get", "product.id", ["loc", [null, [130, 63], [130, 73]]], 0, 0, 0, 0]], ["loc", [null, [130, 39], [130, 74]]], 0, 0]], ["class", "view-contracts-link button-secondary button-small"], 1, null, ["loc", [null, [129, 20], [132, 22]]]], ["block", "link-to", ["feature", ["subexpr", "query-params", [], ["productId", ["get", "product.id", ["loc", [null, [134, 56], [134, 66]]], 0, 0, 0, 0]], ["loc", [null, [134, 32], [134, 67]]], 0, 0]], ["class", "view-features-link button-secondary button-small"], 2, null, ["loc", [null, [133, 20], [135, 80]]]], ["block", "vp-can", ["write_default"], [], 3, null, ["loc", [null, [137, 20], [141, 31]]]]],
              locals: [],
              templates: [child0, child1, child2, child3]
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 121,
                  "column": 16
                },
                "end": {
                  "line": 143,
                  "column": 16
                }
              },
              "moduleName": "goods-gateway/product/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "vp-dropdown", [], ["icon", "mx-icon-gear mx-icon-24"], 0, null, ["loc", [null, [122, 18], [142, 34]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        var child12 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 146,
                  "column": 16
                },
                "end": {
                  "line": 150,
                  "column": 16
                }
              },
              "moduleName": "goods-gateway/product/index/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                  ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("a");
              dom.setAttribute(el1, "class", "deal-link");
              dom.setAttribute(el1, "target", "_blank");
              var el2 = dom.createTextNode("\n                    ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("span");
              dom.setAttribute(el2, "class", "mx-icon-link mx-icon-16");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var morphs = new Array(1);
              morphs[0] = dom.createAttrMorph(element0, 'href');
              return morphs;
            },
            statements: [["attribute", "href", ["get", "product.buyUrl", ["loc", [null, [147, 62], [147, 76]]], 0, 0, 0, 0], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 41,
                "column": 10
              },
              "end": {
                "line": 153,
                "column": 10
              }
            },
            "moduleName": "goods-gateway/product/index/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            dom.setAttribute(el1, "class", "product");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "product-image");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("              ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "title");
            var el3 = dom.createTextNode("\n                ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("span");
            dom.setAttribute(el3, "class", "product-title");
            var el4 = dom.createTextNode("\n");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("                ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n\n                ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3, "class", "brand");
            var el4 = dom.createTextNode("\n");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("                ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n\n                ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("span");
            dom.setAttribute(el3, "class", "category");
            var el4 = dom.createTextNode("\n");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("                ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n              ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "feature-start-date number");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("              ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "variations number");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("              ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("              ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("              ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var element2 = dom.childAt(element1, [3]);
            var morphs = new Array(11);
            morphs[0] = dom.createAttrMorph(element1, 'id');
            morphs[1] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
            morphs[2] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
            morphs[3] = dom.createMorphAt(dom.childAt(element2, [3]), 1, 1);
            morphs[4] = dom.createMorphAt(dom.childAt(element2, [5]), 1, 1);
            morphs[5] = dom.createMorphAt(element1, 5, 5);
            morphs[6] = dom.createMorphAt(dom.childAt(element1, [7]), 1, 1);
            morphs[7] = dom.createMorphAt(element1, 9, 9);
            morphs[8] = dom.createMorphAt(dom.childAt(element1, [11]), 1, 1);
            morphs[9] = dom.createMorphAt(dom.childAt(element1, [13]), 1, 1);
            morphs[10] = dom.createMorphAt(dom.childAt(element1, [15]), 1, 1);
            return morphs;
          },
          statements: [["attribute", "id", ["concat", [["get", "product.id", ["loc", [null, [42, 22], [42, 32]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "if", [["get", "product.images.firstObject.imageServiceUri", ["loc", [null, [44, 22], [44, 64]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [44, 16], [46, 23]]]], ["block", "vp-localized-content", [], ["contents", ["subexpr", "@mut", [["get", "product.localizedContents", ["loc", [null, [51, 51], [51, 76]]], 0, 0, 0, 0]], [], [], 0, 0]], 1, null, ["loc", [null, [51, 18], [59, 43]]]], ["block", "if", [["get", "features.upgradeProductsSearch", ["loc", [null, [63, 24], [63, 54]]], 0, 0, 0, 0]], [], 2, 3, ["loc", [null, [63, 18], [67, 25]]]], ["block", "if", [["get", "features.upgradeProductsSearch", ["loc", [null, [71, 24], [71, 54]]], 0, 0, 0, 0]], [], 4, 5, ["loc", [null, [71, 18], [75, 25]]]], ["block", "vp-can", ["read_default"], [], 6, null, ["loc", [null, [79, 14], [87, 25]]]], ["block", "if", [["get", "features.upgradeProductsSearch", ["loc", [null, [90, 22], [90, 52]]], 0, 0, 0, 0]], [], 7, 8, ["loc", [null, [90, 16], [98, 23]]]], ["block", "if", [["subexpr", "enabled", ["searchProductStates"], [], ["loc", [null, [101, 20], [101, 51]]], 0, 0]], [], 9, null, ["loc", [null, [101, 14], [105, 21]]]], ["block", "link-to", ["inventory.index", ["subexpr", "query-params", [], ["productId", ["get", "product.id", ["loc", [null, [108, 69], [108, 79]]], 0, 0, 0, 0]], ["loc", [null, [108, 45], [108, 80]]], 0, 0]], ["class", "inventory-link"], 10, null, ["loc", [null, [108, 16], [117, 28]]]], ["block", "if", [["get", "features.contractNavigation", ["loc", [null, [121, 22], [121, 49]]], 0, 0, 0, 0]], [], 11, null, ["loc", [null, [121, 16], [143, 23]]]], ["block", "if", [["get", "product.buyUrl", ["loc", [null, [146, 22], [146, 36]]], 0, 0, 0, 0]], [], 12, null, ["loc", [null, [146, 16], [150, 23]]]]],
          locals: ["product"],
          templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11, child12]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/product/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("table");
          dom.setAttribute(el1, "id", "products-table");
          dom.setAttribute(el1, "class", "search-results table-lined");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("thead");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("tr");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "id", "image-header");
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment(" image ");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "class", "title");
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "class", "number");
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.setAttribute(el4, "class", "variations number");
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("th");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("tbody");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          dom.setAttribute(el2, "id", "products-paginator");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1]);
          var element4 = dom.childAt(element3, [1, 1]);
          var morphs = new Array(7);
          morphs[0] = dom.createMorphAt(dom.childAt(element4, [3]), 1, 1);
          morphs[1] = dom.createMorphAt(element4, 5, 5);
          morphs[2] = dom.createMorphAt(dom.childAt(element4, [7]), 1, 1);
          morphs[3] = dom.createMorphAt(element4, 9, 9);
          morphs[4] = dom.createMorphAt(dom.childAt(element4, [11]), 1, 1);
          morphs[5] = dom.createMorphAt(dom.childAt(element3, [3]), 1, 1);
          morphs[6] = dom.createMorphAt(dom.childAt(fragment, [3, 1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["product.product"], [], ["loc", [null, [12, 14], [12, 37]]], 0, 0], ["block", "vp-can", ["read_default"], [], 0, null, ["loc", [null, [15, 12], [19, 23]]]], ["inline", "t", ["product.nextFeature"], [], ["loc", [null, [22, 14], [22, 41]]], 0, 0], ["block", "if", [["subexpr", "enabled", ["searchProductStates"], [], ["loc", [null, [25, 18], [25, 49]]], 0, 0]], [], 1, null, ["loc", [null, [25, 12], [29, 19]]]], ["inline", "t", ["product.variations"], [], ["loc", [null, [32, 14], [32, 40]]], 0, 0], ["block", "each", [["get", "model.products", ["loc", [null, [41, 18], [41, 32]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [41, 10], [153, 19]]]], ["inline", "mx-paginator", [], ["action", "goToPage", "meta", ["subexpr", "@mut", [["get", "model.products.meta", ["loc", [null, [159, 48], [159, 67]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [159, 10], [159, 69]]], 0, 0]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 162,
              "column": 4
            },
            "end": {
              "line": 166,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/product/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["product.index.noProducts"], [], ["loc", [null, [164, 8], [164, 40]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 169,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/product/index/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("section");
        dom.setAttribute(el2, "id", "product-list");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0, 1]), 1, 1);
        return morphs;
      },
      statements: [["block", "if", [["get", "model.products", ["loc", [null, [3, 10], [3, 24]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [3, 4], [166, 11]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/product/item/adapter', ['exports', 'goods-gateway/application/adapter', 'goods-gateway/config/environment'], function (exports, _goodsGatewayApplicationAdapter, _goodsGatewayConfigEnvironment) {

  var upgradeRequests = _goodsGatewayConfigEnvironment['default'].featureFlags.upgradeGoodsStoresAPIs;

  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/v1',

    pathForType: function pathForType() {
      return 'items';
    },

    queryParams: {
      upgrade: upgradeRequests
    },

    updateOptions: {
      method: 'POST',
      excludeId: true
    }
  });
});
define('goods-gateway/product/item/attribute/localized-content/model', ['exports', 'model-fragments', 'ember-data'], function (exports, _modelFragments, _emberData) {
  exports['default'] = _modelFragments['default'].Fragment.extend({
    attrValue: _emberData['default'].attr('string'),
    locale: _emberData['default'].attr('string')
  });
});
define('goods-gateway/product/item/attribute/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {
  exports['default'] = _modelFragments['default'].Fragment.extend({
    attrValueId: _emberData['default'].attr('string'),
    attrNameId: _emberData['default'].attr('string'),
    localizedContents: _modelFragments['default'].fragmentArray('product/item/attribute/localized-content')
  });
});
define('goods-gateway/product/item/brand/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {
  exports['default'] = _modelFragments['default'].Fragment.extend({
    name: _emberData['default'].attr('string')
  });
});
define('goods-gateway/product/item/localized-content/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {
  exports['default'] = _modelFragments['default'].Fragment.extend({
    title: _emberData['default'].attr('string'),
    description: _emberData['default'].attr('string'),
    locale: _emberData['default'].attr('string')
  });
});
define('goods-gateway/product/item/measurement/model', ['exports', 'ember-data', 'model-fragments', 'ember-validations', 'goods-gateway/constants/validations'], function (exports, _emberData, _modelFragments, _emberValidations, _goodsGatewayConstantsValidations) {
  exports['default'] = _modelFragments['default'].Fragment.extend(_emberValidations['default'], {
    unit: _emberData['default'].attr('string'),
    value: _emberData['default'].attr('number'),

    validations: {
      unit: _goodsGatewayConstantsValidations.MEASUREMENT_UNIT_VALIDATION,
      value: _goodsGatewayConstantsValidations.MEASUREMENT_VALUE_VALIDATION
    }
  });
});
define('goods-gateway/product/item/model', ['exports', 'model-fragments', 'ember-data', 'ember-validations', 'ember', 'goods-gateway/constants/regexes', 'goods-gateway/constants/validations'], function (exports, _modelFragments, _emberData, _emberValidations, _ember, _goodsGatewayConstantsRegexes, _goodsGatewayConstantsValidations) {
  exports['default'] = _emberData['default'].Model.extend(_emberValidations['default'], {
    approvalStatus: _emberData['default'].attr('string', { defaultValue: 'pending' }),
    attachments: _emberData['default'].hasMany('attachment'),
    attributes: _modelFragments['default'].fragmentArray('product/item/attribute'),
    autoApprovalStatus: _emberData['default'].attr('string', { defaultValue: 'pending' }),
    autoRejectionReasons: _emberData['default'].attr('raw', { defaultValue: function defaultValue() {
        return [];
      } }),
    brand: _modelFragments['default'].fragment('product/item/brand', { defaultValue: {} }),
    buyUrl: _emberData['default'].attr('string'),
    category: _emberData['default'].belongsTo('category'),
    height: _modelFragments['default'].fragment('product/item/measurement', { defaultValue: {} }),
    images: _modelFragments['default'].fragmentArray('product/image'),
    isBundle: _emberData['default'].attr('boolean', { defaultValue: false }),
    isHazmat: _emberData['default'].attr('boolean', { defaultValue: false }),
    isLtl: _emberData['default'].attr('boolean', { defaultValue: false }),
    length: _modelFragments['default'].fragment('product/item/measurement', { defaultValue: {} }),
    localizedContents: _modelFragments['default'].fragmentArray('product/item/localized-content'),
    manualApprovalStatus: _emberData['default'].attr('string', { defaultValue: 'pending' }),
    manualRejectionReason: _emberData['default'].attr('string'),
    manufacturer: _emberData['default'].attr('string'),
    modelNumber: _emberData['default'].attr('string'),
    offers: _emberData['default'].hasMany('product/item/offer'),
    packageHeight: _modelFragments['default'].fragment('product/item/measurement', { defaultValue: {} }),
    packageLength: _modelFragments['default'].fragment('product/item/measurement', { defaultValue: {} }),
    packageWeight: _modelFragments['default'].fragment('product/item/measurement', { defaultValue: {} }),
    packageWidth: _modelFragments['default'].fragment('product/item/measurement', { defaultValue: {} }),
    product: _emberData['default'].belongsTo('product'),
    productId: _emberData['default'].attr('string'),
    regionalizedContents: _modelFragments['default'].fragmentArray('product/item/regionalized-content'),
    state: _emberData['default'].attr('string', { defaultValue: 'active' }),
    universalId: _modelFragments['default'].fragment('product/item/universal-id', { defaultValue: {} }),
    vendorSku: _emberData['default'].attr('string'),
    weight: _modelFragments['default'].fragment('product/item/measurement', { defaultValue: {} }),
    width: _modelFragments['default'].fragment('product/item/measurement', { defaultValue: {} }),

    // helpers
    hasInvalidChildren: _ember['default'].computed('offers.@each.isInvalid', 'offers.@each.hasInvalidChildren', 'regionalizedContents.@each.isInvalid', function () {
      return this.get('offers').isAny('isInvalid') || this.get('offers').isAny('hasInvalidChildren') || this.get('regionalizedContents').isAny('isInvalid');
    }),

    _attributeValidationContentCache: _ember['default'].computed('attributes.[]', function () {
      return this.get('attributes').map(function (attribute) {
        return attribute.get('localizedContents.firstObject');
      });
    }),

    _attributeValidationCache: _ember['default'].computed('category.variantCategories.[]', 'attributes.@each.attrNameId', 'attributes.@each.attrValueId', '_attributeValidationContentCache.@each.attrValue', function () {
      var _this = this;

      this.get('_attributeValidationContentCache.firstObject.attrValue'); // open to suggestions, thought init would work
      return this.get('attributes').sortBy('attrNameId').reduce(function (cache, attribute) {
        var attrNameId = attribute.get('attrNameId');
        if (!_this._canBeVariationAttribute(attrNameId)) {
          return cache;
        }

        var value = attribute.get('localizedContents.firstObject.attrValue') || attribute.get('attrValueId');
        return cache + (attrNameId + ':' + value + '|');
      }, '');
    }),

    _canBeVariationAttribute: function _canBeVariationAttribute(attrNameId) {
      var variantCategories = this.get('category.variantCategories');
      if (!variantCategories) {
        return false;
      }
      var variantCategory = variantCategories.findBy('id', attrNameId);
      if (!variantCategory) {
        return false;
      }
      return variantCategory.get('canBeVariation');
    },

    validations: {
      'attributes': {
        attributePresence: true
      },
      attributeUniqueness: {
        attributes: true
      },
      'brand.name': _goodsGatewayConstantsValidations.BRAND_MANUFACTURER_VALIDATION,
      'height.unit': _goodsGatewayConstantsValidations.MEASUREMENT_UNIT_VALIDATION,
      'height.value': _goodsGatewayConstantsValidations.MEASUREMENT_VALUE_VALIDATION,
      'length.unit': _goodsGatewayConstantsValidations.MEASUREMENT_UNIT_VALIDATION,
      'length.value': _goodsGatewayConstantsValidations.MEASUREMENT_VALUE_VALIDATION,
      'manufacturer': _goodsGatewayConstantsValidations.BRAND_MANUFACTURER_VALIDATION,
      'modelNumber': {
        'vp-format': {
          'with': _goodsGatewayConstantsRegexes.LOCALIZED_CONTENT_REGEX,
          allowBlank: true,
          translationKey: 'localizedContent'
        },
        length: {
          maximum: 64
        }
      },
      'packageHeight.unit': _goodsGatewayConstantsValidations.MEASUREMENT_UNIT_VALIDATION,
      'packageHeight.value': _goodsGatewayConstantsValidations.MEASUREMENT_VALUE_VALIDATION,
      'packageWeight.unit': _goodsGatewayConstantsValidations.MEASUREMENT_UNIT_VALIDATION,
      'packageWeight.value': _goodsGatewayConstantsValidations.MEASUREMENT_VALUE_VALIDATION,
      'packageWidth.unit': _goodsGatewayConstantsValidations.MEASUREMENT_UNIT_VALIDATION,
      'packageWidth.value': _goodsGatewayConstantsValidations.MEASUREMENT_VALUE_VALIDATION,
      'packageLength.unit': _goodsGatewayConstantsValidations.MEASUREMENT_UNIT_VALIDATION,
      'packageLength.value': _goodsGatewayConstantsValidations.MEASUREMENT_VALUE_VALIDATION,
      'universalId.type': {
        presence: true
      },
      'universalId.value': {
        presence: true,
        universalId: true
      },
      'vendorSku': {
        presence: true,
        length: {
          maximum: 40
        }
      },
      'weight.unit': _goodsGatewayConstantsValidations.MEASUREMENT_UNIT_VALIDATION,
      'weight.value': _goodsGatewayConstantsValidations.MEASUREMENT_VALUE_VALIDATION,
      'width.unit': _goodsGatewayConstantsValidations.MEASUREMENT_UNIT_VALIDATION,
      'width.value': _goodsGatewayConstantsValidations.MEASUREMENT_VALUE_VALIDATION
    }
  });
});
define('goods-gateway/product/item/offer/cost/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {
  exports['default'] = _modelFragments['default'].Fragment.extend({
    amount: _emberData['default'].attr('number'),
    currencyCode: _emberData['default'].attr('string', { defaultValue: 'USD' })
  });
});
define('goods-gateway/product/item/offer/fulfillment-option/model', ['exports', 'ember-data', 'model-fragments', 'ember-validations'], function (exports, _emberData, _modelFragments, _emberValidations) {
  exports['default'] = _modelFragments['default'].Fragment.extend(_emberValidations['default'], {
    freightAllowance: _emberData['default'].attr('number'),
    shippingCost: _modelFragments['default'].fragment('product/item/offer/cost', { defaultValue: {} }),
    effectiveShippingCost: _modelFragments['default'].fragment('product/item/offer/cost', { defaultValue: {} }),
    warehouseId: _emberData['default'].attr('string'),
    fulfillmentMethod: _emberData['default'].attr('string'),
    validations: {
      'shippingCost.amount': {
        length: {
          maximum: 10
        },
        numericality: {
          allowBlank: true,
          onlyInteger: true,
          greaterThanOrEqualTo: 0
        }
      }
    }
  });
});
define('goods-gateway/product/item/offer/fulfillment-option/serializer', ['exports', 'ember-data', 'goods-gateway/application/serializer'], function (exports, _emberData, _goodsGatewayApplicationSerializer) {
  exports['default'] = _goodsGatewayApplicationSerializer['default'].extend(_emberData['default'].EmbeddedRecordsMixin, {
    attrs: {
      effectiveShippingCost: { serialize: false }
    }
  });
});
define('goods-gateway/product/item/offer/model', ['exports', 'ember', 'ember-data', 'model-fragments', 'ember-validations'], function (exports, _ember, _emberData, _modelFragments, _emberValidations) {
  exports['default'] = _emberData['default'].Model.extend(_emberValidations['default'], {
    contractType: _emberData['default'].attr('string'),
    discountAllowance: _emberData['default'].attr('number'),
    isActive: _emberData['default'].attr('boolean', { defaultValue: true }),
    isStickyPrice: _emberData['default'].attr('boolean', { defaultValue: false }),
    itemCost: _modelFragments['default'].fragment('product/item/offer/cost', { defaultValue: {} }),
    fulfillmentOptions: _modelFragments['default'].fragmentArray('product/item/offer/fulfillment-option', { defaultValue: function defaultValue() {
        return [];
      } }),
    originCountry: _emberData['default'].attr('string'),
    quantityOnHand: _emberData['default'].attr('number'),
    sellPrice: _modelFragments['default'].fragment('product/item/offer/cost', { defaultValue: {} }),
    state: _emberData['default'].attr('string'), // draft, approved, submitted, rejected
    hasInvalidChildren: _ember['default'].computed('fulfillmentOptions.@each.isInvalid', function () {
      return this.get('fulfillmentOptions').isAny('isInvalid');
    }),

    validations: {
      'itemCost.amount': {
        presence: true,
        length: {
          maximum: 10
        },
        numericality: {
          allowBlank: false,
          onlyInteger: true,
          greaterThan: 0
        }
      },
      'originCountry': {
        presence: true
      },
      'quantityOnHand': {
        length: {
          maximum: 10
        },
        numericality: {
          allowBlank: true,
          onlyInteger: true,
          greaterThanOrEqualTo: 0
        }
      }
    }
  });
});
define('goods-gateway/product/item/regionalized-content/model', ['exports', 'model-fragments', 'ember-data', 'ember-validations'], function (exports, _modelFragments, _emberData, _emberValidations) {
  exports['default'] = _modelFragments['default'].Fragment.extend(_emberValidations['default'], {
    countryCode: _emberData['default'].attr('string'),
    map: _modelFragments['default'].fragment('product/item/offer/cost', { defaultValue: {} }),
    msrp: _modelFragments['default'].fragment('product/item/offer/cost', { defaultValue: {} }),
    validations: {
      'map.amount': {
        length: {
          minimum: 0,
          maximum: 10
        },
        numericality: {
          allowBlank: true,
          onlyInteger: true,
          greaterThanOrEqualTo: 0
        }
      },
      'msrp.amount': {
        length: {
          minimum: 1,
          maximum: 10
        },
        numericality: {
          onlyInteger: true,
          greaterThan: 0
        }
      }
    }
  });
});
define('goods-gateway/product/item/regionalized-content/serializer', ['exports', 'ember', 'goods-gateway/application/serializer'], function (exports, _ember, _goodsGatewayApplicationSerializer) {
  exports['default'] = _goodsGatewayApplicationSerializer['default'].extend({
    serialize: function serialize(record) {
      var serializedRecord = this._super(record);

      // map is not required, but map.amount is required if map.unit is set,
      // so just remove map altogether if the amount is null
      if (_ember['default'].typeOf(serializedRecord.map.amount) !== 'number') {
        delete serializedRecord.map;
      }

      return serializedRecord;
    }
  });
});
define('goods-gateway/product/item/serializer', ['exports', 'ember-data', 'goods-gateway/application/serializer'], function (exports, _emberData, _goodsGatewayApplicationSerializer) {
  exports['default'] = _goodsGatewayApplicationSerializer['default'].extend(_emberData['default'].EmbeddedRecordsMixin, {
    apiRoot: 'item',

    attrs: {
      product: {
        embedded: 'never'
      },
      attachments: {
        embedded: 'always'
      },
      offers: {
        embedded: 'always'
      }
    },

    keyForRelationship: function keyForRelationship(key) {
      if (key === 'category') {
        return 'categoryId';
      } else {
        return this._super.apply(this, arguments);
      }
    },

    modelNameFromPayloadKey: function modelNameFromPayloadKey() {
      return 'product/item';
    },

    serialize: function serialize(record) {
      return this._super(record, { includeId: true });
    }
  });
});
define('goods-gateway/product/item/universal-id/model', ['exports', 'ember-data', 'model-fragments', 'ember-validations'], function (exports, _emberData, _modelFragments, _emberValidations) {
  exports['default'] = _modelFragments['default'].Fragment.extend(_emberValidations['default'], {
    type: _emberData['default'].attr('string'),
    value: _emberData['default'].attr('string'),

    validations: {
      type: { presence: true },
      value: { presence: true }
    }
  });
});
define('goods-gateway/product/localized-content/model', ['exports', 'ember-data', 'model-fragments/fragment', 'ember-validations', 'goods-gateway/utils/ember-helpers', 'goods-gateway/constants/regexes'], function (exports, _emberData, _modelFragmentsFragment, _emberValidations, _goodsGatewayUtilsEmberHelpers, _goodsGatewayConstantsRegexes) {
  exports['default'] = _modelFragmentsFragment['default'].extend(_emberValidations['default'], {
    boxContents: _emberData['default'].attr('string'),
    bulletPoints: _emberData['default'].attr('raw', { defaultValue: _goodsGatewayUtilsEmberHelpers.defaultArray }),
    description: _emberData['default'].attr('string'),
    locale: _emberData['default'].attr('string'),
    title: _emberData['default'].attr('string'),

    validations: {
      bulletPoints: { bulletPoints: true },
      description: {
        format: {
          allowBlank: true
        },
        presence: true,
        length: {
          maximum: 2000
        }
      },

      boxContents: {
        format: {
          'with': _goodsGatewayConstantsRegexes.MULTILINE_LOCALIZED_CONTENT_REGEX,
          allowBlank: true,
          message: "allowed characters are [a-zA-Z0-9 .-,'\"&%*#@!?:;()/]"
        },
        length: {
          maximum: 256
        }
      },

      locale: {
        presence: true
      },

      title: {
        format: {
          'with': _goodsGatewayConstantsRegexes.LOCALIZED_CONTENT_REGEX,
          allowBlank: true,
          message: "allowed characters are [a-zA-Z0-9 .-,'\"&%*#@!?:;()/]"
        },
        presence: true,
        length: {
          maximum: 80
        }
      }
    }
  });
});
define('goods-gateway/product/model', ['exports', 'ember', 'ember-data', 'model-fragments/attributes', 'ember-validations', 'goods-gateway/constants/regexes', 'goods-gateway/config/environment'], function (exports, _ember, _emberData, _modelFragmentsAttributes, _emberValidations, _goodsGatewayConstantsRegexes, _goodsGatewayConfigEnvironment) {

  var defaultSourceName = function defaultSourceName() {
    return _goodsGatewayConfigEnvironment['default'].featureFlags.useGatewaySource ? 'gateway' : 'commercehub';
  };

  var URL_VALIDATION = {
    'vp-format': {
      'with': _goodsGatewayConstantsRegexes.URL_REGEX,
      allowBlank: true,
      translationKey: 'url'
    }
  };

  var model = _emberData['default'].Model.extend(_emberValidations['default'], {
    i18n: _ember['default'].inject.service(),

    attachments: _emberData['default'].hasMany('attachment'),
    buyUrl: _emberData['default'].attr('string'),
    category: _ember['default'].computed.oneWay('items.firstObject.category'),
    everFeatured: _emberData['default'].attr('boolean'),
    feature: _emberData['default'].belongsTo('feature'), // this only returns, the next upcoming feature
    features: _emberData['default'].hasMany('feature'),
    images: (0, _modelFragmentsAttributes.fragmentArray)('product/image'),
    items: _emberData['default'].hasMany('product/item'),
    localizedContents: (0, _modelFragmentsAttributes.fragmentArray)('product/localized-content'),
    msrpSiteLink: _emberData['default'].attr('string'),
    retailSiteLink: _emberData['default'].attr('string'),
    sourceName: _emberData['default'].attr('string', { defaultValue: defaultSourceName }),
    state: _emberData['default'].attr('string'),
    vendorGroupId: _emberData['default'].attr('string'),
    vendor: _emberData['default'].belongsTo('vendor'),

    // helpers
    hasInvalidChildren: _ember['default'].computed('items.@each.hasInvalidChildren', 'items.@each.isInvalid', 'localizedContents.@each.isValid', function () {
      return this.get('items').isAny('hasInvalidChildren') || this.get('items').isAny('isInvalid') || this.get('localizedContents').isAny('isInvalid');
    }),

    validations: {
      'vendor.id': { presence: true },
      localizedContents: { localizedContents: true },
      msrpSiteLink: URL_VALIDATION,
      retailSiteLink: URL_VALIDATION,
      vendorGroupId: {
        length: {
          maximum: 40
        }
      }
    },

    _universalIds: _ember['default'].computed.map('items', function (item) {
      return item.get('universalId');
    }),

    _universalIdValues: _ember['default'].computed('_universalIds.@each.value', function () {
      return this.get('_universalIds').mapBy('value');
    })
  });

  exports['default'] = model;
});
define("goods-gateway/product/new-loading/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/product/new-loading/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "vp-loading-spinner", ["loc", [null, [1, 0], [1, 22]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/product/new/route', ['exports', 'goods-gateway/product/base/route'], function (exports, _goodsGatewayProductBaseRoute) {
  exports['default'] = _goodsGatewayProductBaseRoute['default'].extend({});
});
define("goods-gateway/product/new/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 6
            },
            "end": {
              "line": 13,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/product/new/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [12, 20], [12, 35]]], 0, 0, 0, 0], "allProducts"], [], ["loc", [null, [12, 12], [12, 50]]], 0, 0]], [], ["loc", [null, [12, 8], [12, 52]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 19,
                  "column": 10
                },
                "end": {
                  "line": 21,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/product/new/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["vp-product-nav.basicInformation"], [], ["loc", [null, [20, 12], [20, 51]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 18,
                "column": 8
              },
              "end": {
                "line": 22,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/product/new/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "link-to", ["product.new"], ["class", "top-nav-list-item"], 0, null, ["loc", [null, [19, 10], [21, 22]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 24,
                "column": 8
              },
              "end": {
                "line": 28,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/product/new/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("a");
            dom.setAttribute(el1, "class", "top-nav-list-item");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "t", ["vp-product-nav.images"], [], ["loc", [null, [26, 12], [26, 41]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 17,
              "column": 6
            },
            "end": {
              "line": 29,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/product/new/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-top-nav-list-item", [], [], 0, null, ["loc", [null, [18, 8], [22, 33]]]], ["block", "mx-top-nav-list-item", [], [], 1, null, ["loc", [null, [24, 8], [28, 33]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/product/new/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "products-edit");
        dom.setAttribute(el1, "class", "md-column");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("section");
        dom.setAttribute(el2, "id", "product-navigation");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("h1");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "id", "product-navigation-links");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("section");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "id", "product-and-item-forms");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [4]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(element1, [1]);
        var element3 = dom.childAt(element0, [3, 1, 1]);
        var morphs = new Array(8);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createAttrMorph(element1, 'class');
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
        morphs[4] = dom.createMorphAt(element2, 3, 3);
        morphs[5] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
        morphs[6] = dom.createMorphAt(element3, 1, 1);
        morphs[7] = dom.createMorphAt(element3, 3, 3);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "page-title", [["subexpr", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [1, 19], [1, 34]]], 0, 0, 0, 0], "title"], [], ["loc", [null, [1, 11], [1, 43]]], 0, 0]], [], ["loc", [null, [1, 8], [1, 44]]], 0, 0]], [], ["loc", [null, [1, 0], [1, 46]]], 0, 0], ["inline", "page-title", [["get", "model.product.localizedContents.firstObject.title", ["loc", [null, [2, 8], [2, 57]]], 0, 0, 0, 0]], [], ["loc", [null, [2, 0], [2, 59]]], 0, 0], ["attribute", "class", ["concat", ["row  ", ["subexpr", "if", [["subexpr", "eq", [["get", "model.product.category.children.length", ["loc", [null, [5, 56], [5, 94]]], 0, 0, 0, 0], 0], [], ["loc", [null, [5, 52], [5, 97]]], 0, 0], "leaf"], [], ["loc", [null, [5, 47], [5, 106]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [8, 20], [8, 35]]], 0, 0, 0, 0], "title"], [], ["loc", [null, [8, 12], [8, 44]]], 0, 0]], [], ["loc", [null, [8, 8], [8, 46]]], 0, 0], ["block", "link-to", ["inventory"], [], 0, null, ["loc", [null, [11, 6], [13, 18]]]], ["block", "mx-top-nav-list", [], [], 1, null, ["loc", [null, [17, 6], [29, 26]]]], ["inline", "vp-product", [], ["deleteItem", "deleteItem", "product", ["subexpr", "@mut", [["get", "model.product", ["loc", [null, [38, 18], [38, 31]]], 0, 0, 0, 0]], [], [], 0, 0], "save", "save", "selectVendor", "selectVendor", "setCategory", "setCategory"], ["loc", [null, [36, 8], [42, 10]]], 0, 0], ["content", "vp-taxonomy-request-link", ["loc", [null, [43, 8], [43, 36]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/product/route', ['exports', 'ember', 'goods-gateway/mixins/gateway-route', 'goods-gateway/mixins/search', 'goods-gateway/mixins/params'], function (exports, _ember, _goodsGatewayMixinsGatewayRoute, _goodsGatewayMixinsSearch, _goodsGatewayMixinsParams) {
  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsGatewayRoute['default'], _goodsGatewayMixinsSearch['default'], _goodsGatewayMixinsParams['default'], {
    authorization: _ember['default'].inject.service('authorization'),
    gpapi: _ember['default'].inject.service(),

    queryParams: { page: { refreshModel: true } },
    searchConfig: {
      brand: {},
      categoryIds: {},
      permalink: {},
      productState: {},
      source: {},
      title: {},
      vendorId: {}
    },
    searchParamOverrides: {
      productState: 'state'
    },

    init: function init() {
      this.initRouteSearch();
    },

    model: function model(params) {
      return _ember['default'].RSVP.hash({
        authorization: this.get('authorization'),
        searchFilters: this.getSearchFilters(params),
        searchEngines: this.get('activeSearchEngines')
      });
    },

    _transition: function _transition(params) {
      params.page = undefined;
      this.transitionTo({ queryParams: params });
    },

    actions: {
      removeAllSearches: function removeAllSearches() {
        var currentParams = this.paramsFor('product');
        var newParams = this.removeAllSearchParams(currentParams);
        this._transition(newParams);
      },

      removeSearch: function removeSearch(searchKey, searchValue) {
        var currentParams = this.paramsFor('product');
        var newParams = this.removeSearchParam(searchKey, searchValue, currentParams);
        this._transition(newParams);
      },

      search: function search(criteria) {
        var currentParams = this.paramsFor('product');
        var newParams = this.addSearchParam(criteria, currentParams);
        this._transition(newParams);
      }
    }
  });
});
define('goods-gateway/product/search/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/v1',

    queryParams: {},

    urlForQuery: function urlForQuery() {
      return this.get('namespace') + '/products/search';
    }
  });
});
define('goods-gateway/product/search/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {
  exports['default'] = _emberData['default'].Model.extend({
    activeItemCount: _emberData['default'].attr('number'),
    brandName: _emberData['default'].attr('string'),
    buyUrl: _emberData['default'].attr('string'),
    category: _emberData['default'].belongsTo('category'),
    images: _modelFragments['default'].fragmentArray('product/image'),
    itemCount: _emberData['default'].attr('number'),
    localizedContents: _modelFragments['default'].fragmentArray('product/localized-content'),
    nextFeatureEnd: _emberData['default'].attr('date'),
    nextFeatureStart: _emberData['default'].attr('date'),
    state: _emberData['default'].attr('string'),
    vendorName: _emberData['default'].attr('string')
  });
});
define('goods-gateway/product/search/serializer', ['exports', 'ember-data', 'goods-gateway/application/serializer'], function (exports, _emberData, _goodsGatewayApplicationSerializer) {
  exports['default'] = _goodsGatewayApplicationSerializer['default'].extend(_emberData['default'].EmbeddedRecordsMixin, {
    keyForRelationship: function keyForRelationship(key) {
      if (key === 'vendor') {
        return 'vendorId';
      } else if (key === 'category') {
        return 'categoryId';
      } else {
        return this._super.apply(this, arguments);
      }
    },

    modelNameFromPayloadKey: function modelNameFromPayloadKey(key) {
      if (key === 'products') {
        return 'product/search';
      } else {
        return this._super.apply(this, arguments);
      }
    }
  });
});
define('goods-gateway/product/serializer', ['exports', 'ember', 'ember-data', 'goods-gateway/application/serializer'], function (exports, _ember, _emberData, _goodsGatewayApplicationSerializer) {
  exports['default'] = _goodsGatewayApplicationSerializer['default'].extend(_emberData['default'].EmbeddedRecordsMixin, {
    attrs: {
      items: {
        embedded: 'always'
      },
      attachments: {
        embedded: 'always'
      },
      feature: {
        embedded: 'always'
      }
    },

    keyForRelationship: function keyForRelationship(key) {
      if (key === 'vendor') {
        return 'vendorId';
      } else {
        return this._super.apply(this, arguments);
      }
    },

    normalize: function normalize(modelClass, resourceHash) {
      if (resourceHash.items) {
        resourceHash.items = resourceHash.items.rejectBy('state', 'inactive');
      }
      return this._super.apply(this, arguments);
    },

    serialize: function serialize(record) {
      var json = this._super(record, { includeId: true });

      delete json.everFeatured;
      delete json.state;

      if (_ember['default'].isBlank(json.vendorGroupId)) {
        json.vendorGroupId = null;
      }

      this._defaultItemValues(json);
      return json;
    },

    _defaultItemValues: function _defaultItemValues(product) {
      var items = product.items;

      product.localizedContents.forEach(function (content) {
        var locale = content.locale;
        var productTitle = content.title;

        items.forEach(function (item) {
          var content = item.localizedContents.findBy('locale', locale);

          if (content) {
            content.title = productTitle;
          } else {
            item.localizedContents.pushObject({
              locale: locale,
              title: productTitle
            });
          }
        });
      });
    }
  });
});
define("goods-gateway/product/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/product/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h1");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "products-index");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "product-actions");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [4]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(element0, [1, 1]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element0, [3, 1]), 1, 1);
        morphs[4] = dom.createMorphAt(element0, 5, 5);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "page-title", [["subexpr", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [1, 19], [1, 34]]], 0, 0, 0, 0], "title"], [], ["loc", [null, [1, 11], [1, 43]]], 0, 0]], [], ["loc", [null, [1, 8], [1, 44]]], 0, 0]], [], ["loc", [null, [1, 0], [1, 46]]], 0, 0], ["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [3, 16], [3, 31]]], 0, 0, 0, 0], "title"], [], ["loc", [null, [3, 8], [3, 40]]], 0, 0]], [], ["loc", [null, [3, 4], [3, 42]]], 0, 0], ["inline", "vp-x-search", [], ["select", "search", "searches", ["subexpr", "@mut", [["get", "model.searchEngines", ["loc", [null, [10, 17], [10, 36]]], 0, 0, 0, 0]], [], [], 0, 0], "debounceTime", 200], ["loc", [null, [8, 6], [12, 8]]], 0, 0], ["inline", "vp-x-search-current-filters", [], ["removeAllSearches", "removeAllSearches", "removeSearch", "removeSearch", "restoreSearch", "restoreSearch", "saveSearch", "saveSearch", "searches", ["subexpr", "@mut", [["get", "model.searchFilters", ["loc", [null, [23, 17], [23, 36]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [18, 6], [24, 8]]], 0, 0], ["content", "outlet", ["loc", [null, [28, 2], [28, 12]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/product/upload/route', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {
  exports['default'] = _ember['default'].Route.extend({
    authorization: _ember['default'].inject.service(),
    request: _ember['default'].inject.service(),
    showTemplateUi: _goodsGatewayConfigEnvironment['default'].featureFlags.showTemplateUi,

    model: function model() {
      var vendorId = undefined;
      var vendor = this.get('authorization.firstVendor');
      if (vendor) {
        vendorId = vendor.id;
      }

      var modelObj = {
        productUploads: this.getUploads(vendorId),
        catalogExports: this.getExports(vendorId)
      };

      if (this.get('showTemplateUi')) {
        modelObj.MRTTaxonomy = this.get('store').findAll('taxonomy');
      }

      return _ember['default'].RSVP.hash(modelObj);
    },

    getUploads: function getUploads(vendorId) {
      if (vendorId) {
        return this.store.query('upload', { vendorId: vendorId });
      }
      return this.store.findAll('upload');
    },

    getExports: function getExports(vendorId) {
      if (vendorId) {
        return this.store.query('export', { vendorId: vendorId });
      }
      return this.store.findAll('export');
    }
  });
});
define("goods-gateway/product/upload/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/product/upload/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "class", "product-upload");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 1, 1);
        return morphs;
      },
      statements: [["inline", "vp-product-upload", [], ["MRTTaxonomy", ["subexpr", "@mut", [["get", "model.MRTTaxonomy", ["loc", [null, [3, 18], [3, 35]]], 0, 0, 0, 0]], [], [], 0, 0], "productUploads", ["subexpr", "@mut", [["get", "model.productUploads", ["loc", [null, [4, 21], [4, 41]]], 0, 0, 0, 0]], [], [], 0, 0], "catalogExports", ["subexpr", "@mut", [["get", "model.catalogExports", ["loc", [null, [5, 21], [5, 41]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [2, 2], [6, 4]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {
  exports['default'] = _emberResolver['default'];
});
define('goods-gateway/router', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {

  var Router = _ember['default'].Router.extend({
    location: _goodsGatewayConfigEnvironment['default'].locationType,
    rootURL: _goodsGatewayConfigEnvironment['default'].rootURL,
    willTransition: function willTransition() {
      this.get('errorAggregator').get('errors').clear();
    }
  });

  Router.map(function () {
    // Unauthenticated login route
    this.route('auth', function () {
      this.route('login');
      this.route('forgot-password');
      this.route('reset-password');
    });

    this.route('docs', function () {
      this.route('faq');
      this.route('terms-of-use');
    });

    // Everything within index is authenticated
    // resetNamespace should be used for all of these
    this.route('index', { path: '' }, function () {
      this.route('vendor', { resetNamespace: true, path: '/vendors' }, function () {});
      this.route('vendor.show', { resetNamespace: true, path: '/vendors/:id' }, function () {
        this.route('edit');
        this.route('users');
      });
      this.route('vendor.new', { resetNamespace: true, path: '/vendors/new' });

      this.route('product.upload', { resetNamespace: true, path: '/products/upload' });

      this.route('product', { resetNamespace: true, path: '/products' }, function () {
        this.route('index', { path: '' });
      });

      this.route('contract', { resetNamespace: true, path: '/contracts' }, function () {
        this.route('detail', { path: ':id' });
        this.route('index', { path: '' });
        this.route('new');
      });

      this.route('product.new', { resetNamespace: true, path: '/products/new' });

      this.route('product.edit', { resetNamespace: true, path: '/products/:product_id' }, function () {
        this.route('images', { path: '/images' });
      });

      this.route('inventory', { resetNamespace: true }, function () {
        this.route('index', { path: '' });
      });

      this.route('feature', { resetNamespace: true, path: '/features' }, function () {
        this.route('index', { path: '' }, function () {
          this.route('new');
          this.route('edit', { path: ':id/edit' });
        });
      });

      this.route('price_suggestion', { resetNamespace: true, path: '/pricing/suggestions' }, function () {
        this.route('detail', { path: ':uuid/detail' });
      });
      this.route('deal', { resetNamespace: true, path: '/deals' });
      this.route('bulk-updates', { resetNamespace: true }, function () {
        this.route('deals', { path: '/' });
        this.route('deals');
        this.route('products');
      });
      this.route('deal.bulk_updates', { resetNamespace: true, path: 'deals/bulk_updates' });
      this.route('deal.show', { resetNamespace: true, path: '/deals/:deal_id' });
      this.route('pricing_activity', { resetNamespace: true, path: '/pricing/activity' });
      this.route('stats', { resetNamespace: true }, function () {
        this.route('approvals', { path: 'approvals' });
        this.route('contracts', { path: 'contracts' });
      });

      this.route('not-found', { resetNamespace: true, path: '/*path' });
    });
  });

  exports['default'] = Router;
});
define('goods-gateway/routes/application', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Route.extend();
});
define('goods-gateway/search-storage/service', ['exports', 'ember', 'ember-simple-uuid'], function (exports, _ember, _emberSimpleUuid) {

  var KEY_PREFIX = 'search:';

  exports['default'] = _ember['default'].Service.extend({
    // lifecycle
    init: function init() {
      this._super.apply(this, arguments);

      var savedSearches = [];
      for (var i = 0; i < localStorage.length; ++i) {
        var key = localStorage.key(i);

        if (key.match(KEY_PREFIX)) {
          var savedSearch = localStorage.getItem(localStorage.key(i));
          var search = _ember['default'].Object.create(JSON.parse(savedSearch));
          savedSearches.pushObject(search);
        }
      }

      this.set('savedSearches', savedSearches);
    },

    save: function save(value) {
      var id = (0, _emberSimpleUuid['default'])();
      value.set('id', id);
      localStorage.setItem('' + KEY_PREFIX + id, JSON.stringify(value));
      this.get('savedSearches').pushObject(value);
    },

    find: function find(id) {
      return this.get('savedSearches').findBy('id', id);
    },

    destroy: function destroy(id) {
      var newSearches = this.get('savedSearches').rejectBy('id', id);
      localStorage.removeItem('' + KEY_PREFIX + id);
      this.set('savedSearches', newSearches);
    }
  });
});
define('goods-gateway/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _emberAjaxServicesAjax) {
  exports['default'] = _emberAjaxServicesAjax['default'].extend({});
});
define('goods-gateway/services/application-state', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Service.extend({
    isLoading: false
  });
});
define('goods-gateway/services/authorization', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Service.extend({
    session: _ember['default'].inject.service(),

    userInfo: _ember['default'].computed.oneWay('session.data.authenticated'),

    isAuthenticated: _ember['default'].computed.oneWay('session.isAuthenticated'),

    isExternal: _ember['default'].computed('userInfo.permissions.[]', function () {
      return !this.getWithDefault('userInfo.permissions', []).includes('read_default');
    }),

    // Vendor role convenience methods
    firstVendor: _ember['default'].computed.readOnly('vendors.firstObject'),
    isVendorOwner: function isVendorOwner(vendor_uuid) {
      return this.hasVendorRole(vendor_uuid, 'owner');
    },
    isVendorMember: function isVendorMember(vendor_uuid) {
      return this.hasVendorRole(vendor_uuid, 'member');
    },
    isVendorAgent: function isVendorAgent(vendor_uuid) {
      return this.hasVendorRole(vendor_uuid, 'agent');
    },
    vendors: _ember['default'].computed.oneWay('userInfo.vendors'),

    can: function can(permission) {
      return this.getWithDefault('userInfo.permissions', []).includes(permission);
    },

    hasVendorRole: function hasVendorRole(vendor_uuid, role) {
      var vendors = this.get('userInfo.vendors') || [];
      for (var i = 0; i < vendors.length; i++) {
        var vendor = vendors[i];
        if (vendor.id === vendor_uuid) {
          var roles = vendor.roles || [];
          return roles.includes(role);
        }
      }
      return false;
    }
  });
});
define('goods-gateway/services/bulk-updater', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Service.extend({
    queue: [],
    errors: [],
    successList: [],
    isProcessing: false,
    reset: function reset() {
      var _this = this;

      ['queue', 'errors', 'successList'].forEach(function (obj) {
        _this.get(obj).clear();
      });
      this.set('isProcessing', false);
    },
    enqueue: function enqueue(job) {
      this.get('queue').addObject(job);
    },
    reEnqueue: function reEnqueue(job) {
      this.enqueue(job);
      this.get('errors').removeObject(job);
    },
    reEnqueueAll: function reEnqueueAll() {
      this.get('queue').addObjects(this.get('errors'));
      this.get('errors').clear();
    },
    removeError: function removeError(job) {
      this.get('errors').removeObject(job);
    },
    removeAllErrors: function removeAllErrors() {
      this.get('errors').clear();
    },
    process: function process() {
      var _this2 = this;

      this.set('isProcessing', true);

      var promises = this.get('queue').map(function (job) {
        return job.perform().then(function () {
          _this2.successList.pushObject(job);
        })['catch'](function () {
          _this2.errors.pushObject(job);
        })['finally'](function () {
          _this2.queue.removeObject(job);
        });
      });

      return _ember['default'].RSVP.all(promises)['finally'](function () {
        _this2.set('isProcessing', false);
      });
    }
  });
});
define('goods-gateway/services/deal-booster', ['exports', 'ember', 'goods-gateway/constants/category-ids'], function (exports, _ember, _goodsGatewayConstantsCategoryIds) {
  exports['default'] = _ember['default'].Service.extend({
    request: _ember['default'].inject.service(),
    dealTagger: _ember['default'].inject.service(),

    boost: function boost(dealId) {
      var _this = this;

      return this._fetchDeal(dealId).then(function (response) {
        var promises = [];
        promises.push(_this._updateDistributionWindows(response.deal, 'boost'));

        if (response.deal.showQuantity === false) {
          promises.push(_this._updateShowQuantity(dealId, true));
        }

        if (response.deal.categoryIds.indexOf(_goodsGatewayConstantsCategoryIds.COMMERCEHUB_MERCH_TAG) >= 0) {
          promises.push(_this.get('dealTagger').updateTag(dealId, 'DELETE', _goodsGatewayConstantsCategoryIds.COMMERCEHUB_MERCH_TAG));
        }
      });
    },

    deboost: function deboost(dealId) {
      var _this2 = this;

      return this._fetchDeal(dealId).then(function (response) {
        var promises = [];
        promises.push(_this2._updateDistributionWindows(response.deal, 'deboost'));

        if (response.deal.showQuantity === true) {
          promises.push(_this2._updateShowQuantity(dealId, false));
        }

        if (response.deal.categoryIds.indexOf(_goodsGatewayConstantsCategoryIds.COMMERCEHUB_MERCH_TAG) < 0) {
          promises.push(_this2.get('dealTagger').updateTag(dealId, 'PUT', _goodsGatewayConstantsCategoryIds.COMMERCEHUB_MERCH_TAG));
        }
      });
    },

    _fetchDeal: function _fetchDeal(dealId) {
      return this.get('request').GET('/goods-gateway/proxy/gpapi/v0/deal_catalog/v2_deals/' + dealId);
    },

    _updateShowQuantity: function _updateShowQuantity(dealId, showQuantity) {
      return this.get('request').PUT('/goods-gateway/proxy/gpapi/v0/deal_catalog/v2_deals/' + dealId, { data: { deal: { showQuantity: showQuantity } } });
    },

    _updateDistributionWindows: function _updateDistributionWindows(deal, type) {
      var featuredWindow = deal.distributionWindows.filter(function (w) {
        return w.type === 'featured';
      })[0];

      if (!featuredWindow) {
        return;
      }

      if (type === 'boost') {
        featuredWindow.availableAt = this._getCurrentTime();
        featuredWindow.availableUntil = this._getTenYearsFromNow();
        delete featuredWindow.constraints;
      } else {
        this._setConstraints(featuredWindow);
      }

      return this.get('request').PUT('/goods-gateway/proxy/gpapi/v0/deal_catalog/v2_update_distribution_windows/' + deal.id, { data: { distributionWindows: deal.distributionWindows } });
    },

    _setConstraints: function _setConstraints(distributionWindow) {
      distributionWindow.constraints = [{
        categoryIds: [_goodsGatewayConstantsCategoryIds.DAILY_DEALS_EMAIL, _goodsGatewayConstantsCategoryIds.MOBILE_FEATURED_TAB],
        enforcedAt: distributionWindow.availableAt,
        enforcedUntil: distributionWindow.availableUntil,
        type: 'forbidden'
      }];
    },

    _getCurrentTime: function _getCurrentTime() {
      return moment().clone().utc().format();
    },

    _getTenYearsFromNow: function _getTenYearsFromNow() {
      // moment() is mutable!
      return moment().clone().add(10, 'years').utc().format();
    }
  });
});
define('goods-gateway/services/deal-id-lookup', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Service.extend({
    request: _ember['default'].inject.service(),
    flash: _ember['default'].inject.service('flashMessages'),
    i18n: _ember['default'].inject.service(),
    fetch: function fetch(id, suppressErrors) {
      var _this = this;

      var promise = new _ember['default'].RSVP.Promise(function (resolve, reject) {
        if (id.match(/^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$/i)) {
          resolve(id);
        } else {
          var req = _this.get('request').GET('/goods-gateway/proxy/gpapi/v0/deal_catalog/v1_lookup', { data: { permalink: id } });
          var success = function success(response) {
            return resolve(response.deal.id);
          };
          var error = function error(response) {
            if (!suppressErrors) {
              _this.get('flash').add({
                message: _this.get('i18n').t('deal.lookupError'),
                type: 'alert-error'
              });
            }
            reject(response);
          };

          req.then(success, error);
        }
      });
      return promise;
    }
  });
});
define('goods-gateway/services/deal-tagger', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Service.extend({
    request: _ember['default'].inject.service(),
    updateTag: function updateTag(dealId, method, tag) {
      var url = '/goods-gateway/proxy/gpapi/v0/deal_catalog/v2_categories/' + dealId + '/' + tag;
      return this.get('request')[method](url);
    }
  });
});
define('goods-gateway/services/error-aggregator', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Service.extend({
    errors: [],
    setErrors: function setErrors(modelOrModels) {
      this.errors.clear();

      var models = [].concat(modelOrModels);
      for (var i = 0; i < models.length; i++) {
        var model = models[i];
        for (var key in model.dependentValidationKeys) {
          if (model.get('errors').get(key) && model.get('errors').get(key).length) {
            var translationKey = model.constructor.modelName.camelize() + '.' + key;
            this.errors.insertAt(this.errors.length, translationKey);
          }
        }
      }
    }
  });
});
define('goods-gateway/services/flash-messages', ['exports', 'ember-cli-flash/services/flash-messages'], function (exports, _emberCliFlashServicesFlashMessages) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberCliFlashServicesFlashMessages['default'];
    }
  });
});
define('goods-gateway/services/gpapi', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Service.extend({
    sdc: _ember['default'].inject.service(),

    request: function request(endpointId, params) {
      return this.get('sdc').request('gpapi', 'gpapi.' + endpointId, params);
    }
  });
});
define('goods-gateway/services/head-data', ['exports', 'ember-cli-head/services/head-data'], function (exports, _emberCliHeadServicesHeadData) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberCliHeadServicesHeadData['default'];
    }
  });
});
define('goods-gateway/services/i18n', ['exports', 'ember-i18n/services/i18n'], function (exports, _emberI18nServicesI18n) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberI18nServicesI18n['default'];
    }
  });
});
define('goods-gateway/services/localized-constants', ['exports', 'ember', 'goods-gateway/constants/country-codes', 'goods-gateway/constants/currency-codes', 'goods-gateway/constants/payment-terms', 'goods-gateway/constants/shipping-options', 'goods-gateway/constants/shipping-services', 'goods-gateway/constants/us-states', 'goods-gateway/constants/vendor-statuses', 'goods-gateway/constants/fulfillment-platforms', 'goods-gateway/constants/ca-states', 'goods-gateway/constants/vendor-user-association-roles'], function (exports, _ember, _goodsGatewayConstantsCountryCodes, _goodsGatewayConstantsCurrencyCodes, _goodsGatewayConstantsPaymentTerms, _goodsGatewayConstantsShippingOptions, _goodsGatewayConstantsShippingServices, _goodsGatewayConstantsUsStates, _goodsGatewayConstantsVendorStatuses, _goodsGatewayConstantsFulfillmentPlatforms, _goodsGatewayConstantsCaStates, _goodsGatewayConstantsVendorUserAssociationRoles) {
  exports['default'] = _ember['default'].Service.extend({
    // dependencies
    i18n: _ember['default'].inject.service('i18n'),

    options: _ember['default'].computed('i18n.locale', function () {
      var i18n = this.get('i18n');
      var options = {};

      var countryOptions = _goodsGatewayConstantsCountryCodes['default'].map(function (code) {
        return {
          label: i18n.t('countries.' + code).toString(),
          value: code
        };
      });
      options.country = countryOptions.sortBy('label');

      options.currencyCode = _goodsGatewayConstantsCurrencyCodes['default'].map(function (code) {
        return {
          label: code,
          value: code
        };
      });

      options.fulfillmentPlatform = _goodsGatewayConstantsFulfillmentPlatforms['default'].map(function (platform) {
        return {
          label: i18n.t('constants.fulfillmentPlatforms.' + platform),
          value: platform
        };
      });

      options.paymentTerm = _goodsGatewayConstantsPaymentTerms['default'].map(function (term) {
        return {
          label: i18n.t('constants.paymentTerms.' + term),
          value: term
        };
      });

      options.shippingOption = _goodsGatewayConstantsShippingOptions['default'].map(function (option) {
        return {
          label: i18n.t('constants.shippingOptions.' + option),
          value: option
        };
      });

      options.shippingService = _goodsGatewayConstantsShippingServices['default'].map(function (service) {
        return {
          label: i18n.t('constants.shippingServices.' + service),
          value: service
        };
      });

      options.vendorStatus = _goodsGatewayConstantsVendorStatuses['default'].map(function (status) {
        return {
          label: i18n.t('constants.vendorStatuses.' + status),
          value: status
        };
      });

      options.vendorUserAssociationRole = _goodsGatewayConstantsVendorUserAssociationRoles['default'].map(function (role) {
        return {
          label: i18n.t('constants.vendorRoles.' + role + '.label'),
          value: role
        };
      });

      options.usState = _goodsGatewayConstantsUsStates['default'];

      options.caState = _goodsGatewayConstantsCaStates['default'].map(function (state) {
        return {
          label: i18n.t('constants.caStates.' + state),
          value: state
        };
      });

      return options;
    })
  });
});
define('goods-gateway/services/moment', ['exports', 'ember', 'moment'], function (exports, _ember, _moment2) {
  var computed = _ember['default'].computed;
  exports['default'] = _ember['default'].Service.extend({
    _locale: null,
    _timeZone: null,

    locale: computed({
      get: function get() {
        return this.get('_locale');
      },
      set: function set(propertyKey, locale) {
        this.set('_locale', locale);
        return locale;
      }
    }),

    timeZone: computed({
      get: function get() {
        return this.get('_timeZone');
      },
      set: function set(propertyKey, timeZone) {
        if (_moment2['default'].tz) {
          this.set('_timeZone', timeZone);
          return timeZone;
        } else {
          _ember['default'].Logger.warn('[ember-moment] attempted to set timezone, but moment-timezone unavailable.');
        }
      }
    }),

    changeLocale: function changeLocale(locale) {
      this.set('locale', locale);
    },

    changeTimeZone: function changeTimeZone(timeZone) {
      this.set('timeZone', timeZone);
    },

    moment: function moment() {
      var time = _moment2['default'].apply(undefined, arguments);
      var locale = this.get('locale');
      var timeZone = this.get('timeZone');

      if (locale) {
        time = time.locale(locale);
      }

      if (timeZone && time.tz) {
        time = time.tz(timeZone);
      }

      return time;
    }
  });
});
define('goods-gateway/services/money', ['exports', 'ember', 'accounting/format-money', 'goods-gateway/constants/currencies', 'goods-gateway/constants/money-localizations'], function (exports, _ember, _accountingFormatMoney, _goodsGatewayConstantsCurrencies, _goodsGatewayConstantsMoneyLocalizations) {
  exports['default'] = _ember['default'].Service.extend({
    i18n: _ember['default'].inject.service('i18n'),

    toMajorUnits: function toMajorUnits(amount, currencyCode) {
      if (amount !== 0 && !amount) {
        return;
      }
      var currencyPref = _goodsGatewayConstantsCurrencies['default'].findBy('value', currencyCode);
      return (amount / 100).toFixed(currencyPref.precision);
    },

    toFormattedAmount: function toFormattedAmount(amount, currencyCode) {
      var majorAmount = this.toMajorUnits(amount, currencyCode);
      if (!majorAmount) {
        return '';
      }
      var currencyPref = _goodsGatewayConstantsCurrencies['default'].findBy('value', currencyCode);
      var currentLocale = this.get('i18n').locale;
      var l10nOption = _goodsGatewayConstantsMoneyLocalizations['default'][currentLocale];
      return (0, _accountingFormatMoney['default'])(majorAmount, currencyPref.symbol, currencyPref.precision, l10nOption.thousands, l10nOption.decimal, l10nOption.format);
    }
  });
});
define('goods-gateway/services/page-title-list', ['exports', 'ember-page-title/services/page-title-list'], function (exports, _emberPageTitleServicesPageTitleList) {
  exports['default'] = _emberPageTitleServicesPageTitleList['default'].extend({
    defaultSeparator: ' / '
  });
});
define('goods-gateway/services/price-suggestion-model', ['exports', 'ember', 'goods-gateway/utils/replace-underscores-with-pipes'], function (exports, _ember, _goodsGatewayUtilsReplaceUnderscoresWithPipes) {
  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  exports['default'] = _ember['default'].Service.extend({
    store: _ember['default'].inject.service(),
    fetchPriceSuggestions: function fetchPriceSuggestions(_ref) {
      var selectedCategories = _ref.selectedCategories;
      var selectedStrategy = _ref.selectedStrategy;
      var page = _ref.page;
      var pageSize = _ref.pageSize;

      var taxonomyPromise = this.get('store').findAll('taxonomy');

      var selectedCategoryObjects = taxonomyPromise.then(function (categories) {
        if (!selectedCategories) {
          return [];
        }
        return selectedCategories.map(function (categoryId) {
          return categories.findBy('guid', categoryId);
        });
      });

      var marketPricingDealsPromise = this.get('store').query('marketPricingDeal', { page: page, pageSize: pageSize, categoryIds: selectedCategories, strategy: selectedStrategy });

      var store = this.get('store');

      var dealsPromise = new _ember['default'].RSVP.Promise(function (resolve, reject) {
        _ember['default'].RSVP.Promise.all([taxonomyPromise, marketPricingDealsPromise]).then(function (_ref2) {
          var _ref22 = _slicedToArray(_ref2, 2);

          var categories = _ref22[0];
          var marketPricingDeals = _ref22[1];

          var dealPromises = marketPricingDeals.map(function (marketPricingDeal) {
            var marketPricingCategory = categories.findBy('guid', marketPricingDeal.get('categoryId'));
            return {
              deal: store.find('deal', marketPricingDeal.get('id')),
              marketPricingDeal: marketPricingDeal,
              categoryName: marketPricingCategory ? (0, _goodsGatewayUtilsReplaceUnderscoresWithPipes['default'])(marketPricingCategory.get('description')) : ''
            };
          });

          _ember['default'].RSVP.Promise.all(dealPromises.map(function (deal) {
            return deal.deal;
          })).then(function () {
            resolve(dealPromises);
          })['catch'](function () {
            reject();
          });
        });
      });

      return _ember['default'].RSVP.hash({
        deals: dealsPromise,
        marketPricingDeals: marketPricingDealsPromise,
        categories: taxonomyPromise,
        selectedCategoryObjects: selectedCategoryObjects
      });
    }
  });
});
define('goods-gateway/services/product-fetcher', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Service.extend({
    dealIdLookup: _ember['default'].inject.service(),
    request: _ember['default'].inject.service(),
    fetch: function fetch(idOrPermalink) {
      var _this = this;

      return new _ember['default'].RSVP.Promise(function (resolve, reject) {
        return _this.get('dealIdLookup').fetch(idOrPermalink, true).then(function (uuid) {
          return _this.get('request').GET('/goods-gateway/proxy/gpapi/v0/goods_stores/products/find?deal_uuid=' + uuid).then(function (response) {
            resolve(response.product);
          })['catch'](function (error) {
            if (error.errors[0] && error.errors[0].status === '404') {
              return _this.get('request').GET('/goods-gateway/proxy/gpapi/v0/goods_stores/products/' + uuid).then(function (response) {
                resolve(response.product);
              });
            } else {
              reject(error);
            }
          });
        })['catch'](function (error) {
          reject(error);
        });
      });
    }
  });
});
define('goods-gateway/services/product-pauser', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Service.extend({
    request: _ember['default'].inject.service(),
    flash: _ember['default'].inject.service('flashMessages'),
    i18n: _ember['default'].inject.service(),

    pause: function pause(id) {
      return this.update(id, 'pause');
    },
    unpause: function unpause(id) {
      return this.update(id, 'unpause');
    },

    update: function update(id, action, suppressFlash) {
      var _this = this;

      var promise = this.get('request').POST('/goods-gateway/proxy/gpapi/v0/goods_stores/products/' + id + '/event/' + action);

      return promise.then(function () {
        if (suppressFlash) {
          return;
        }
        _this.get('flash').add({
          message: _this.get('i18n').t('deal.statusChangeSuccess', { status: action }),
          type: 'alert-success'
        });
      })['catch'](function (response) {
        var error = response.errors[0];
        if (!suppressFlash) {
          _this.get('flash').add({
            message: error.status + ': ' + JSON.stringify(error.detail),
            type: 'alert-error'
          });
        }

        throw response;
      });
    }
  });
});
define('goods-gateway/services/request', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Service.extend({
    ajax: _ember['default'].inject.service(),
    GET: function GET(url, options) {
      return this._fireRequest('get', url, options);
    },
    POST: function POST(url, options) {
      return this._fireRequest('post', url, options);
    },
    PUT: function PUT(url, options) {
      return this._fireRequest('put', url, options);
    },
    DELETE: function DELETE(url, options) {
      return this._fireRequest('delete', url, options);
    },
    _fireRequest: function _fireRequest(method, url, options) {
      options = options || {};
      options.method = method;

      if (method !== 'get' && options.data) {
        options.dataType = 'json';
        options.contentType = 'application/json';
        options.processData = false;
        options.data = JSON.stringify(options.data);
      }

      return this.get('ajax').request(url, options);
    }
  });
});
define('goods-gateway/services/sdc', ['exports', 'ember', 'goods-gateway/config/environment'], function (exports, _ember, _goodsGatewayConfigEnvironment) {

  var sdc = ServiceDiscoveryClient;

  exports['default'] = _ember['default'].Service.extend({
    ajax: _ember['default'].inject.service(),

    init: function init() {
      this._super.apply(this, arguments);
      this.client = new sdc.Client({
        RegistryClass: sdc.Registry,
        RequestClass: sdc.Request,
        requestTransport: this.get('ajax')
      });
      this.client.configure(_goodsGatewayConfigEnvironment['default'].serviceDiscoveryClient);
    },

    request: function request(serviceId, endpointId, params) {
      return this.client.request(serviceId, endpointId, params);
    }
  });
});
define('goods-gateway/services/session', ['exports', 'ember-simple-auth/services/session'], function (exports, _emberSimpleAuthServicesSession) {
  exports['default'] = _emberSimpleAuthServicesSession['default'];
});
define('goods-gateway/services/slim-mrts', ['exports', 'ember', 'goods-gateway/utils/replace-underscores-with-pipes'], function (exports, _ember, _goodsGatewayUtilsReplaceUnderscoresWithPipes) {
  exports['default'] = _ember['default'].Service.extend({
    // dependencies
    ajax: _ember['default'].inject.service('ajax'),

    // lifecycle
    init: function init() {
      this._seedSlimMRTs();
      this._super.apply(this, arguments);
    },

    // helpers
    promise: null,

    _seedSlimMRTs: function _seedSlimMRTs() {
      this.set('promise', this.get('ajax').request('/goods-gateway/proxy/gpapi/v1/categories').then(function (response) {
        return response.categories.map(function (category) {
          return {
            id: category.id,
            depth: category.depth,
            hasChildren: !!category.children.length,
            name: (0, _goodsGatewayUtilsReplaceUnderscoresWithPipes['default'])(category.localizedContents[0].description)
          };
        }).sort(function (a, b) {
          if (a.depth === b.depth) {
            return a.name < b.name ? -1 : 1;
          } else {
            return a.depth - b.depth;
          }
        });
      }));
    }
  });
});
define('goods-gateway/services/system', ['exports', 'ember'], function (exports, _ember) {

  var copyToPasteboardId = 'copy-to-pasteboard';

  exports['default'] = _ember['default'].Service.extend({
    copyToPasteboard: function copyToPasteboard(text) {
      var copyContext = arguments.length <= 1 || arguments[1] === undefined ? document : arguments[1];

      var copyElement = _ember['default'].$('<div>', {
        id: copyToPasteboardId,
        css: {
          position: 'fixed',
          left: '-10000px'
        },
        html: text
      });
      _ember['default'].$('body').append(copyElement);

      var selectionNode = copyElement[0].childNodes[0];
      var range = document.createRange();
      range.setStartBefore(selectionNode);
      range.setEndAfter(selectionNode);

      var selection = window.getSelection();
      selection.removeAllRanges();
      selection.addRange(range);

      copyContext.execCommand('copy');
      _ember['default'].$('#' + copyToPasteboardId).remove();
    }
  });
});
define('goods-gateway/services/update-price-suggestions', ['exports', 'ember', 'goods-gateway/utils/money-converter'], function (exports, _ember, _goodsGatewayUtilsMoneyConverter) {
  var updatePriceSuggestionsUrl = '/goods-gateway/proxy/gpapi/v0/market_pricing/v2_price_suggestions';

  exports.updatePriceSuggestionsUrl = updatePriceSuggestionsUrl;
  exports['default'] = _ember['default'].Service.extend({
    request: _ember['default'].inject.service(),

    reject: function reject(priceSuggestions, _ref) {
      var reason = _ref.reason;
      var rejectionDetails = _ref.rejectionDetails;

      var suggestions = priceSuggestions.map(function (priceSuggestion) {
        return {
          id: priceSuggestion.get('priceSuggestionId'),
          status: 'rejected',
          reason: reason,
          review_comments: rejectionDetails,
          old_sell_price: priceSuggestion.get('oldSellPrice')
        };
      });

      return this._putPriceSuggestions(suggestions);
    },

    accept: function accept(priceSuggestions, bandAction) {
      var _this = this;

      var reason = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

      var suggestions = priceSuggestions.map(function (priceSuggestion) {
        var suggestionEntry = { id: priceSuggestion.get('priceSuggestionId') };
        var overriddenPrice = _this._priceToMinorCurrency(priceSuggestion);
        if (overriddenPrice && overriddenPrice !== priceSuggestion.get('proposedSellPrice.amount')) {
          suggestionEntry.status = 'overridden';
          suggestionEntry.reason = reason.overrideReason;
          suggestionEntry.new_sell_price = overriddenPrice;
          suggestionEntry.review_comments = reason.overrideDetails;
        } else {
          suggestionEntry.status = 'accepted';
        }
        suggestionEntry.old_sell_price = priceSuggestion.get('oldSellPrice');
        return suggestionEntry;
      });

      return this._putPriceSuggestions(suggestions, bandAction);
    },

    _priceToMinorCurrency: function _priceToMinorCurrency(priceSuggestion) {
      return _goodsGatewayUtilsMoneyConverter['default'].convertStringToMinor(priceSuggestion.get('overriddenPrice'), priceSuggestion.get('proposedSellPrice.currencyCode'));
    },

    _putPriceSuggestions: function _putPriceSuggestions(suggestions) {
      var bandAction = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];

      var requestData = { priceSuggestions: suggestions };

      if (bandAction) {
        requestData.bandAction = bandAction;
      }

      return this.get('request').PUT(updatePriceSuggestionsUrl, { data: requestData });
    }

  });
});
define('goods-gateway/services/validations', ['exports', 'ember'], function (exports, _ember) {

  var set = _ember['default'].set;

  exports['default'] = _ember['default'].Service.extend({
    init: function init() {
      set(this, 'cache', {});
    }
  });
});
define('goods-gateway/session-stores/application', ['exports', 'ember-simple-auth/session-stores/adaptive'], function (exports, _emberSimpleAuthSessionStoresAdaptive) {
  exports['default'] = _emberSimpleAuthSessionStoresAdaptive['default'].extend();
});
define('goods-gateway/stats/approvals/route', ['exports', 'ember', 'goods-gateway/mixins/gateway-route'], function (exports, _ember, _goodsGatewayMixinsGatewayRoute) {
  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsGatewayRoute['default'], {
    authorization: _ember['default'].inject.service('authorization'),
    gpapi: _ember['default'].inject.service('gpapi'),

    model: function model() {
      var searchParams = this.paramsFor('stats');
      var query = this._getQuery(searchParams);
      var approvalStats = this._getApprovalStats(query);
      var rejectionReasonStats = this._getRejectionReasonStats(query);

      return _ember['default'].RSVP.hash({
        approvalStats: approvalStats,
        params: searchParams,
        rejectionReasonStats: rejectionReasonStats
      });
    },

    _getQuery: function _getQuery(params) {
      var vendorId = undefined;
      if (this.get('authorization.isExternal')) {
        vendorId = this.get('authorization.vendors.firstObject.id');
      } else {
        vendorId = params.vendorId;
      }

      var query = {
        filter: {}
      };

      query.filter.categoryId = undefined;
      if (params.categoryIds && params.categoryIds[0]) {
        query.filter.categoryId = params.categoryIds[0];
      }
      query.filter.source = params.source || undefined;
      query.filter.vendorId = vendorId || undefined;
      return query;
    },

    _getApprovalStats: function _getApprovalStats(query) {
      return this.get('gpapi').request('v1.items.approval_stats.approval_stats', query).then(function (response) {
        return response.approvalStats;
      });
    },

    _getRejectionReasonStats: function _getRejectionReasonStats(query) {
      return this.get('gpapi').request('v1.items.rejection_reason_stats.rejection_reason_stats', query).then(function (response) {
        return response.rejectionReasonStats;
      });
    }
  });
});
define("goods-gateway/stats/approvals/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 4
            },
            "end": {
              "line": 35,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/stats/approvals/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "row");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("h2");
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "row");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4, "class", "md-column");
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4, "class", "md-column");
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "row");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("h2");
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "row");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1, 1]);
          var element1 = dom.childAt(fragment, [3, 1]);
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(dom.childAt(element0, [1, 1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element0, [3, 1]), 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(element1, [1, 1]), 1, 1);
          morphs[3] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [8, 26], [8, 41]]], 0, 0, 0, 0], "approvalStats"], [], ["loc", [null, [8, 18], [8, 58]]], 0, 0]], [], ["loc", [null, [8, 14], [8, 60]]], 0, 0], ["inline", "vp-approval-stats", [], ["stats", ["subexpr", "@mut", [["get", "model.approvalStats", ["loc", [null, [14, 40], [14, 59]]], 0, 0, 0, 0]], [], [], 0, 0], "params", ["subexpr", "@mut", [["get", "model.params", ["loc", [null, [14, 67], [14, 79]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [14, 14], [14, 81]]], 0, 0], ["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [26, 26], [26, 41]]], 0, 0, 0, 0], "rejectionReasons"], [], ["loc", [null, [26, 18], [26, 61]]], 0, 0]], [], ["loc", [null, [26, 14], [26, 63]]], 0, 0], ["inline", "vp-rejection-reason-stats", [], ["stats", ["subexpr", "@mut", [["get", "model.rejectionReasonStats", ["loc", [null, [31, 46], [31, 72]]], 0, 0, 0, 0]], [], [], 0, 0], "params", ["subexpr", "@mut", [["get", "model.params", ["loc", [null, [31, 80], [31, 92]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [31, 12], [31, 94]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 39,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/stats/approvals/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["stats.approvals.noStat"], [], ["loc", [null, [37, 8], [37, 38]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/stats/approvals/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row search-results");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("section");
        dom.setAttribute(el2, "id", "approval-stat-list");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0, 1]), 1, 1);
        return morphs;
      },
      statements: [["block", "if", [["get", "model.approvalStats.length", ["loc", [null, [3, 10], [3, 36]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [3, 4], [39, 11]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/stats/contracts/route', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Route.extend({
    gpapi: _ember['default'].inject.service('gpapi'),

    model: function model() {
      var searchParams = this.paramsFor('stats');
      var query = this._getQuery(searchParams);
      var statsByVendor = this._getStatsByVendor(query);
      var statsByCategory = this._getStatsByCategory(query);
      var statsByStatus = this._getStatsByStatus(query);
      var MRTs = this._getMRTs(statsByCategory);
      var vendors = this._getVendors(statsByVendor);

      return _ember['default'].RSVP.hash({
        MRTs: MRTs,
        params: searchParams,
        statsByCategory: statsByCategory,
        statsByStatus: statsByStatus,
        statsByVendor: statsByVendor,
        vendors: vendors
      });
    },

    _getQuery: function _getQuery(params) {
      var query = {
        filter: {}
      };

      query.filter.categoryId = params.categoryId || undefined;
      query.filter.vendorId = params.vendorId || undefined;
      query.filter.status = params.contractStatus || undefined;
      return query;
    },

    _getMRTs: function _getMRTs(statsByCategory) {
      var _this = this;

      return statsByCategory.then(function (stats) {
        var categoryIds = stats.map(function (stat) {
          return stat.group;
        }).uniq().compact();
        var categories = categoryIds.map(function (id) {
          return _this.get('store').find('category', id)['catch'](function () {
            return _ember['default'].Object.create({ id: id });
          });
        });
        return _ember['default'].RSVP.all(categories);
      });
    },

    _getVendors: function _getVendors(statsByVendor) {
      var _this2 = this;

      return statsByVendor.then(function (stats) {
        var vendorIds = stats.map(function (stat) {
          return stat.group;
        }).uniq().compact();
        var vendors = vendorIds.map(function (id) {
          return _this2.get('store').find('vendor', id);
        });
        return _ember['default'].RSVP.all(vendors);
      });
    },

    _getStatsByVendor: function _getStatsByVendor(query) {
      query.group = 'vendor';
      return this.get('gpapi').request('v1.contracts.stats.stats', query).then(function (response) {
        return response.stats;
      });
    },

    _getStatsByCategory: function _getStatsByCategory(query) {
      query.group = 'category';
      return this.get('gpapi').request('v1.contracts.stats.stats', query).then(function (response) {
        return response.stats;
      });
    },

    _getStatsByStatus: function _getStatsByStatus(query) {
      query.group = 'status';
      return this.get('gpapi').request('v1.contracts.stats.stats', query).then(function (response) {
        return response.stats;
      });
    }
  });
});
define("goods-gateway/stats/contracts/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 23,
                  "column": 20
                },
                "end": {
                  "line": 25,
                  "column": 20
                }
              },
              "moduleName": "goods-gateway/stats/contracts/template.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "vendor.name", ["loc", [null, [24, 22], [24, 37]]], 0, 0, 0, 0]],
            locals: ["vendor"],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 29,
                  "column": 20
                },
                "end": {
                  "line": 34,
                  "column": 20
                }
              },
              "moduleName": "goods-gateway/stats/contracts/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "stat.count", ["loc", [null, [33, 22], [33, 36]]], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 20,
                "column": 14
              },
              "end": {
                "line": 37,
                "column": 14
              }
            },
            "moduleName": "goods-gateway/stats/contracts/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("                ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            var el2 = dom.createTextNode("\n                  ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "vendor");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("                  ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n                  ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "contracts count");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("                  ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n                ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
            morphs[1] = dom.createMorphAt(dom.childAt(element2, [3]), 1, 1);
            return morphs;
          },
          statements: [["block", "vp-find", [], ["collection", ["subexpr", "@mut", [["get", "model.vendors", ["loc", [null, [23, 42], [23, 55]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "id", "value", ["subexpr", "@mut", [["get", "stat.group", ["loc", [null, [23, 71], [23, 81]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [23, 20], [25, 32]]]], ["block", "link-to", ["contract.index", ["subexpr", "contextual-params", [["get", "model.params", ["loc", [null, [30, 41], [30, 53]]], 0, 0, 0, 0]], ["status", ["get", "model.params.contractStatus", ["loc", [null, [30, 61], [30, 88]]], 0, 0, 0, 0], "vendorId", ["get", "stat.group", ["loc", [null, [30, 98], [30, 108]]], 0, 0, 0, 0]], ["loc", [null, [30, 22], [30, 109]]], 0, 0]], ["class", "vendor-contracts"], 1, null, ["loc", [null, [29, 20], [34, 32]]]]],
          locals: ["stat"],
          templates: [child0, child1]
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 60,
                  "column": 20
                },
                "end": {
                  "line": 62,
                  "column": 20
                }
              },
              "moduleName": "goods-gateway/stats/contracts/template.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "vp-category-display", [], ["category", ["subexpr", "@mut", [["get", "category", ["loc", [null, [61, 53], [61, 61]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [61, 22], [61, 63]]], 0, 0]],
            locals: ["category"],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 66,
                  "column": 20
                },
                "end": {
                  "line": 71,
                  "column": 20
                }
              },
              "moduleName": "goods-gateway/stats/contracts/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "stat.count", ["loc", [null, [70, 22], [70, 36]]], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 57,
                "column": 14
              },
              "end": {
                "line": 74,
                "column": 14
              }
            },
            "moduleName": "goods-gateway/stats/contracts/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("                ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            var el2 = dom.createTextNode("\n                  ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "category");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("                  ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n                  ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "contracts count");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("                  ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n                ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
            morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
            return morphs;
          },
          statements: [["block", "vp-find", [], ["collection", ["subexpr", "@mut", [["get", "model.MRTs", ["loc", [null, [60, 42], [60, 52]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "id", "value", ["subexpr", "@mut", [["get", "stat.group", ["loc", [null, [60, 68], [60, 78]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ["loc", [null, [60, 20], [62, 32]]]], ["block", "link-to", ["contract.index", ["subexpr", "contextual-params", [["get", "model.params", ["loc", [null, [67, 41], [67, 53]]], 0, 0, 0, 0]], ["status", ["get", "model.params.contractStatus", ["loc", [null, [67, 61], [67, 88]]], 0, 0, 0, 0], "categoryIds", ["subexpr", "array", [["get", "stat.group", ["loc", [null, [67, 108], [67, 118]]], 0, 0, 0, 0]], [], ["loc", [null, [67, 101], [67, 119]]], 0, 0]], ["loc", [null, [67, 22], [67, 120]]], 0, 0]], ["class", "category-contracts"], 1, null, ["loc", [null, [66, 20], [71, 32]]]]],
          locals: ["stat"],
          templates: [child0, child1]
        };
      })();
      var child2 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 101,
                  "column": 20
                },
                "end": {
                  "line": 106,
                  "column": 20
                }
              },
              "moduleName": "goods-gateway/stats/contracts/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "stat.count", ["loc", [null, [105, 22], [105, 36]]], 0, 0, 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 94,
                "column": 14
              },
              "end": {
                "line": 109,
                "column": 14
              }
            },
            "moduleName": "goods-gateway/stats/contracts/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("                ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            var el2 = dom.createTextNode("\n                  ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "contract-status");
            var el3 = dom.createTextNode("\n                    ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n                  ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n\n                  ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "class", "contracts count");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("                  ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n                ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
            morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
            return morphs;
          },
          statements: [["inline", "vp-listing", [], ["status", ["subexpr", "@mut", [["get", "stat.group", ["loc", [null, [97, 40], [97, 50]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [97, 20], [97, 52]]], 0, 0], ["block", "link-to", ["contract.index", ["subexpr", "contextual-params", [["get", "model.params", ["loc", [null, [102, 41], [102, 53]]], 0, 0, 0, 0]], ["status", ["get", "stat.group", ["loc", [null, [102, 61], [102, 71]]], 0, 0, 0, 0]], ["loc", [null, [102, 22], [102, 72]]], 0, 0]], ["class", "status-contracts"], 0, null, ["loc", [null, [101, 20], [106, 32]]]]],
          locals: ["stat"],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 4
            },
            "end": {
              "line": 114,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/stats/contracts/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("table");
          dom.setAttribute(el3, "id", "contract-vendor-stats-table");
          dom.setAttribute(el3, "class", "table-lined");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("thead");
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("tr");
          var el6 = dom.createTextNode("\n                ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("th");
          var el7 = dom.createTextNode("\n                  ");
          dom.appendChild(el6, el7);
          var el7 = dom.createComment("");
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n                ");
          dom.appendChild(el6, el7);
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n\n                ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("th");
          dom.setAttribute(el6, "class", "count");
          var el7 = dom.createTextNode("\n                  ");
          dom.appendChild(el6, el7);
          var el7 = dom.createComment("");
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n                ");
          dom.appendChild(el6, el7);
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n              ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("tbody");
          var el5 = dom.createTextNode("\n");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n         ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("table");
          dom.setAttribute(el3, "id", "contract-category-stats-table");
          dom.setAttribute(el3, "class", "table-lined");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("thead");
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("tr");
          var el6 = dom.createTextNode("\n                ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("th");
          var el7 = dom.createTextNode("\n                  ");
          dom.appendChild(el6, el7);
          var el7 = dom.createComment("");
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n                ");
          dom.appendChild(el6, el7);
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n\n                ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("th");
          dom.setAttribute(el6, "class", "count");
          var el7 = dom.createTextNode("\n                  ");
          dom.appendChild(el6, el7);
          var el7 = dom.createComment("");
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n                ");
          dom.appendChild(el6, el7);
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n              ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("tbody");
          var el5 = dom.createTextNode("\n");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "md-column");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("table");
          dom.setAttribute(el3, "id", "contract-status-stats-table");
          dom.setAttribute(el3, "class", "table-lined");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("thead");
          var el5 = dom.createTextNode("\n              ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("tr");
          var el6 = dom.createTextNode("\n                ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("th");
          var el7 = dom.createTextNode("\n                  ");
          dom.appendChild(el6, el7);
          var el7 = dom.createComment("");
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n                ");
          dom.appendChild(el6, el7);
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n\n                ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("th");
          dom.setAttribute(el6, "class", "count");
          var el7 = dom.createTextNode("\n                  ");
          dom.appendChild(el6, el7);
          var el7 = dom.createComment("");
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n                ");
          dom.appendChild(el6, el7);
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n              ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("tbody");
          var el5 = dom.createTextNode("\n");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("            ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1]);
          var element4 = dom.childAt(element3, [1, 1]);
          var element5 = dom.childAt(element4, [1, 1]);
          var element6 = dom.childAt(element3, [3, 1]);
          var element7 = dom.childAt(element6, [1, 1]);
          var element8 = dom.childAt(element3, [5, 1]);
          var element9 = dom.childAt(element8, [1, 1]);
          var morphs = new Array(9);
          morphs[0] = dom.createMorphAt(dom.childAt(element5, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element5, [3]), 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(element4, [3]), 1, 1);
          morphs[3] = dom.createMorphAt(dom.childAt(element7, [1]), 1, 1);
          morphs[4] = dom.createMorphAt(dom.childAt(element7, [3]), 1, 1);
          morphs[5] = dom.createMorphAt(dom.childAt(element6, [3]), 1, 1);
          morphs[6] = dom.createMorphAt(dom.childAt(element9, [1]), 1, 1);
          morphs[7] = dom.createMorphAt(dom.childAt(element9, [3]), 1, 1);
          morphs[8] = dom.createMorphAt(dom.childAt(element8, [3]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["stats.contracts.topVendors"], [], ["loc", [null, [10, 18], [10, 52]]], 0, 0], ["inline", "t", ["stats.contracts.count"], [], ["loc", [null, [14, 18], [14, 47]]], 0, 0], ["block", "each", [["get", "model.statsByVendor", ["loc", [null, [20, 22], [20, 41]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [20, 14], [37, 23]]]], ["inline", "t", ["stats.contracts.topCategories"], [], ["loc", [null, [47, 18], [47, 55]]], 0, 0], ["inline", "t", ["stats.contracts.count"], [], ["loc", [null, [51, 18], [51, 47]]], 0, 0], ["block", "each", [["get", "model.statsByCategory", ["loc", [null, [57, 22], [57, 43]]], 0, 0, 0, 0]], [], 1, null, ["loc", [null, [57, 14], [74, 23]]]], ["inline", "t", ["stats.contracts.status"], [], ["loc", [null, [84, 18], [84, 48]]], 0, 0], ["inline", "t", ["stats.contracts.count"], [], ["loc", [null, [88, 18], [88, 47]]], 0, 0], ["block", "each", [["get", "model.statsByStatus", ["loc", [null, [94, 22], [94, 41]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [94, 14], [109, 23]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 114,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/stats/contracts/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["stats.contracts.noStat"], [], ["loc", [null, [116, 8], [116, 38]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 121,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/stats/contracts/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("section");
        dom.setAttribute(el2, "id", "contract-stat-list");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0, 1]), 1, 1);
        return morphs;
      },
      statements: [["block", "if", [["get", "model.statsByStatus.length", ["loc", [null, [3, 10], [3, 36]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [3, 4], [118, 11]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/stats/route', ['exports', 'ember', 'goods-gateway/mixins/gateway-route', 'goods-gateway/mixins/search', 'goods-gateway/mixins/params'], function (exports, _ember, _goodsGatewayMixinsGatewayRoute, _goodsGatewayMixinsSearch, _goodsGatewayMixinsParams) {
  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsGatewayRoute['default'], _goodsGatewayMixinsSearch['default'], _goodsGatewayMixinsParams['default'], {
    authorization: _ember['default'].inject.service(),
    gpapi: _ember['default'].inject.service(),

    searchConfig: {
      categoryIds: {},
      contractStatus: {},
      source: {},
      vendorId: {}
    },

    queryParams: {}, // The search mixin needs this

    init: function init() {
      this.initRouteSearch();
    },

    model: function model(params) {
      return _ember['default'].RSVP.hash({
        authorization: this.get('authorization'),
        searchFilters: this.getSearchFilters(params),
        searchEngines: this.get('activeSearchEngines')
      });
    },

    actions: {
      removeAllSearches: function removeAllSearches() {
        var currentParams = this.paramsFor('stats');
        var newParams = this.removeAllSearchParams(currentParams);
        this.transitionTo({ queryParams: newParams });
      },

      removeSearch: function removeSearch(searchKey, searchValue) {
        var currentParams = this.paramsFor('stats');
        var newParams = this.removeSearchParam(searchKey, searchValue, currentParams);
        this.transitionTo({ queryParams: newParams });
      },

      search: function search(criteria) {
        var currentParams = this.paramsFor('stats');
        var newParams = this.addSearchParam(criteria, currentParams);
        this.transitionTo({ queryParams: newParams });
      }
    }
  });
});
define("goods-gateway/stats/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/stats/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "stats");
        dom.setAttribute(el1, "class", "md-column");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "stats-actions");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [2]);
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(element0, [1, 1]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element0, [3, 1]), 1, 1);
        morphs[3] = dom.createMorphAt(element0, 5, 5);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "page-title", [["subexpr", "t", ["titles.stats"], [], ["loc", [null, [1, 8], [1, 26]]], 0, 0]], [], ["loc", [null, [1, 0], [1, 28]]], 0, 0], ["inline", "vp-x-search", [], ["select", "search", "searches", ["subexpr", "@mut", [["get", "model.searchEngines", ["loc", [null, [8, 17], [8, 36]]], 0, 0, 0, 0]], [], [], 0, 0], "debounceTime", 200], ["loc", [null, [6, 6], [10, 8]]], 0, 0], ["inline", "vp-x-search-current-filters", [], ["removeAllSearches", "removeAllSearches", "removeSearch", "removeSearch", "restoreSearch", "restoreSearch", "saveSearch", "saveSearch", "searches", ["subexpr", "@mut", [["get", "model.searchFilters", ["loc", [null, [21, 17], [21, 36]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [16, 6], [22, 8]]], 0, 0], ["content", "outlet", ["loc", [null, [26, 2], [26, 12]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/taxonomy/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return '/goods-gateway/proxy/gpapi/v0/taxonomy';
    }
  });
});
define('goods-gateway/taxonomy/model', ['exports', 'ember-data'], function (exports, _emberData) {
  exports['default'] = _emberData['default'].Model.extend({
    guid: _emberData['default'].attr('string'),
    description: _emberData['default'].attr('string'),
    depth: _emberData['default'].attr('number'),
    children: _emberData['default'].attr()
  });
});
define('goods-gateway/taxonomy/serializer', ['exports', 'goods-gateway/application/serializer'], function (exports, _goodsGatewayApplicationSerializer) {
  exports['default'] = _goodsGatewayApplicationSerializer['default'].extend({
    primaryKey: 'guid',
    normalizeArrayResponse: function normalizeArrayResponse(store, primaryModelClass, payload) {
      return this._super(store, primaryModelClass, { taxonomy: payload });
    }
  });
});
define("goods-gateway/templates/head", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/templates/head.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment(" `app/templates/head.hbs` ");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment(" content from ember-page-title, injected by ember-cli-head ");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment(" The 'model' available in this template can be populated by ");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment(" setting values on the 'head-data' service. ");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("title");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [8]), 0, 0);
        return morphs;
      },
      statements: [["content", "model.title", ["loc", [null, [5, 7], [5, 22]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define("goods-gateway/templates/index", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/templates/index.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "outlet", ["loc", [null, [1, 0], [1, 10]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/transforms/array', ['exports', 'model-fragments/transforms/array'], function (exports, _modelFragmentsTransformsArray) {
  exports['default'] = _modelFragmentsTransformsArray['default'];
});
define('goods-gateway/transforms/fragment-array', ['exports', 'model-fragments/transforms/fragment-array'], function (exports, _modelFragmentsTransformsFragmentArray) {
  exports['default'] = _modelFragmentsTransformsFragmentArray['default'];
});
define('goods-gateway/transforms/fragment', ['exports', 'model-fragments/transforms/fragment'], function (exports, _modelFragmentsTransformsFragment) {
  exports['default'] = _modelFragmentsTransformsFragment['default'];
});
define('goods-gateway/transforms/raw', ['exports', 'ember-data'], function (exports, _emberData) {
  exports['default'] = _emberData['default'].Transform.extend({
    deserialize: function deserialize(data) {
      return data;
    },
    serialize: function serialize(data) {
      return data;
    }
  });
});
define('goods-gateway/upload/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/bulk/v1'
  });
});
define('goods-gateway/upload/catalog-input-file/model', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {
  exports['default'] = _modelFragments['default'].Fragment.extend({
    byteSize: _emberData['default'].attr('number'),
    filename: _emberData['default'].attr('string')
  });
});
define('goods-gateway/upload/model', ['exports', 'ember-data', 'model-fragments', 'goods-gateway/utils/ember-helpers'], function (exports, _emberData, _modelFragments, _goodsGatewayUtilsEmberHelpers) {
  exports['default'] = _emberData['default'].Model.extend({
    catalogInputFile: _modelFragments['default'].fragment('upload/catalog-input-file', { defaultValue: _goodsGatewayUtilsEmberHelpers.defaultObject }),
    createdAt: _emberData['default'].attr('date'),
    failedRows: _emberData['default'].attr('number'),
    hasErrors: _emberData['default'].attr('boolean'),
    status: _emberData['default'].attr('string'),
    updatedAt: _emberData['default'].attr('date'),
    vendorId: _emberData['default'].attr('string'),
    view: _emberData['default'].attr('string')
  });
});
define('goods-gateway/user/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/v1'
  });
});
define('goods-gateway/user/model', ['exports', 'ember-data', 'ember-validations', 'goods-gateway/constants/regexes'], function (exports, _emberData, _emberValidations, _goodsGatewayConstantsRegexes) {
  exports['default'] = _emberData['default'].Model.extend(_emberValidations['default'], {
    email: _emberData['default'].attr('string'),
    firstName: _emberData['default'].attr('string'),
    lastName: _emberData['default'].attr('string'),
    roles: _emberData['default'].attr(),
    vendorUserAssociations: _emberData['default'].hasMany('vendorUserAssociation'),

    validations: {
      email: {
        format: {
          'with': _goodsGatewayConstantsRegexes.EMAIL_REGEX,
          presence: true
        }
      },
      firstName: {
        presence: true
      },
      lastName: {
        presence: true
      }
    }
  });
});
define('goods-gateway/utils/aggregate-validation-errors', ['exports'], function (exports) {
  exports['default'] = function (validatedObject) {
    return validatedObject.get('validators').filter(function (validator) {
      return validator.get('errors.length');
    }).map(function (validator) {
      return {
        property: validator.property,
        messages: validator.get('errors')
      };
    });
  };
});
define('goods-gateway/utils/can', ['exports'], function (exports) {
  exports['default'] = function (authorization, permissions, options) {
    options = options || {};
    var hasPermission = permissions.every(function (permission) {
      return authorization.can(permission);
    });

    return hasPermission || options.allowExternal && authorization.get('isExternal');
  };
});
define('goods-gateway/utils/content-for-locale', ['exports'], function (exports) {
  function filterContents(locale, contents) {
    return contents.filter(function (c) {
      return c.get('locale').match(locale);
    })[0];
  }

  exports['default'] = function (locale) {
    var contents = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];

    var content = filterContents(locale, contents);
    if (content) {
      return content;
    }

    var lang = locale.split('_')[0];
    return filterContents(lang, contents);
  };
});
define('goods-gateway/utils/date-helpers', ['exports', 'moment'], function (exports, _moment) {
  exports.daysFromToday = daysFromToday;
  exports.todayAtMidnight = todayAtMidnight;
  exports.addWeekDays = addWeekDays;

  var SUNDAY = 0;
  var SATURDAY = 6;

  function daysFromToday(days) {
    return (0, _moment['default'])().add(days, 'days');
  }

  function todayAtMidnight() {
    return (0, _moment['default'])().startOf('day');
  }

  function addWeekDays(date, days) {
    var result = (0, _moment['default'])(date);
    while (days > 0) {
      result.add(1, "days");
      var dow = result.weekday();
      if (SUNDAY < dow && dow < SATURDAY) {
        days--;
      }
    }
    return result;
  }
});
define('goods-gateway/utils/download-utility', ['exports', 'ember'], function (exports, _ember) {

  var baseUrl = '/goods-gateway/proxy/gpapi/bulk/v1';
  var downloadUrlMapper = {
    "errors": baseUrl + '/uploads/',
    "input": baseUrl + '/uploads/',
    "export": baseUrl + '/exports/'
  };

  exports['default'] = {
    templateDownload: function templateDownload(templateId, domEle) {
      var downloadUrl = baseUrl + '/templates/' + templateId;

      _ember['default'].$("<iframe/>").attr({
        src: downloadUrl,
        style: "visibility:hidden;display:none"
      }).appendTo(domEle);
    },

    fileDownload: function fileDownload(endpoint, id, domEle, overrideUri) {
      var downloadUrl = overrideUri || downloadUrlMapper[endpoint] + id + "/" + endpoint;

      _ember['default'].$("<iframe/>").attr({
        src: downloadUrl,
        style: "visibility:hidden;display:none"
      }).appendTo(domEle);
    }
  };
});
define('goods-gateway/utils/ember-helpers', ['exports', 'ember'], function (exports, _ember) {
  var defaultArray = function defaultArray() {
    return [];
  };

  exports.defaultArray = defaultArray;
  var defaultObject = function defaultObject() {
    return {};
  };

  exports.defaultObject = defaultObject;
  var emberize = function emberize(thing) {
    var type = _ember['default'].typeOf(thing);
    if (type === 'object') {
      var emberObject = _ember['default'].Object.create();
      for (var key in thing) {
        emberObject.set(key, emberize(thing[key]));
      }
      return emberObject;
    } else if (type === 'array') {
      return thing.map(function (t) {
        return emberize(t);
      });
    } else {
      return thing;
    }
  };

  exports.emberize = emberize;
  var isDirty = function isDirty(modelOrModels) {
    if (_ember['default'].isArray(modelOrModels)) {
      return modelOrModels.any(function (model) {
        return isDirty(model);
      });
    } else {
      var _ret = (function () {
        var model = modelOrModels;
        if (model.get('hasDirtyAttributes')) {
          return {
            v: true
          };
        }

        var dirtyRelationships = false;
        model.eachRelationship(function (relationship, descriptor) {
          if (descriptor.kind !== 'belongsTo') {
            // don't travel back up and enter a recursive nightmare
            if (isDirty(model.get(relationship))) {
              dirtyRelationships = true;
            }
          }
        });
        return {
          v: dirtyRelationships
        };
      })();

      if (typeof _ret === 'object') return _ret.v;
    }
  };

  exports.isDirty = isDirty;
  var rawObject = function rawObject(object, attributes) {
    if (_ember['default'].isEmpty(object)) {
      return {};
    }
    return attributes.reduce(function (rawObject, attribute) {
      rawObject[attribute] = object.get(attribute);
      return rawObject;
    }, {});
  };

  exports.rawObject = rawObject;
  var runLater = function runLater(context, delay, callback) {
    _ember['default'].run.later(function () {
      if (!context.isDestroyed) {
        callback();
      }
    }, delay);
  };
  exports.runLater = runLater;
});
define('goods-gateway/utils/format-bytes', ['exports'], function (exports) {
  exports['default'] = function (bytes, decimals) {

    if (bytes === 0) {
      return '0 Byte';
    }

    var k = 1000,
        // or 1024 for binary
    dm = decimals + 1 || 3,
        sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
        i = Math.floor(Math.log(bytes) / Math.log(k));

    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
  };
});
define('goods-gateway/utils/i18n/compile-template', ['exports', 'ember-i18n/utils/i18n/compile-template'], function (exports, _emberI18nUtilsI18nCompileTemplate) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberI18nUtilsI18nCompileTemplate['default'];
    }
  });
});
define('goods-gateway/utils/i18n/missing-message', ['exports', 'ember-i18n/utils/i18n/missing-message'], function (exports, _emberI18nUtilsI18nMissingMessage) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberI18nUtilsI18nMissingMessage['default'];
    }
  });
});
define('goods-gateway/utils/money-converter', ['exports', 'goods-gateway/config/environment'], function (exports, _goodsGatewayConfigEnvironment) {
  exports['default'] = {
    VALID_PRICE_PATTERN: '^\\s*\\d*\\.?\\d{0,2}\\s*$',
    VALID_PRICE_WITH_CURRENCY_CODE_PATTERN: '^\\$\\s*\\d*\\.?\\d{0,2}\\s*$',

    convertMinorToMajor: function convertMinorToMajor(price) {
      var currencyCode = arguments.length <= 1 || arguments[1] === undefined ? 'USD' : arguments[1];

      var factor = _goodsGatewayConfigEnvironment['default'].minorToMajorCurrencyFactor[currencyCode];
      if (factor) {
        return price / factor;
      }
    },

    convertMajorToMinor: function convertMajorToMinor(price) {
      var currencyCode = arguments.length <= 1 || arguments[1] === undefined ? 'USD' : arguments[1];

      var factor = _goodsGatewayConfigEnvironment['default'].minorToMajorCurrencyFactor[currencyCode];
      if (factor) {
        return Math.round(price * factor);
      }
    },

    convertStringToMinor: function convertStringToMinor(price) {
      var currencyCode = arguments.length <= 1 || arguments[1] === undefined ? 'USD' : arguments[1];

      if (this.isValidPrice(price)) {
        return this.convertMajorToMinor(parseFloat(price), currencyCode);
      }
    },

    convertStringToMajor: function convertStringToMajor(price) {
      var currencyCode = arguments.length <= 1 || arguments[1] === undefined ? 'USD' : arguments[1];

      if (currencyCode === 'USD') {
        return price.replace('$', '').replace(',', '');
      }
    },

    isValidPrice: function isValidPrice(price) {
      var regex = new RegExp(this.VALID_PRICE_PATTERN);
      return price && price.toString().match(regex);
    },

    isValidPriceWithCurrencyCode: function isValidPriceWithCurrencyCode(price) {
      var regex = new RegExp(this.VALID_PRICE_WITH_CURRENCY_CODE_PATTERN);
      return price && price.toString().replace(',', '').match(regex);
    }
  };
});
define('goods-gateway/utils/option-lookup', ['exports', 'ember'], function (exports, _ember) {

  var Lookup = _ember['default'].Object.extend({
    dealProductByInventoryId: function dealProductByInventoryId(inventoryProductId) {
      return this.get('dealProducts').findBy('inventoryProductId', inventoryProductId);
    },

    itemMasterOptionByInstanceGin: function itemMasterOptionByInstanceGin(instanceGin) {
      return this.get('dealOptions').findBy('inventory_item_instance.gin', instanceGin);
    },

    marketPricingOptionByInventoryProductId: function marketPricingOptionByInventoryProductId(inventoryProductId) {
      return this.get('marketPricingOptions').findBy('inventoryProductId', inventoryProductId);
    }
  });

  exports['default'] = Lookup;
});
define('goods-gateway/utils/overall-approval-status', ['exports'], function (exports) {
  var APPROVED = 'approved';
  var REJECTED = 'rejected';
  var PENDING = 'pending';
  var CONTENT_REJECTED = 'content_rejected';

  exports['default'] = function (autoApprovalStatus, manualApprovalStatus) {
    if (autoApprovalStatus === REJECTED || autoApprovalStatus === CONTENT_REJECTED || manualApprovalStatus === REJECTED) {
      return REJECTED;
    }
    if (autoApprovalStatus === APPROVED && manualApprovalStatus === APPROVED) {
      return APPROVED;
    }
    return PENDING;
  };
});
define("goods-gateway/utils/parse-uri", ["exports"], function (exports) {
	/* jshint ignore:start */

	// parseUri 1.2.2
	// (c) Steven Levithan <stevenlevithan.com>
	// MIT License

	function parseUri(str) {
		var o = parseUri.options,
		    m = o.parser[o.strictMode ? "strict" : "loose"].exec(str),
		    uri = {},
		    i = 14;

		while (i--) uri[o.key[i]] = m[i] || "";

		uri[o.q.name] = {};
		uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {
			if ($1) uri[o.q.name][$1] = $2;
		});

		return uri;
	};

	parseUri.options = {
		strictMode: false,
		key: ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"],
		q: {
			name: "queryKey",
			parser: /(?:^|&)([^&=]*)=?([^&]*)/g
		},
		parser: {
			strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
			loose: /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
		}
	};

	exports["default"] = parseUri;

	/* jshint ignore:end */
});
define('goods-gateway/utils/promise', ['exports', 'ember'], function (exports, _ember) {
  exports.isPromise = isPromise;
  exports.isPending = isPending;
  exports.isResolved = isResolved;
  exports.getResult = getResult;

  // A collection of mostly-awful hacks to abuse promises

  var PENDING_STATE = 0;
  var RESOLVED_STATE = 1;

  function isPromise(input) {
    return input instanceof _ember['default'].RSVP.Promise;
  }

  function isPending(input) {
    return input._state === PENDING_STATE || typeof input._state === 'undefined';
  }

  function isResolved(input) {
    return input._state === RESOLVED_STATE;
  }

  // Synchronously return a promise's result if it's already resolved

  function getResult(input) {
    // Not a promise?
    if (!isPromise(input)) {
      return input;
    }

    // Not resolved?
    if (!isResolved(input)) {
      return;
    }

    return input._result;
  }
});
define('goods-gateway/utils/replace-underscores-with-pipes', ['exports'], function (exports) {
         exports['default'] = function (description) {
                  return description.split('_').filter(function (s) {
                           return s.trim().length > 0;
                  }).join(' | ');
         };
});
define('goods-gateway/utils/string-to-array', ['exports'], function (exports) {
  exports['default'] = function (string, delimiter) {
    delimiter = delimiter || ',';
    return string.split(delimiter).map(function (p) {
      if (p.trim() !== '') {
        return p.trim();
      }
    }).compact().uniq();
  };
});
define('goods-gateway/validators/local/attribute-presence', ['exports', 'ember', 'goods-gateway/application/custom-validator'], function (exports, _ember, _goodsGatewayApplicationCustomValidator) {
  exports['default'] = _goodsGatewayApplicationCustomValidator['default'].extend({
    init: function init() {
      this._super.apply(this, arguments);
      this.dependentValidationKeys.pushObjects(['category.id', 'category.variantCategories.@each.id', 'attributes.@each.attrValueId']);
    },

    call: function call() {
      var _this = this;

      var hasInvalidOption = this.getWithDefault('model.category.variantCategories', []).any(function (variantCategory) {
        if (!variantCategory.get('required')) {
          return false;
        }
        var attribute = _this.get('model.attributes').findBy('attrNameId', variantCategory.get('id'));
        if (!attribute) {
          return true;
        }
        var value = attribute.get('attrValueId') || attribute.get('localizedContents.firstObject.attrValue');
        if (_ember['default'].isBlank(value)) {
          return true;
        }
      });

      if (hasInvalidOption) {
        var message = this.get('i18n').t('errors.missingRequiredAttribute');
        this.errors.pushObject(message);
      }
    }
  });
});
define('goods-gateway/validators/local/attributes', ['exports', 'goods-gateway/application/custom-validator'], function (exports, _goodsGatewayApplicationCustomValidator) {
  exports['default'] = _goodsGatewayApplicationCustomValidator['default'].extend({
    init: function init() {
      this._super.apply(this, arguments);
      this.dependentValidationKeys.pushObjects(['category.id', 'product.items.@each._attributeValidationCache',
      // the above watcher should be inclusive of the next one,
      // but ember is having a problem knowing that in practice when creating new items
      // the more unfortunate part is that tests do not run into the same problem
      '_attributeValidationCache']);
    },

    call: function call() {
      var _this = this;

      var attributeValidationCache = this.get('model._attributeValidationCache');
      if (attributeValidationCache === '') {
        return;
      }
      var hasDuplicates = this.getWithDefault('model.product.items', []).any(function (item) {
        if (item.get('id') === _this.get('model.id')) {
          return false;
        }
        return attributeValidationCache === item.get('_attributeValidationCache');
      });

      if (hasDuplicates) {
        var message = this.get('i18n').t('errors.duplicateAttributeSet');
        this.errors.pushObject(message);
      }
    }
  });
});
define('goods-gateway/validators/local/bullet-points', ['exports', 'goods-gateway/application/custom-validator', 'goods-gateway/constants/regexes'], function (exports, _goodsGatewayApplicationCustomValidator, _goodsGatewayConstantsRegexes) {
  var MAX_LENGTH = 128;

  exports['default'] = _goodsGatewayApplicationCustomValidator['default'].extend({
    init: function init() {
      this._super();
      // important: watches for changes
      this.dependentValidationKeys.pushObject(this.get('property') + '.length');
    },

    call: function call() {
      var _this = this;

      var bulletPoints = this.get(this.get('property'));
      bulletPoints.forEach(function (bp) {
        if (bp.length > MAX_LENGTH) {
          var message = _this.get('i18n').t('errors.tooLong', { count: MAX_LENGTH });
          _this.errors.pushObject(message);
        }
        if (!bp.match(_goodsGatewayConstantsRegexes.LOCALIZED_CONTENT_REGEX)) {
          var message = _this.get('i18n').t('errors.localizedContent');
          _this.errors.pushObject(message);
        }
      });
    }
  });
});
define('goods-gateway/validators/local/date-range', ['exports', 'goods-gateway/application/custom-validator', 'moment'], function (exports, _goodsGatewayApplicationCustomValidator, _moment) {
  exports['default'] = _goodsGatewayApplicationCustomValidator['default'].extend({
    init: function init() {
      var _this = this;

      this._super.apply(this, arguments);
      this.options.relatedProperties.forEach(function (prop) {
        _this.dependentValidationKeys.pushObject(prop);
      });
    },

    call: function call() {
      if (_moment['default'].isDate(this.model.get(this.property))) {
        this._date = (0, _moment['default'])(this.model.get(this.property));
        this._checkBefore();
        if (this.options.after) {
          this._checkAfter();
        }
      }
    },

    _checkBefore: function _checkBefore() {
      var beforeDate = this.options.before(this.model);

      if (beforeDate && beforeDate.isValid() && this._date.isSameOrAfter(beforeDate)) {
        this.errors.pushObject(this.get('i18n').t('errors.before_date_validation_error', { beforeDate: (0, _moment['default'])(beforeDate).format("MM/DD/YYYY") }));
      }
    },

    _checkAfter: function _checkAfter() {
      var afterDate = this.options.after(this.model);

      if (afterDate && afterDate.isValid() && this._date.isSameOrBefore(afterDate)) {
        this.errors.pushObject(this.get('i18n').t('errors.after_date_validation_error', { afterDate: (0, _moment['default'])(afterDate).format("MM/DD/YYYY") }));
      }
    }
  });
});
define('goods-gateway/validators/local/date', ['exports', 'goods-gateway/application/custom-validator', 'moment'], function (exports, _goodsGatewayApplicationCustomValidator, _moment) {
  exports['default'] = _goodsGatewayApplicationCustomValidator['default'].extend({
    call: function call() {
      var val = this.model.get(this.property);
      if (!_moment['default'].isDate(val)) {
        this.errors.pushObject(this.get('i18n').t('errors.date'));
      }
    }
  });
});
define('goods-gateway/validators/local/format', ['exports', 'ember-validations/validators/local/format'], function (exports, _emberValidationsValidatorsLocalFormat) {
  exports['default'] = _emberValidationsValidatorsLocalFormat['default'].extend({
    init: function init() {
      this._super.apply(this, arguments);

      if (this.options.observes) {
        this.dependentValidationKeys.pushObject(this.options.observes);
      }
    }
  });
});
define('goods-gateway/validators/local/localized-contents', ['exports', 'goods-gateway/application/custom-validator'], function (exports, _goodsGatewayApplicationCustomValidator) {
  exports['default'] = _goodsGatewayApplicationCustomValidator['default'].extend({
    init: function init() {
      this._super.apply(this, arguments);
      this.dependentValidationKeys.pushObject('localizedContents.@each.isValid');
    },

    call: function call() {
      if (this.get('model.localizedContents').isAny('isValid', false)) {
        var message = this.get('i18n').t('errors.invalidCopy');
        this.errors.pushObject(message);
      }
    }
  });
});
define('goods-gateway/validators/local/presence', ['exports', 'ember-validations/validators/local/presence'], function (exports, _emberValidationsValidatorsLocalPresence) {
  exports['default'] = _emberValidationsValidatorsLocalPresence['default'].extend({
    init: function init() {
      this._super.apply(this, arguments);

      if (this.options.observes) {
        this.dependentValidationKeys.pushObject(this.options.observes);
      }
    }
  });
});
define('goods-gateway/validators/local/universal-id', ['exports', 'goods-gateway/application/custom-validator'], function (exports, _goodsGatewayApplicationCustomValidator) {

  var ID_TYPE_TO_REGEX = {
    'gtin-8': /^\d{8}$/,
    'gtin-12': /^\d{12}$/,
    'isbn-10': /^\d{10}$/,
    'gtin-13': /^\d{13}$/,
    'gtin-14': /^\d{14}$/
  };

  var SOFT_UPC_TYPE = 'soft-upc';

  var isDuplicated = function isDuplicated(value, values) {
    var matches = values.filter(function (element) {
      return value === element;
    });
    return matches.length > 1;
  };

  exports['default'] = _goodsGatewayApplicationCustomValidator['default'].extend({
    init: function init() {
      this._super.apply(this, arguments);
      this.dependentValidationKeys.pushObjects(['universalId.type', 'product._universalIdValues.@each']);
    },

    call: function call() {
      var value = this.get('model.universalId.value');
      if (value) {
        var values = this.getWithDefault('model.product._universalIdValues', []);
        if (isDuplicated(value, values)) {
          var message = this.get('i18n').t('errors.duplicateUniversalId');
          this.errors.pushObject(message);
        }
        var type = this.get('model.universalId.type');
        if (type && type !== SOFT_UPC_TYPE) {
          if (!value.match(ID_TYPE_TO_REGEX[type])) {
            var message = this.get('i18n').t('errors.wrongUniversalIdFormat', { type: type });
            this.errors.pushObject(message);
          }
        }
      }
    }
  });
});
define('goods-gateway/validators/local/vp-array-inclusion', ['exports', 'goods-gateway/application/custom-validator'], function (exports, _goodsGatewayApplicationCustomValidator) {
  exports['default'] = _goodsGatewayApplicationCustomValidator['default'].extend({
    init: function init() {
      this._super.apply(this, arguments);
      this.dependentValidationKeys.pushObject(this.property + '.length');
    },

    call: function call() {
      var allowedValues = this.options.allowedValues;
      var currentValues = this.model.get(this.property);
      var badValues = currentValues.reject(function (currentValue) {
        return allowedValues.includes(currentValue);
      });

      if (badValues.length) {
        var message = this.get('i18n').t('errors.arrayIncludesInvalidValues');
        this.errors.pushObject(message);
      }
    }
  });
});
define('goods-gateway/validators/local/vp-format', ['exports', 'ember', 'ember-validations/validators/local/format', 'ember-validations/messages'], function (exports, _ember, _emberValidationsValidatorsLocalFormat, _emberValidationsMessages) {
  exports['default'] = _emberValidationsValidatorsLocalFormat['default'].extend({
    init: function init() {
      this._super.apply(this, arguments);

      if (_ember['default'].I18n && this.options.translationKey) {
        _ember['default'].set(this, 'options.message', _emberValidationsMessages['default'].render(this.options.translationKey, this.options));
      }
    }
  });
});
define('goods-gateway/validators/local/vp-length', ['exports', 'ember-validations/validators/local/length'], function (exports, _emberValidationsValidatorsLocalLength) {
  exports['default'] = _emberValidationsValidatorsLocalLength['default'].extend({
    init: function init() {
      this._super.apply(this, arguments);

      if (this.options.observes) {
        this.dependentValidationKeys.pushObject(this.options.observes);
      }
    }
  });
});
define('goods-gateway/vendor-user-association/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {
  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    namespace: '/goods-gateway/proxy/gpapi/v2',
    pathForType: function pathForType() {
      return 'vendor_user_associations';
    },

    buildURL: function buildURL(modelName, id, snapshot, requestType) {
      if (requestType === 'createRecord') {
        var originalCreateURL = this._super.apply(this, arguments);
        var shouldInvite = snapshot.adapterOptions.shouldInvite;
        return originalCreateURL + '?shouldInvite=' + shouldInvite;
      } else {
        return this._super.apply(this, arguments);
      }
    }
  });
});
define('goods-gateway/vendor-user-association/model', ['exports', 'ember-data', 'ember-validations', 'goods-gateway/constants/vendor-user-association-roles', 'goods-gateway/utils/ember-helpers'], function (exports, _emberData, _emberValidations, _goodsGatewayConstantsVendorUserAssociationRoles, _goodsGatewayUtilsEmberHelpers) {
  exports['default'] = _emberData['default'].Model.extend(_emberValidations['default'], {
    roles: _emberData['default'].attr({ defaultValue: _goodsGatewayUtilsEmberHelpers.defaultArray }),
    user: _emberData['default'].belongsTo('user'),
    vendor: _emberData['default'].belongsTo('vendor'),

    validations: {
      roles: {
        'vp-array-inclusion': {
          allowedValues: _goodsGatewayConstantsVendorUserAssociationRoles['default']
        },
        length: {
          minimum: 1
        }
      }
    }
  });
});
define('goods-gateway/vendor-user-association/serializer', ['exports', 'ember-data'], function (exports, _emberData) {
  exports['default'] = _emberData['default'].RESTSerializer.extend({
    keyForRelationship: function keyForRelationship(key) {
      if (key === 'vendor') {
        return 'vendorId';
      } else if (key === 'user') {
        return 'accountId';
      } else {
        return this._super.apply(this, arguments);
      }
    }
  });
});
define('goods-gateway/vendor/adapter', ['exports', 'goods-gateway/application/adapter'], function (exports, _goodsGatewayApplicationAdapter) {

  var NOT_FOUND_CODE = 404;

  exports['default'] = _goodsGatewayApplicationAdapter['default'].extend({
    isInvalid: function isInvalid(status, headers, payload) {
      var ignoreErrors = status === NOT_FOUND_CODE;
      return this._super(status, headers, payload, ignoreErrors);
    },

    namespace: '/goods-gateway/proxy/gpapi/v1',

    queryParams: {
      include: ['paymentInfo', 'bankInfo']
    }
  });
});
define('goods-gateway/vendor/address/model', ['exports', 'ember-data', 'model-fragments', 'ember-validations'], function (exports, _emberData, _modelFragments, _emberValidations) {
  exports['default'] = _modelFragments['default'].Fragment.extend(_emberValidations['default'], {
    address1: _emberData['default'].attr('string'),
    address2: _emberData['default'].attr('string'),
    city: _emberData['default'].attr('string'),
    country: _emberData['default'].attr('string'),
    state: _emberData['default'].attr('string'),
    zip: _emberData['default'].attr('string'),

    validations: {
      address1: {
        presence: true
      },
      city: {
        presence: true
      },
      country: {
        presence: true
      },
      state: {
        presence: {
          'if': function _if(model) {
            return ['US', 'CA'].includes(model.get('country'));
          },
          observes: 'country'
        }
      },
      zip: {
        presence: true,
        format: {
          'if': function _if(model) {
            return model.get('country') === 'US';
          },
          observes: 'country',
          'with': /(^\d{5}$)|(^\d{5}-\d{4}$)/
        }
      }
    }
  });
});
define('goods-gateway/vendor/bank-info/model', ['exports', 'ember-data', 'model-fragments', 'ember-validations', 'goods-gateway/constants/country-codes'], function (exports, _emberData, _modelFragments, _emberValidations, _goodsGatewayConstantsCountryCodes) {

  var OBFUSCATED_FIELD_MATCHER = /^\*+/;

  exports['default'] = _modelFragments['default'].Fragment.extend(_emberValidations['default'], {
    beneficiaryBankAccountNumber: _emberData['default'].attr('string'),
    beneficiaryBankName: _emberData['default'].attr('string'),
    beneficiaryBankRoutingNumber: _emberData['default'].attr('string'),
    country: _emberData['default'].attr('string'),
    makeChecksPayableTo: _emberData['default'].attr('string'),
    paymentPreference: _emberData['default'].attr('string', { defaultValue: 'ach' }),
    taxId: _emberData['default'].attr('string'),

    validations: {
      country: {
        presence: true,
        inclusion: {
          'in': _goodsGatewayConstantsCountryCodes['default']
        }
      },
      makeChecksPayableTo: {
        presence: true
      },
      beneficiaryBankName: {
        presence: true
      },
      beneficiaryBankAccountNumber: {
        presence: true,
        numericality: {
          'if': function _if(model) {
            var number = model.get('beneficiaryBankAccountNumber');
            return number ? !number.match(OBFUSCATED_FIELD_MATCHER) : true;
          },
          onlyInteger: true
        }
      },
      beneficiaryBankRoutingNumber: {
        presence: true,
        numericality: {
          onlyInteger: true
        },
        length: 9
      },
      taxId: {
        presence: true,
        format: {
          'if': function _if(model) {
            var taxId = model.get('taxId');
            return taxId ? !taxId.match(OBFUSCATED_FIELD_MATCHER) : true;
          },
          observes: 'taxId',
          'with': /\d{3}-\d{2}-\d{4}|\d{2}-\d{7}|\d{9}/
        }
      }
    }
  });
});
define('goods-gateway/vendor/bank-info/serializer', ['exports', 'ember-data/serializers/json'], function (exports, _emberDataSerializersJson) {

  var OBFUSCATED_VALUE_MATCHER = /\*/;
  var OBFUSCATED_FIELDS = ['beneficiaryBankAccountNumber', 'taxId'];

  exports['default'] = _emberDataSerializersJson['default'].extend({
    serialize: function serialize(snapshot, options) {
      var data = this._super(snapshot, options);

      OBFUSCATED_FIELDS.forEach(function (field) {
        if (data[field] && data[field].match(OBFUSCATED_VALUE_MATCHER)) {
          delete data[field];
        }
      });

      return data;
    }
  });
});
define('goods-gateway/vendor/business-contact/model', ['exports', 'ember-data', 'model-fragments', 'ember-validations'], function (exports, _emberData, _modelFragments, _emberValidations) {
  exports['default'] = _modelFragments['default'].Fragment.extend(_emberValidations['default'], {
    firstName: _emberData['default'].attr('string'),
    lastName: _emberData['default'].attr('string'),
    email: _emberData['default'].attr('string'),
    phone: _emberData['default'].attr('string'),

    validations: {
      firstName: {
        presence: true
      },
      lastName: {
        presence: true
      },
      email: {
        presence: true
      },
      phone: {
        presence: true
      }
    }
  });
});
define('goods-gateway/vendor/controller', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Controller.extend({
    queryParams: ['page', 'query'],
    page: 1,
    query: '',

    init: function init() {
      this._super.apply(this, arguments);
      this.addObserver('query', function () {
        this.set('page', 1);
      });
    }
  });
});
define("goods-gateway/vendor/index-loading/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/vendor/index-loading/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "vp-loading-spinner", ["loc", [null, [1, 0], [1, 22]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/vendor/index/route', ['exports', 'ember'], function (exports, _ember) {

  var PAGE_LIMIT = 20;

  exports['default'] = _ember['default'].Route.extend({
    model: function model() {
      var vendorParams = this.paramsFor('vendor');
      var query = vendorParams.query;
      var offset = (vendorParams.page - 1) * PAGE_LIMIT;
      return this.get('store').query('vendor', {
        limit: PAGE_LIMIT,
        offset: offset,
        filter: {
          query: query
        }
      });
    },

    actions: {
      goToPage: function goToPage(page) {
        this.transitionTo({
          queryParams: {
            page: page
          }
        });
      }
    }
  });
});
define("goods-gateway/vendor/index/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 24,
                "column": 14
              },
              "end": {
                "line": 26,
                "column": 14
              }
            },
            "moduleName": "goods-gateway/vendor/index/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("                ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["content", "vendor.name", ["loc", [null, [25, 16], [25, 31]]], 0, 0, 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 21,
              "column": 8
            },
            "end": {
              "line": 37,
              "column": 8
            }
          },
          "moduleName": "goods-gateway/vendor/index/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          dom.setAttribute(el1, "class", "vendor");
          var el2 = dom.createTextNode("\n            ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "name");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("            ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n            ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "id");
          var el3 = dom.createTextNode("\n              ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n            ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "created-at number");
          var el3 = dom.createTextNode("\n              ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element0, 'id');
          morphs[1] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
          morphs[3] = dom.createMorphAt(dom.childAt(element0, [5]), 1, 1);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", ["vendor-", ["get", "vendor.id", ["loc", [null, [22, 27], [22, 36]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], ["block", "link-to", ["vendor.show.edit", ["get", "vendor.id", ["loc", [null, [24, 44], [24, 53]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [24, 14], [26, 26]]]], ["content", "vendor.id", ["loc", [null, [30, 14], [30, 27]]], 0, 0, 0, 0], ["inline", "moment-format", [["get", "vendor.createdAt", ["loc", [null, [34, 30], [34, 46]]], 0, 0, 0, 0], "l"], [], ["loc", [null, [34, 14], [34, 52]]], 0, 0]],
        locals: ["vendor"],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 46,
                "column": 6
              },
              "end": {
                "line": 48,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/vendor/index/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["vendors.index.newVendor"], [], ["loc", [null, [47, 8], [47, 39]]], 0, 0]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 45,
              "column": 4
            },
            "end": {
              "line": 49,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/vendor/index/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "link-to", ["vendor.new"], ["title", ["subexpr", "t", ["vendors.index.newVendor"], [], ["loc", [null, [46, 36], [46, 65]]], 0, 0], "id", "new-vendor"], 0, null, ["loc", [null, [46, 6], [48, 18]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/vendor/index/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("table");
        dom.setAttribute(el3, "class", "search-results table-lined");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("thead");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("tr");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "class", "number");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("tbody");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column align-items-right");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0, 1, 1]);
        var element2 = dom.childAt(element1, [1, 1]);
        var element3 = dom.childAt(fragment, [2]);
        var morphs = new Array(6);
        morphs[0] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(element2, [3]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element2, [5]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element3, [1]), 1, 1);
        morphs[5] = dom.createMorphAt(dom.childAt(element3, [3]), 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["vendors.index.name"], [], ["loc", [null, [7, 12], [7, 38]]], 0, 0], ["inline", "t", ["vendors.index.id"], [], ["loc", [null, [11, 12], [11, 36]]], 0, 0], ["inline", "t", ["vendors.index.createdAt"], [], ["loc", [null, [15, 12], [15, 43]]], 0, 0], ["block", "each", [["get", "model", ["loc", [null, [21, 16], [21, 21]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [21, 8], [37, 17]]]], ["block", "vp-add", [], [], 1, null, ["loc", [null, [45, 4], [49, 15]]]], ["inline", "mx-paginator", [], ["action", "goToPage", "meta", ["subexpr", "@mut", [["get", "model.meta", ["loc", [null, [53, 42], [53, 52]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [53, 4], [53, 54]]], 0, 0]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/vendor/model', ['exports', 'ember-data/model', 'ember-data', 'ember-validations', 'model-fragments', 'goods-gateway/utils/ember-helpers', 'ember', 'goods-gateway/constants/fulfillment-platforms', 'goods-gateway/constants/uuid-regex'], function (exports, _emberDataModel, _emberData, _emberValidations, _modelFragments, _goodsGatewayUtilsEmberHelpers, _ember, _goodsGatewayConstantsFulfillmentPlatforms, _goodsGatewayConstantsUuidRegex) {

  var isShipOnGroupon = function isShipOnGroupon(model) {
    return model.get('shippingAccount') === 'GROUPON';
  };

  exports['default'] = _emberDataModel['default'].extend(_emberValidations['default'], {
    createdAt: _emberData['default'].attr('date'),
    name: _emberData['default'].attr('string'),
    fulfillmentPlatform: _emberData['default'].attr('string', { defaultValue: 'commercehub' }),
    legacyM3Uuid: _emberData['default'].attr('string'),
    returnToVendorSupported: _emberData['default'].attr('boolean', { defaultValue: false }),
    returnToVendorThreshold: _emberData['default'].attr('number'),
    returnToVendorThresholdCurrency: _emberData['default'].attr('string'),
    shippingAccount: _emberData['default'].attr('string', { defaultValue: 'VENDOR' }),
    shippingSla: _emberData['default'].attr('number'),
    state: _emberData['default'].attr('string'),
    sourceName: _emberData['default'].attr('string', { defaultValue: 'gateway' }),
    supportedShippingServices: _emberData['default'].attr({ defaultValue: _goodsGatewayUtilsEmberHelpers.defaultArray }),

    bankInfo: _modelFragments['default'].fragment('vendor/bankInfo', { defaultValue: _goodsGatewayUtilsEmberHelpers.defaultObject }),
    businessAddress: _modelFragments['default'].fragment('vendor/address', { defaultValue: _goodsGatewayUtilsEmberHelpers.defaultObject }),
    businessContact: _modelFragments['default'].fragment('vendor/business-contact', { defaultValue: _goodsGatewayUtilsEmberHelpers.defaultObject }),
    paymentInfo: _modelFragments['default'].fragment('vendor/paymentInfo', { defaultValue: _goodsGatewayUtilsEmberHelpers.defaultObject }),
    returnAddress: _modelFragments['default'].fragment('vendor/address', { defaultValue: _goodsGatewayUtilsEmberHelpers.defaultObject }),
    shippingAddress: _modelFragments['default'].fragment('vendor/address', { defaultValue: _goodsGatewayUtilsEmberHelpers.defaultObject }),
    vendorUserAssociations: _emberData['default'].hasMany('vendorUserAssociations'),

    hasInvalidReturnAddress: _ember['default'].computed('returnToVendorSupported', 'returnAddress.isValid', function () {
      if (this.get('returnToVendorSupported')) {
        return this.get('returnAddress.isInvalid');
      } else {
        return false;
      }
    }),

    hasInvalidChildren: _ember['default'].computed('bankInfo.isValid', 'businessAddress.isValid', 'businessContact.isValid', 'hasInvalidReturnAddress', 'paymentInfo.isValid', 'shippingAddress.isValid', function () {
      return this.get('bankInfo.isInvalid') || this.get('businessAddress.isInvalid') || this.get('businessContact.isInvalid') || this.get('hasInvalidReturnAddress') || this.get('paymentInfo.isInvalid') || this.get('shippingAddress.isInvalid');
    }),

    validations: {
      name: {
        presence: true
      },
      fulfillmentPlatform: {
        presence: true,
        inclusion: {
          'in': _goodsGatewayConstantsFulfillmentPlatforms['default']
        }
      },
      legacyM3Uuid: {
        format: {
          allowBlank: true,
          'with': _goodsGatewayConstantsUuidRegex['default']
        }
      },
      returnToVendorThreshold: {
        numericality: {
          onlyInteger: true,
          allowBlank: true,
          greaterThanOrEqualTo: 0
        },
        presence: {
          observes: 'returnToVendorSupported',
          'if': function _if(model) {
            return model.get('returnToVendorSupported');
          }
        }
      },
      returnToVendorThresholdCurrency: {
        presence: {
          observes: 'returnToVendorSupported',
          'if': function _if(model) {
            return model.get('returnToVendorSupported');
          }
        }
      },
      shippingSla: {
        numericality: {
          onlyInteger: true,
          allowBlank: true,
          greaterThan: 0
        }
      },
      supportedShippingServices: {
        presence: {
          'if': isShipOnGroupon,
          observes: 'shippingAccount'
        },
        'vp-length': {
          minimum: 1,
          observes: 'shippingAccount',
          'if': isShipOnGroupon
        }
      }
    },

    _clearShippingServices: _ember['default'].observer('shippingAccount', function () {
      if (this.get('shippingAccount') === 'VENDOR') {
        this.set('supportedShippingServices', []);
      }
    })
  });
});
define('goods-gateway/vendor/new/route', ['exports', 'ember', 'goods-gateway/mixins/restricted', 'ember-simple-uuid'], function (exports, _ember, _goodsGatewayMixinsRestricted, _emberSimpleUuid) {
  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsRestricted['default'], {
    // dependencies
    flashMessages: _ember['default'].inject.service('flashMessages'),
    i18n: _ember['default'].inject.service('i18n'),

    authorizationConfig: {
      requiredPermissions: ['write_default']
    },

    // lifecycle
    model: function model() {
      return this.get('store').createRecord('vendor', {
        id: (0, _emberSimpleUuid['default'])()
      });
    },

    actions: {
      save: function save() {
        var _this = this;

        var vendor = this.modelFor(this.routeName);
        if (vendor.get('isInvalid') || vendor.get('hasInvalidChildren')) {
          var message = this.get('i18n').t('vendors.new.invalidVendor');
          this.get('flashMessages').add({
            message: message,
            type: 'error'
          });
          return false;
        }

        vendor.save().then(function (vendor) {
          var message = _this.get('i18n').t('vendors.new.saveSuccess');
          _this.get('flashMessages').success(message);
          _this.transitionTo('vendor.show.edit', vendor.get('id'));
        });
      }
    }
  });
});
define("goods-gateway/vendor/new/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 4
            },
            "end": {
              "line": 12,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/vendor/new/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", ["vendors.edit.allVendors"], [], ["loc", [null, [11, 6], [11, 37]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 20,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/vendor/new/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h1");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("p");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [4]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
        morphs[4] = dom.createMorphAt(element0, 5, 5);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "page-title", [["subexpr", "t", ["vendors.title"], [], ["loc", [null, [1, 8], [1, 27]]], 0, 0]], [], ["loc", [null, [1, 0], [1, 29]]], 0, 0], ["inline", "page-title", [["subexpr", "t", ["vendors.new.title"], [], ["loc", [null, [2, 8], [2, 31]]], 0, 0]], [], ["loc", [null, [2, 0], [2, 33]]], 0, 0], ["inline", "t", ["vendors.new.title"], [], ["loc", [null, [6, 4], [6, 29]]], 0, 0], ["block", "link-to", ["vendor.index"], [], 0, null, ["loc", [null, [10, 4], [12, 16]]]], ["inline", "vp-edit-vendor", [], ["vendor", ["subexpr", "@mut", [["get", "model", ["loc", [null, [16, 11], [16, 16]]], 0, 0, 0, 0]], [], [], 0, 0], "save", "save"], ["loc", [null, [15, 2], [18, 4]]], 0, 0]],
      locals: [],
      templates: [child0]
    };
  })());
});
define('goods-gateway/vendor/payment-info/model', ['exports', 'ember-data', 'model-fragments', 'ember-validations', 'goods-gateway/constants/payment-terms', 'goods-gateway/constants/currency-codes'], function (exports, _emberData, _modelFragments, _emberValidations, _goodsGatewayConstantsPaymentTerms, _goodsGatewayConstantsCurrencyCodes) {
  exports['default'] = _modelFragments['default'].Fragment.extend(_emberValidations['default'], {
    discountAllowance: _emberData['default'].attr('number'),
    financialContactEmail: _emberData['default'].attr('string'),
    freightAllowance: _emberData['default'].attr('number'),
    paymentTerm: _emberData['default'].attr('string'),
    paymentCurrencyCode: _emberData['default'].attr('string', { defaultValue: 'USD' }),

    validations: {
      financialContactEmail: {
        presence: true
      },
      discountAllowance: {
        numericality: true
      },
      freightAllowance: {
        numericality: true
      },
      paymentCurrencyCode: {
        presence: true,
        inclusion: {
          'in': _goodsGatewayConstantsCurrencyCodes['default']
        }
      },
      paymentTerm: {
        presence: true,
        inclusion: {
          'in': _goodsGatewayConstantsPaymentTerms['default']
        }
      }
    }
  });
});
define('goods-gateway/vendor/route', ['exports', 'ember', 'goods-gateway/mixins/restricted'], function (exports, _ember, _goodsGatewayMixinsRestricted) {
  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsRestricted['default'], {
    authorizationConfig: {
      requiredPermissions: ['write_default']
    },

    queryParams: {
      page: {
        refreshModel: true
      },
      query: {
        refreshModel: true
      }
    }
  });
});
define('goods-gateway/vendor/serializer', ['exports', 'ember-data', 'ember'], function (exports, _emberData, _ember) {
  exports['default'] = _emberData['default'].RESTSerializer.extend({
    serialize: function serialize(snapshot, options) {
      var data = this._super(snapshot, _ember['default'].$.extend(options, {
        includeId: true
      }));

      if (!data.returnToVendorSupported) {
        delete data.returnAddress;
      }

      if (_ember['default'].isBlank(data.legacyM3Uuid)) {
        data.legacyM3Uuid = null;
      }

      delete data.createdAt;
      return data;
    }
  });
});
define("goods-gateway/vendor/show/edit/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/vendor/show/edit/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "vp-edit-vendor", [], ["vendor", ["subexpr", "@mut", [["get", "model", ["loc", [null, [2, 9], [2, 14]]], 0, 0, 0, 0]], [], [], 0, 0], "save", "save"], ["loc", [null, [1, 0], [4, 2]]], 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
define('goods-gateway/vendor/show/route', ['exports', 'ember', 'goods-gateway/mixins/restricted', 'goods-gateway/mixins/gateway-route'], function (exports, _ember, _goodsGatewayMixinsRestricted, _goodsGatewayMixinsGatewayRoute) {
  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsRestricted['default'], _goodsGatewayMixinsGatewayRoute['default'], {
    // dependencies
    flashMessages: _ember['default'].inject.service('flashMessages'),
    i18n: _ember['default'].inject.service('i18n'),

    authorizationConfig: {
      requiredPermissions: ['write_default']
    },

    model: function model(params) {
      return this.get('store').findRecord('vendor', params.id, {
        reload: true
      });
    },

    actions: {
      save: function save() {
        var _this = this;

        var vendor = this.modelFor(this.routeName);
        if (vendor.get('isInvalid') || vendor.get('hasInvalidChildren')) {
          var message = this.get('i18n').t('vendors.edit.invalidVendor');
          this.get('flashMessages').add({
            message: message,
            type: 'error'
          });
          return false;
        }

        return vendor.save().then(function () {
          var message = _this.get('i18n').t('vendors.edit.saveSuccess');
          _this.get('flashMessages').success(message);
          _this.transitionTo('vendor');
        });
      }
    }
  });
});
define("goods-gateway/vendor/show/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 6
            },
            "end": {
              "line": 13,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/vendor/show/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [12, 20], [12, 35]]], 0, 0, 0, 0], "allVendors"], [], ["loc", [null, [12, 12], [12, 49]]], 0, 0]], [], ["loc", [null, [12, 8], [12, 51]]], 0, 0]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 19,
                  "column": 10
                },
                "end": {
                  "line": 21,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/vendor/show/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [20, 24], [20, 39]]], 0, 0, 0, 0], "editLink"], [], ["loc", [null, [20, 16], [20, 51]]], 0, 0]], [], ["loc", [null, [20, 12], [20, 53]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 18,
                "column": 8
              },
              "end": {
                "line": 22,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/vendor/show/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "link-to", ["vendor.show.edit", ["get", "model.id", ["loc", [null, [19, 40], [19, 48]]], 0, 0, 0, 0]], ["class", "top-nav-list-item"], 0, null, ["loc", [null, [19, 10], [21, 22]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 25,
                  "column": 10
                },
                "end": {
                  "line": 27,
                  "column": 10
                }
              },
              "moduleName": "goods-gateway/vendor/show/template.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [26, 24], [26, 39]]], 0, 0, 0, 0], "usersLink"], [], ["loc", [null, [26, 16], [26, 52]]], 0, 0]], [], ["loc", [null, [26, 12], [26, 54]]], 0, 0]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 24,
                "column": 8
              },
              "end": {
                "line": 28,
                "column": 8
              }
            },
            "moduleName": "goods-gateway/vendor/show/template.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "link-to", ["vendor.show.users", ["get", "model.id", ["loc", [null, [25, 41], [25, 49]]], 0, 0, 0, 0]], ["class", "top-nav-list-item"], 0, null, ["loc", [null, [25, 10], [27, 22]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 17,
              "column": 6
            },
            "end": {
              "line": 29,
              "column": 6
            }
          },
          "moduleName": "goods-gateway/vendor/show/template.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "mx-top-nav-list-item", [], [], 0, null, ["loc", [null, [18, 8], [22, 33]]]], ["block", "mx-top-nav-list-item", [], [], 1, null, ["loc", [null, [24, 8], [28, 33]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/vendor/show/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("section");
        dom.setAttribute(el2, "class", "row section-navigation");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column section-title");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("h1");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [4]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(element1, [1]);
        var morphs = new Array(6);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
        morphs[3] = dom.createMorphAt(element2, 3, 3);
        morphs[4] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);
        morphs[5] = dom.createMorphAt(element0, 3, 3);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "page-title", [["subexpr", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [1, 19], [1, 34]]], 0, 0, 0, 0], "title"], [], ["loc", [null, [1, 11], [1, 43]]], 0, 0]], [], ["loc", [null, [1, 8], [1, 44]]], 0, 0]], [], ["loc", [null, [1, 0], [1, 46]]], 0, 0], ["inline", "page-title", [["get", "model.name", ["loc", [null, [2, 8], [2, 18]]], 0, 0, 0, 0]], [], ["loc", [null, [2, 0], [2, 20]]], 0, 0], ["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [8, 20], [8, 35]]], 0, 0, 0, 0], "title"], [], ["loc", [null, [8, 12], [8, 44]]], 0, 0]], ["name", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [8, 50], [8, 60]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [8, 8], [8, 62]]], 0, 0], ["block", "link-to", ["vendor.index"], [], 0, null, ["loc", [null, [11, 6], [13, 18]]]], ["block", "mx-top-nav-list", [], [], 1, null, ["loc", [null, [17, 6], [29, 26]]]], ["content", "outlet", ["loc", [null, [33, 2], [33, 12]]], 0, 0, 0, 0]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define('goods-gateway/vendor/show/users/route', ['exports', 'ember', 'goods-gateway/mixins/gateway-route'], function (exports, _ember, _goodsGatewayMixinsGatewayRoute) {
  exports['default'] = _ember['default'].Route.extend(_goodsGatewayMixinsGatewayRoute['default'], {
    // dependencies
    flashMessages: _ember['default'].inject.service('flashMessages'),
    i18n: _ember['default'].inject.service('i18n'),

    // lifecycle
    model: function model() {
      var vendor = this.modelFor('vendor.show');
      return this._eagerLoadedAssociations(vendor.get('id'));
    },

    actions: {
      createUser: function createUser(user, vendorRoles, shouldInvite) {
        var _this = this;

        var vendor = this.modelFor('vendor.show');
        var options = {
          shouldInvite: shouldInvite
        };

        user.save().then(function (user) {
          vendor.get('vendorUserAssociations').createRecord({
            user: user,
            roles: vendorRoles
          }).save({ adapterOptions: options }).then(function () {
            _this.get('flashMessages').success(_this.t('createdUser', {
              userName: user.get('firstName'),
              vendorName: vendor.get('name')
            }));
            _this.refresh();
          });
        });
      }
    },

    _eagerLoadedAssociations: function _eagerLoadedAssociations(vendorId) {
      return this.store.query('vendorUserAssociation', {
        vendorId: vendorId
      }).then(function (associations) {
        return _ember['default'].RSVP.Promise.all(associations.map(function (association) {
          return association.get('user');
        })).then(function () {
          return associations;
        });
      });
    }
  });
});
define("goods-gateway/vendor/show/users/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 17,
                    "column": 16
                  },
                  "end": {
                    "line": 23,
                    "column": 16
                  }
                },
                "moduleName": "goods-gateway/vendor/show/users/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                  ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [19, 28], [19, 43]]], 0, 0, 0, 0], "userName"], [], ["loc", [null, [19, 20], [19, 55]]], 0, 0]], ["firstName", ["subexpr", "@mut", [["get", "user.firstName", ["loc", [null, [20, 30], [20, 44]]], 0, 0, 0, 0]], [], [], 0, 0], "lastName", ["subexpr", "@mut", [["get", "user.lastName", ["loc", [null, [21, 29], [21, 42]]], 0, 0, 0, 0]], [], [], 0, 0]], ["loc", [null, [18, 18], [22, 20]]], 0, 0]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 23,
                    "column": 16
                  },
                  "end": {
                    "line": 25,
                    "column": 16
                  }
                },
                "moduleName": "goods-gateway/vendor/show/users/template.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                  ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [24, 30], [24, 45]]], 0, 0, 0, 0], "noName"], [], ["loc", [null, [24, 22], [24, 55]]], 0, 0]], [], ["loc", [null, [24, 18], [24, 57]]], 0, 0]],
              locals: [],
              templates: []
            };
          })();
          var child2 = (function () {
            var child0 = (function () {
              return {
                meta: {
                  "revision": "Ember@2.8.2",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 28,
                      "column": 18
                    },
                    "end": {
                      "line": 30,
                      "column": 18
                    }
                  },
                  "moduleName": "goods-gateway/vendor/show/users/template.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                    ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "t", [["subexpr", "concat", ["constants.vendorRoles.", ["get", "role", ["loc", [null, [29, 57], [29, 61]]], 0, 0, 0, 0], ".label"], [], ["loc", [null, [29, 24], [29, 71]]], 0, 0]], [], ["loc", [null, [29, 20], [29, 73]]], 0, 0]],
                locals: [],
                templates: []
              };
            })();
            return {
              meta: {
                "revision": "Ember@2.8.2",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 27,
                    "column": 16
                  },
                  "end": {
                    "line": 31,
                    "column": 16
                  }
                },
                "moduleName": "goods-gateway/vendor/show/users/template.hbs"
              },
              isEmpty: false,
              arity: 1,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "mx-dot", [], ["color", ["subexpr", "get", [["get", "colorMap", ["loc", [null, [28, 39], [28, 47]]], 0, 0, 0, 0], ["get", "role", ["loc", [null, [28, 48], [28, 52]]], 0, 0, 0, 0]], [], ["loc", [null, [28, 34], [28, 53]]], 0, 0]], 0, null, ["loc", [null, [28, 18], [30, 29]]]]],
              locals: ["role"],
              templates: [child0]
            };
          })();
          return {
            meta: {
              "revision": "Ember@2.8.2",
              "loc": {
                "source": null,
                "start": {
                  "line": 13,
                  "column": 8
                },
                "end": {
                  "line": 38,
                  "column": 8
                }
              },
              "moduleName": "goods-gateway/vendor/show/users/template.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "row");
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("dl");
              dom.setAttribute(el2, "class", "user");
              var el3 = dom.createTextNode("\n              ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("dt");
              var el4 = dom.createTextNode("\n");
              dom.appendChild(el3, el4);
              var el4 = dom.createComment("");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n");
              dom.appendChild(el3, el4);
              var el4 = dom.createComment("");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("              ");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n              ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("dd");
              var el4 = dom.createTextNode("\n                ");
              dom.appendChild(el3, el4);
              var el4 = dom.createComment("");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n              ");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1, 1]);
              var element1 = dom.childAt(element0, [1]);
              var morphs = new Array(3);
              morphs[0] = dom.createMorphAt(element1, 1, 1);
              morphs[1] = dom.createMorphAt(element1, 3, 3);
              morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
              return morphs;
            },
            statements: [["block", "if", [["get", "user.firstName", ["loc", [null, [17, 22], [17, 36]]], 0, 0, 0, 0]], [], 0, 1, ["loc", [null, [17, 16], [25, 23]]]], ["block", "each", [["get", "association.roles", ["loc", [null, [27, 24], [27, 41]]], 0, 0, 0, 0]], [], 2, null, ["loc", [null, [27, 16], [31, 25]]]], ["content", "user.email", ["loc", [null, [34, 16], [34, 30]]], 0, 0, 0, 0]],
            locals: ["user"],
            templates: [child0, child1, child2]
          };
        })();
        return {
          meta: {
            "revision": "Ember@2.8.2",
            "loc": {
              "source": null,
              "start": {
                "line": 12,
                "column": 6
              },
              "end": {
                "line": 39,
                "column": 6
              }
            },
            "moduleName": "goods-gateway/vendor/show/users/template.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "with", [["get", "association.user", ["loc", [null, [13, 16], [13, 32]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [13, 8], [38, 17]]]]],
          locals: ["association"],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "revision": "Ember@2.8.2",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 4
            },
            "end": {
              "line": 40,
              "column": 4
            }
          },
          "moduleName": "goods-gateway/vendor/show/users/template.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "model", ["loc", [null, [12, 14], [12, 19]]], 0, 0, 0, 0]], [], 0, null, ["loc", [null, [12, 6], [39, 15]]]]],
        locals: ["colorMap"],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/vendor/show/users/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("section");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "md-column");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0, 1, 1]), 1, 1);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2, 1]), 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4, 1]), 1, 1);
        return morphs;
      },
      statements: [["inline", "t", [["subexpr", "concat", [["get", "translationRoot", ["loc", [null, [4, 18], [4, 33]]], 0, 0, 0, 0], "title"], [], ["loc", [null, [4, 10], [4, 42]]], 0, 0]], [], ["loc", [null, [4, 6], [4, 44]]], 0, 0], ["block", "with", [["subexpr", "hash", [], ["owner", "green", "member", "blue"], ["loc", [null, [11, 12], [11, 46]]], 0, 0]], [], 0, null, ["loc", [null, [11, 4], [40, 13]]]], ["inline", "vp-edit-vendor/add-vendor-user", [], ["createUser", "createUser"], ["loc", [null, [46, 4], [46, 62]]], 0, 0]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("goods-gateway/vendor/template", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "revision": "Ember@2.8.2",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 0
          }
        },
        "moduleName": "goods-gateway/vendor/template.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "md-column");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("h1");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "id", "vendor-search");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "md-column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [4]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(dom.childAt(element0, [1, 1, 1]), 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element0, [3, 1]), 1, 1);
        morphs[4] = dom.createMorphAt(element0, 5, 5);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "page-title", [["subexpr", "t", ["vendors.title"], [], ["loc", [null, [1, 8], [1, 27]]], 0, 0]], [], ["loc", [null, [1, 0], [1, 29]]], 0, 0], ["inline", "page-title", [["get", "query", ["loc", [null, [2, 8], [2, 13]]], 0, 0, 0, 0]], [], ["loc", [null, [2, 0], [2, 15]]], 0, 0], ["inline", "t", ["titles.vendors"], [], ["loc", [null, [8, 8], [8, 30]]], 0, 0], ["inline", "vp-field", [], ["type", "search", "inputId", "vendor-query", "model", ["subexpr", "@mut", [["get", "this", ["loc", [null, [18, 14], [18, 18]]], 0, 0, 0, 0]], [], [], 0, 0], "key", "query", "showLabel", false], ["loc", [null, [15, 6], [21, 8]]], 0, 0], ["content", "outlet", ["loc", [null, [25, 2], [25, 12]]], 0, 0, 0, 0]],
      locals: [],
      templates: []
    };
  })());
});
/* jshint ignore:start */



/* jshint ignore:end */

/* jshint ignore:start */

define('goods-gateway/config/environment', ['ember'], function(Ember) {
  var prefix = 'goods-gateway';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = document.querySelector('meta[name="' + metaName + '"]').getAttribute('content');
  var config = JSON.parse(unescape(rawConfig));

  var exports = { 'default': config };

  Object.defineProperty(exports, '__esModule', { value: true });

  return exports;
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */

});

/* jshint ignore:end */

/* jshint ignore:start */

if (!runningTests) {
  require("goods-gateway/app")["default"].create({"name":"goods-gateway","version":"0.0.0+e38ff826"});
}

/* jshint ignore:end */
//# sourceMappingURL=goods-gateway.map
